{"version":3,"sources":["utils/contexts.js","utils/useRootNavigation.js","screens/Loading.js","screens/Login.js","screens/SignUp.js","utils/hashStringToColor.js","screens/Home.js","screens/Settings.js","screens/Project.js","utils/constants.js","screens/Notification.js","screens/ProjectOptions.js","App.js"],"names":["ProjectsContext","React","createContext","DeepLinkContext","MainStackLoadedContext","navigationRef","createRef","dispatch","action","current","linkTo","path","config","state","getStateFromPath","getActionFromState","undefined","useRootNavigation","Loading","View","style","styles","container","Text","loadingText","ActivityIndicator","size","color","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","marginBottom","Login","navigation","useState","email","setEmail","password","setPassword","errorMessage","setErrorMessage","useEffect","SplashScreen","Platform","OS","WebBrowser","Constants","appOwnership","GoogleSignIn","catch","message","Alert","alert","Google","expoClientId","webClientId","androidClientId","iosClientId","request","response","promptAsync","console","log","type","id_token","params","credential","firebase","auth","GoogleAuthProvider","signInWithCredential","error","KeyboardAvoidingView","behavior","SafeAreaView","title","textInputBox","TextInput","placeholder","placeholderTextColor","autoCapitalize","textInput","onChangeText","value","secureTextEntry","TouchableOpacity","submitButton","onPress","signInWithEmailAndPassword","then","user","includes","substring","indexOf","fontSize","disabled","button","light","a","async","idToken","titleStyle","navigate","borderBottomColor","borderBottomWidth","alignSelf","height","fontWeight","padding","borderRadius","margin","SignUp","route","createUserWithEmailAndPassword","string","total","charCodeAt","firstPartOfString","toString","substr","prefix","Linking","Home","useContext","listenToProject","projectsData","stopListeningToProject","loading","setLoading","projects","setProjects","numberOfProjects","setNumberOfProjects","visible","setVisible","projectName","setProjectName","initialDeepLink","mainStackLoadedRef","useLinkTo","currentUserUid","currentUser","uid","db","firestore","setNotificationCategories","Notifications","identifier","buttonTitle","options","opensAppToForeground","isAuthenticationRequired","isDestructive","previewPlaceholder","submitButtonTitle","isDevice","existingStatus","status","finalStatus","token","data","collection","doc","set","FieldValue","arrayUnion","merge","name","importance","MAX","vibrationPattern","lightColor","registerForPushNotificationsAsync","useLayoutEffect","parsedDeepLink","length","queue","projectsLoaded","openDrawer","mainStackLoaded","encodeURI","subscriptionFunctions","unsub","onSnapshot","includeMetadataChanges","metadata","hasPendingWrites","some","projectObj","subFunc","filter","subtitle","timestamp","sort","b","JSON","stringify","push","toggleOverlay","isVisible","onBackdropPress","ModalComponent","WebModal","Modal","overlayStyle","width","maxWidth","bottom","toUpperCase","match","code","leftComponent","icon","centerComponent","text","rightComponent","LinearGradient","colors","start","x","y","end","FlatList","renderItem","item","marginVertical","bottomDivider","topDivider","linearGradientProps","hashStringToColor","ViewComponent","containerStyle","rounded","Content","Title","listItemTitle","Subtitle","listItemSubtitle","Chevron","keyExtractor","ListFooterComponent","textDecorationLine","controlsColor","showTitle","ListEmptyComponent","flexGrow","marginTop","paddingTop","paddingHorizontal","textAlign","Settings","Button","signOut","Project","projTitle","notifications","updateNotifications","isLargeScreen","useWindowDimensions","handleProjUpdate","newData","setOptions","headerRight","headerLeft","reverse","index","listItem","body","getSubtitle","left","Date","toLocaleString","groups","Notification","resValue","notification","updateNotification","webhookParamValue","setWebhookParamValue","webhookRes","setWebhookRes","checkCanDelete","canDelete","setCanDelete","oldState","dangerouslyGetState","routes","prevRoute","reset","newIndex","setParams","goBack","deleteNotification","arrayRemove","headerButtonTitle","ScrollView","headerView","h1","subheaderView","textMargin","h4","right","dataView","webhook","webhookParam","url","fetch","res","e","flexDirection","groupDescriptions","users","setUsers","currentGroupNum","setCurrentGroupNum","canLeave","setCanLeave","profileInfoMap","useRef","tempCurrentGroupNum","tempUsers","groupName","group","profile","method","headers","json","removeUser","getIdToken","project","contentContainerStyle","userElements","itemIndex","controller","key","zIndex","source","uri","photoURL","displayName","adjustsFontSizeToFit","numberOfLines","items","map","el","label","defaultValue","itemStyle","overflow","instance","onChangeItem","newValue","selectItem","cancelable","onDismiss","updateObj","forEach","update","arr","groupIndex","descContainer","groupTitle","groupText","groupDesc","buttonStyle","deleteButton","delete","leaveButton","explanationText","paddingBottom","marginRight","flexBasis","flexShrink","flexWrap","marginHorizontal","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","err","Stack","createStackNavigator","Drawer","createDrawerNavigator","App","callbacks","listeners","notificationListener","responseListener","setTimeout","loaded","setInitialDeepLink","Dimensions","get","openLinkInApp","appUrl","notifContent","content","showMessage","description","hideStatusBar","firebaseData","notifMetaData","actionIdentifier","userText","fetchCallback","resStr","errored","useReducer","prevState","isLoading","isSignedIn","onAuthStateChanged","projContext","callback","callOnInit","invCallback","warn","splice","ProjectStack","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","Screen","component","ProjectOptions","NavigationContainer","ref","linking","prefixes","screens","ProjectsDrawerScreen","Projects","subscribe","listener","onReceiveURL","Provider","headerShown","animationTypeForReplace","drawerType","drawerStyle","overlayColor","drawerContent","props","gestureEnabled","position"],"mappings":"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","file":"static/js/app.fdeb1e0d.chunk.js","sourcesContent":["import React from 'react';\r\nexport const ProjectsContext = React.createContext();\r\nexport const DeepLinkContext = React.createContext();\r\nexport const MainStackLoadedContext = React.createContext();","import { createRef } from 'react';\r\nimport { getActionFromState, getStateFromPath } from '@react-navigation/native';\r\n\r\nexport const navigationRef = createRef();\r\n\r\nexport function dispatch(action) {\r\n    navigationRef.current?.dispatch(action);\r\n}\r\n\r\nexport function linkTo(path, config = null) {\r\n  var state = getStateFromPath(path, config);\r\n  var action = getActionFromState(state);\r\n  if (action !== undefined) {\r\n    dispatch(action);\r\n  }\r\n}\r\n\r\nconst useRootNavigation = () => ({\r\n    navigationRef,\r\n  linkTo\r\n});\r\n\r\nexport default useRootNavigation","import React from 'react';\r\nimport { View, Text, ActivityIndicator, StyleSheet } from 'react-native'\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.loadingText}>Loading</Text>\r\n      <ActivityIndicator size=\"large\" color=\"white\"/>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor:\"red\"\r\n  },\r\n  loadingText:{\r\n    marginBottom:20,\r\n    color:\"white\"\r\n  }\r\n})","import React from 'react';\r\nimport { StyleSheet, Text, TextInput, View, Alert, KeyboardAvoidingView, TouchableOpacity, SafeAreaView, Platform} from 'react-native'\r\nimport firebase from 'firebase';\r\nimport * as Google from 'expo-auth-session/providers/google';\r\n// import * as Google from 'expo-google-app-auth';\r\nimport * as GoogleSignIn from 'expo-google-sign-in';\r\nimport { SocialIcon } from 'react-native-elements';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport { Button } from 'react-native-elements';\r\nimport Constants from 'expo-constants';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nWebBrowser.maybeCompleteAuthSession();\r\n\r\nexport default function Login({ navigation }) {\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState(null);\r\n  \r\n  React.useEffect(()=>{SplashScreen.hideAsync()},[true])\r\n\r\n  function handleLogin() {\r\n    firebase\r\n    .auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((user) => {\r\n      //if(checkUserFeilds(doc.data()))\r\n        //navigation.navigate('LoggedIn')\r\n      // else\r\n      //   navigation.navigate('SetUp')\r\n    })\r\n    .catch(error => {\r\n      if(error.message.includes(\"The user may have been deleted\"))\r\n        error.message = error.message.substring(0,error.message.indexOf(\"The user may have been deleted\"))\r\n      Alert.alert(error.message)\r\n      setErrorMessage(error.message)\r\n    })\r\n  }  \r\n\r\n  React.useEffect(() => {\r\n    if(Platform.OS == 'android'){\r\n      WebBrowser.warmUpAsync();\r\n      \r\n      return () => {\r\n        WebBrowser.coolDownAsync();\r\n      };\r\n    }\r\n    if(Constants.appOwnership == \"standalone\"){ // init native sign in with google logic\r\n\r\n      GoogleSignIn.initAsync({\r\n        // You may ommit the clientId when the firebase `googleServicesFile` is configured\r\n        // clientId: '<YOUR_IOS_CLIENT_ID>',\r\n        // Provide other custom options...\r\n      }).catch (({ message }) => {\r\n        Alert.alert('GoogleSignIn.initAsync(): ' + message);\r\n      })\r\n    }\r\n\r\n  }, []);\r\n\r\n  // const config = {\r\n  //   //\r\n  //   //androidClientId:\"\",\r\n  //   iosClientId: \"896187396809-2ks3dj1dogegfsc8a9jr32s33tt4rben.apps.googleusercontent.com\",\r\n  //   androidClientId: \"896187396809-tn8u9tp3thnvv07njp6ik46j8ot6k6lc.apps.googleusercontent.com\"\r\n  // }\r\n\r\n  const [request, response, promptAsync] = Google.useIdTokenAuthRequest(\r\n    {\r\n      expoClientId: '896187396809-tn4obhk9l23t5u8uhmrspmn89iph7lr0.apps.googleusercontent.com',\r\n      webClientId: '896187396809-5tbhq093deljombkbflt9c5mrfu7qvum.apps.googleusercontent.com',\r\n      // clientId: '896187396809-89ltb58u1or8fnetjgn90btpmb4ghmaq.apps.googleusercontent.com',\r\n      androidClientId: '896187396809-i55h6jach0jrja5studqj9dr2iiuhf8a.apps.googleusercontent.com',\r\n      iosClientId: \"896187396809-2ks3dj1dogegfsc8a9jr32s33tt4rben.apps.googleusercontent.com\",\r\n    },\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    console.log(\"response: \")\r\n    console.log(response)\r\n    if (response?.type === 'success') {\r\n      const { id_token } = response.params;\r\n      console.log(id_token)\r\n      const credential = firebase.auth.GoogleAuthProvider.credential(id_token);\r\n      firebase.auth().signInWithCredential(credential).catch((error) => {\r\n        console.log(error)\r\n        Alert.alert(error.message)\r\n      });\r\n    }\r\n  }, [response]);\r\n\r\n  return (\r\n    <KeyboardAvoidingView behavior={Platform.OS==\"ios\"?\"padding\":\"height\"} style={styles.container}>\r\n      <SafeAreaView style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Text style={styles.title}>Login</Text>\r\n        {errorMessage &&\r\n        <Text style={styles.errorMessage}>\r\n            {errorMessage}\r\n        </Text>} \r\n        <View style={styles.textInputBox}>\r\n          <TextInput\r\n            placeholder=\"Email\"\r\n            placeholderTextColor=\"white\"\r\n            autoCapitalize=\"none\"\r\n            style={styles.textInput}\r\n            onChangeText={setEmail}\r\n            value={email}\r\n          />\r\n        </View>\r\n        <View style={styles.textInputBox}>\r\n          <TextInput\r\n            secureTextEntry\r\n            placeholder=\"Password\"\r\n            placeholderTextColor=\"white\"\r\n            autoCapitalize=\"none\"\r\n            style={styles.textInput}\r\n            onChangeText={setPassword}\r\n            value={password}\r\n          />\r\n        </View>\r\n        <TouchableOpacity \r\n          style={[styles.submitButton,{backgroundColor:\"blue\"}]}\r\n          onPress={handleLogin}\r\n        >\r\n          <Text style={{color:\"white\",fontSize:20,}}>Sign In</Text>\r\n        </TouchableOpacity>\r\n        <SocialIcon\r\n          title={\"Sign In With Google\"}\r\n          disabled={(Constants.appOwnership != \"standalone\" || Platform.OS == 'web') && !request}\r\n          button={true}\r\n          light\r\n          style={styles.submitButton}\r\n          type={\"google\"}\r\n          onPress={async ()=>{\r\n            if(Constants.appOwnership != \"standalone\" || Platform.OS == 'web') {\r\n              console.log(\"promting async\")\r\n              promptAsync()\r\n            } else {\r\n              try {\r\n                await GoogleSignIn.askForPlayServicesAsync();\r\n                const { type, user } = await GoogleSignIn.signInAsync();\r\n                if (type === 'success') {\r\n                  const idToken = user.auth.idToken\r\n                  console.log(idToken)\r\n                  const credential = firebase.auth.GoogleAuthProvider.credential(idToken);\r\n                  firebase.auth().signInWithCredential(credential).catch((error) => {\r\n                    console.log(error)\r\n                    Alert.alert(error.message)\r\n                  });\r\n                }\r\n              } catch ({ message }) {\r\n                Alert.alert('login: Error:' + message);\r\n              }\r\n            }\r\n          }}\r\n        />\r\n        <Button\r\n          titleStyle={{color:\"white\"}}//\"#d1faff\"\r\n          title=\"Don't have an account? Sign Up\"\r\n          disabled={(Constants.appOwnership != \"standalone\" || Platform.OS != 'web') && !request}\r\n          onPress={() => navigation.navigate('SignUp',{email})}\r\n          type=\"clear\"\r\n        />\r\n      </SafeAreaView>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor:\"red\",\r\n  },\r\n  textInputBox: {\r\n    borderBottomColor:\"white\",\r\n    borderBottomWidth: 1,\r\n    marginBottom: 40,\r\n    alignSelf: 'stretch',\r\n  },\r\n  textInput: {\r\n    fontSize: 24,\r\n    height: 40,\r\n    fontWeight: '200',\r\n    marginBottom: 0,\r\n    color:\"white\",\r\n  },\r\n  title: {\r\n    fontSize:50,\r\n    marginBottom:30,\r\n    color:\"white\"\r\n  },\r\n  submitButton:{\r\n    alignItems: 'center',\r\n    padding:15,\r\n    borderRadius:7,\r\n    marginBottom:10,\r\n    margin:7,\r\n    alignSelf: 'stretch',\r\n  },\r\n  errorMessage:{\r\n    color: 'blue', marginBottom:20\r\n  }\r\n})","import React from 'react'\r\nimport { StyleSheet, Text, TextInput, View,  Alert, KeyboardAvoidingView, TouchableOpacity, SafeAreaView } from 'react-native'\r\nimport firebase from 'firebase';\r\nimport { Button } from 'react-native-elements';\r\n\r\nexport default function SignUp({ navigation, route}) {\r\n    const [email, setEmail] = React.useState(route.params.email)\r\n    const [password, setPassword] = React.useState(null)\r\n    const [errorMessage, setErrorMessage] = React.useState(null)\r\n    const handleSignUp = () => {\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(() => {\r\n          // firebase.firestore().collection('Users').doc(currentUser.uid).onSnapshot((doc) => {\r\n          //   console.log(\"Current data: \", doc.data());\r\n          //   if(checkUserFeilds(doc.data()))\r\n          //     this.props.navigation.navigate('LoggedIn')\r\n          //   else\r\n          //     this.props.navigation.navigate('SetUp')\r\n          // });\r\n        })\r\n        .catch(error => {\r\n          setErrorMessage(error.message)\r\n          Alert.alert(error.message)\r\n        })\r\n    }\r\n    return (\r\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n        <SafeAreaView style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>{/*  SafeAreaView makes it nice looking on iPad */}\r\n          <Text style={styles.title}>Sign Up</Text>\r\n          {errorMessage &&\r\n          <Text style={{ color: 'blue', marginBottom:20 }}>\r\n              {errorMessage}\r\n          </Text>} \r\n          <View style={styles.textInputBox}>\r\n            <TextInput\r\n              placeholder=\"Email\"\r\n              placeholderTextColor=\"white\"\r\n              autoCapitalize=\"none\"\r\n              style={styles.textInput}\r\n              onChangeText={setEmail}\r\n              value={email}\r\n            />\r\n          </View>\r\n          <View style={styles.textInputBox}>\r\n            <TextInput\r\n              secureTextEntry\r\n              placeholder=\"Password\"\r\n              placeholderTextColor=\"white\"\r\n              autoCapitalize=\"none\"\r\n              style={styles.textInput}\r\n              onChangeText={setPassword}\r\n              value={password}\r\n            />\r\n          </View>\r\n          <TouchableOpacity \r\n            style={styles.submitButton}\r\n            onPress={handleSignUp}\r\n          >\r\n            <Text style={{color:\"white\",fontSize:20,}}>Create Account</Text>\r\n          </TouchableOpacity>\r\n          <Button\r\n            titleStyle={{color:\"white\"}}//\"#d1faff\"\r\n            title=\"Already have an account? Login\"\r\n            onPress={() => navigation.navigate('SignIn')}\r\n            type=\"clear\"\r\n          />\r\n        </SafeAreaView>\r\n      </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor:\"red\",\r\n    \r\n  },\r\n  textInputBox: {\r\n    borderBottomColor:\"white\",\r\n    borderBottomWidth: 1,\r\n    marginBottom: 40,\r\n    alignSelf: 'stretch',\r\n  },\r\n  textInput: {\r\n    alignSelf: 'stretch',\r\n    fontSize: 24,\r\n    height: 40,\r\n    fontWeight: '200',\r\n    marginBottom: 0,\r\n    color:\"white\",\r\n  },\r\n  title: {\r\n    fontSize:50,\r\n    marginBottom:30,\r\n    color:\"white\"\r\n  },\r\n  submitButton:{\r\n    alignItems: 'center',\r\n    backgroundColor:\"blue\",\r\n    alignSelf: 'stretch',\r\n    padding:15,\r\n    borderRadius:7,\r\n    marginBottom:10\r\n  },\r\n})","export default (string)=>{\r\n    let total = 0;\r\n    for(let char of string)\r\n        total += char.charCodeAt(0)\r\n    // '}' is 125\r\n    // ' ' is 32\r\n    total%=126\r\n    // total-=32\r\n    total/=(126)\r\n    const firstPartOfString = '#' + total.toString(16).substr(2, 6)\r\n    console.log(firstPartOfString)\r\n    return [ firstPartOfString + \"00\", firstPartOfString + \"30\"]\r\n}","import React, { useRef, useContext, useLayoutEffect, useEffect } from 'react'\r\nimport { StyleSheet, Platform, Image, Text, View, FlatList, ActivityIndicator, Modal, SafeAreaView, TextInput, KeyboardAvoidingView, ScrollView } from 'react-native'\r\nimport { ListItem, Button, Overlay, Avatar, Header } from 'react-native-elements'\r\nimport firebase from 'firebase';\r\nimport * as Notifications from 'expo-notifications'\r\nimport Constants from 'expo-constants';\r\nimport WebModal from 'modal-react-native-web';\r\nimport hashStringToColor from '../utils/hashStringToColor'\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { ProjectsContext, DeepLinkContext, MainStackLoadedContext } from '../utils/contexts'\r\nimport { showMessage, hideMessage } from \"react-native-flash-message\";\r\nimport * as Linking from 'expo-linking';\r\nimport { useFocusEffect, useLinkTo } from '@react-navigation/native';\r\nimport { Alert } from 'react-native';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\n\r\nconst prefix = Linking.createURL('/');\r\n\r\nexport default function Home({ navigation }) {\r\n  const { projectsData, listenToProject, stopListeningToProject } = React.useContext(ProjectsContext);\r\n  // const notificationListener = useRef();\r\n  // const responseListener = useRef();\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [projects, setProjects] = React.useState([]);\r\n  const [numberOfProjects, setNumberOfProjects] = React.useState(null);\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [projectName, setProjectName] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const initialDeepLink = useContext(DeepLinkContext)\r\n  const mainStackLoadedRef = useContext(MainStackLoadedContext)\r\n  const linkTo = useLinkTo();\r\n\r\n  const currentUserUid = firebase.auth().currentUser.uid;\r\n  const db = firebase.firestore();\r\n\r\n  const resetModalState = () => {\r\n    setProjectName('')\r\n    setErrorMessage('')\r\n  }\r\n\r\n  async function createNewProject() {\r\n    const valid = await checkProjName()\r\n    if (valid) {\r\n      try{\r\n        await db.collection('Projects').doc(projectName.toUpperCase()).set({\r\n          'Owner': firebase.firestore.FieldValue.arrayUnion(currentUserUid)\r\n        })\r\n        await db.collection('Users').doc(currentUserUid).set({\r\n          'Projects': firebase.firestore.FieldValue.arrayUnion(projectName.toUpperCase())\r\n        }, { merge: true })\r\n        setVisible(false)\r\n      } catch(e) {\r\n        if(e.code == \"permission-denied\" || e.code == \"already-exists\"){\r\n          setErrorMessage(`Name already taken: ${projectName}`)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async function checkProjName() {\r\n    if (projectName.toUpperCase().length < 2) {\r\n      setErrorMessage(`Your name must be at least 2 characters. You only have: ${projectName.length}`)\r\n      return false\r\n    }\r\n    if (!projectName.toUpperCase().match(\"^[A-Z0-9]+$\")){\r\n      setErrorMessage(`Your name must only have letters and numbers (no spaces or special characters)`)\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  async function registerForPushNotificationsAsync() {\r\n      const { status: existingStatus } = await Notifications.getPermissionsAsync();\r\n      let finalStatus = existingStatus;\r\n      if (existingStatus !== 'granted') {\r\n        const { status } = await Notifications.requestPermissionsAsync();\r\n        finalStatus = status;\r\n      }\r\n      if (finalStatus !== 'granted') {\r\n        alert('Failed to get push token for push notification!');\r\n        return;\r\n      }\r\n      const token = (await Notifications.getExpoPushTokenAsync()).data;\r\n      console.log(token);\r\n      firebase.firestore().collection('Users').doc(currentUserUid).set({\r\n        'Push Tokens': firebase.firestore.FieldValue.arrayUnion(token)\r\n      }, { merge: true })\r\n\r\n\r\n    if (Platform.OS === 'android') {\r\n      Notifications.setNotificationChannelAsync('default', {\r\n        name: 'default',\r\n        importance: Notifications.AndroidImportance.MAX,\r\n        vibrationPattern: [0, 250, 250, 250],\r\n        lightColor: '#FF00007C',\r\n      });\r\n    }\r\n  };\r\n\r\n  async function setNotificationCategories() {\r\n    await Notifications.setNotificationCategoryAsync(\"standard\",[\r\n      {\r\n        identifier:\"deleteNotif\", \r\n        buttonTitle: \"Delete\",\r\n        options: {\r\n          opensAppToForeground:false,\r\n          isAuthenticationRequired:true,\r\n          isDestructive:true\r\n        }\r\n      }\r\n    ],{previewPlaceholder:\"NotiBot Notification\"})\r\n    await Notifications.setNotificationCategoryAsync(\"webhookbutton\",[\r\n      {\r\n        identifier:\"webhookAction\", \r\n        buttonTitle: \"Trigger Webhook Action\",\r\n        options: {\r\n          opensAppToForeground:true,\r\n          isAuthenticationRequired:true,\r\n          isDestructive:false\r\n        }\r\n      },\r\n      {\r\n        identifier:\"deleteNotif\", \r\n        buttonTitle: \"Delete\",\r\n        options: {\r\n          opensAppToForeground:true,\r\n          isAuthenticationRequired:true,\r\n          isDestructive:true\r\n        }\r\n      }\r\n    ],{previewPlaceholder:\"NotiBot Notification With Webhook Action\"})\r\n    await Notifications.setNotificationCategoryAsync(\"webhooktext\",[\r\n      {\r\n        identifier:\"webhookReply\", \r\n        buttonTitle: \"Send Text to Webhook\",\r\n        textInput:{\r\n          submitButtonTitle:\"SEND\",\r\n          placeholder:\"\"\r\n        },\r\n        options: {\r\n          opensAppToForeground:true,\r\n          isAuthenticationRequired:true,\r\n          isDestructive:false\r\n        }\r\n      },\r\n      {\r\n        identifier:\"deleteNotif\", \r\n        buttonTitle: \"Delete\",\r\n        options: {\r\n          opensAppToForeground:true,\r\n          isAuthenticationRequired:true,\r\n          isDestructive:true\r\n        }\r\n      }\r\n    ],{previewPlaceholder:\"NotiBot Notification With Webhook Reply\"})\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (Constants.isDevice && Platform.OS !== 'web') { //Expo's support for web push is \"pending\"\r\n     registerForPushNotificationsAsync().then(setNotificationCategories)\r\n    }\r\n      \r\n  }, [true])\r\n\r\n\r\n  React.useLayoutEffect(()=>{\r\n    const parsedDeepLink = initialDeepLink?.substring(prefix.length-1)\r\n    if(parsedDeepLink && parsedDeepLink.length>1 && parsedDeepLink[0]=='/') {\r\n      // Moved to a separate effect so it wont get triggers everytime projects changes\r\n      // linkTo(parsedDeepLink)\r\n    }else if(numberOfProjects === projects.length && !mainStackLoadedRef.current.queue && mainStackLoadedRef.current.projectsLoaded == false) { // projects have finished downloading\r\n      mainStackLoadedRef.current.projectsLoaded = true\r\n      if(projects.length>0){\r\n        console.log(\"opening most recent project!\")\r\n        navigation.navigate(\"Project\", { title: projects[0].title })\r\n      }\r\n      navigation.openDrawer()\r\n    }\r\n    mainStackLoadedRef.current.mainStackLoaded()\r\n  },[projects, numberOfProjects])\r\n\r\n  React.useEffect(()=>{ // handle deep links\r\n    const parsedDeepLink = initialDeepLink?.substring(prefix.length-1)\r\n    if(parsedDeepLink && parsedDeepLink.length>1 && parsedDeepLink[0]=='/')\r\n      linkTo(encodeURI(parsedDeepLink))\r\n  },[true])\r\n\r\n  React.useLayoutEffect(() => {\r\n    const subscriptionFunctions = []\r\n    const unsub = firebase.firestore().collection('Users').doc(currentUserUid).onSnapshot({\r\n      includeMetadataChanges: true\r\n    }, (doc) => {\r\n      const source = doc.metadata.hasPendingWrites ? \"Local\" : \"Server\";\r\n      if (source == \"Server\") {\r\n        let data = (doc.data() && doc.data()[\"Projects\"]) ? doc.data()[\"Projects\"] : []\r\n        console.log(doc.data());\r\n        console.log(\"Current data: \" + data);\r\n        for (let projectName of data) {\r\n          if (!projects.some(projectObj=>projectObj.title == projectName)) {\r\n            const subFunc = (data) => {\r\n              setProjects(projects => {\r\n                projects = projects.filter(projectObj=>projectObj.title!=projectName)\r\n                if (data) {\r\n                  projects = [{\r\n                    title: projectName,\r\n                    subtitle: data?.Notifications && data.Notifications.length > 0 ? data.Notifications[data.Notifications.length - 1].title : `No notifications yet!`,\r\n                    timestamp: data?.Notifications && data.Notifications.length > 0 ? data.Notifications[data.Notifications.length - 1].timestamp : 0\r\n                  }, ...projects]\r\n                  console.log(`adding project to array: ${projectName}`)\r\n                }\r\n                projects.sort((a, b) => b?.timestamp - a?.timestamp)\r\n                setLoading(false)\r\n                console.log(`new projects: ${JSON.stringify(projects)}`)\r\n                return projects\r\n              })\r\n\r\n            }\r\n            listenToProject(projectName, subFunc, true)\r\n            subscriptionFunctions.push({ projectName, subFunc })\r\n          }\r\n        }\r\n        setNumberOfProjects(data.length)\r\n        if (data.length == 0) {\r\n          setLoading(false)\r\n        }\r\n      }\r\n    });\r\n    return () => {\r\n      for (let { projectName, subFunc } of subscriptionFunctions)\r\n        stopListeningToProject(projectName, subFunc)\r\n      unsub()\r\n    }\r\n  }, []);\r\n\r\n  const toggleOverlay = () => {\r\n    resetModalState()\r\n    setVisible(!visible);\r\n  };\r\n\r\n  //console.log(`projectsData: ${JSON.stringify(projectsData)}`)\r\n  return (\r\n    <>\r\n      <Overlay isVisible={visible} onBackdropPress={toggleOverlay} ModalComponent={Platform.OS === 'web' ? WebModal : Modal} overlayStyle={[Platform.OS != 'web' ? { width: \"80%\", margin: \"30%\", maxWidth: 400 /*,flexGrow:1,flex:1,*/ } : {}, { backgroundColor: \"red\", borderRadius: 10, bottom: \"20%\" }]}>\r\n        <View>\r\n          <View style={styles.textInputBox}>\r\n            <TextInput\r\n              placeholder=\"Project Name\"\r\n              placeholderTextColor=\"white\"\r\n              autoCapitalize=\"none\"\r\n              style={styles.textInput}\r\n              onChangeText={setProjectName}\r\n              value={projectName}\r\n            />\r\n          </View>\r\n          {errorMessage != '' &&\r\n            <Text style={styles.errorMessage}>\r\n              {errorMessage}\r\n            </Text>}\r\n          <Button\r\n            title=\"Create Project\"\r\n            onPress={createNewProject}\r\n          />\r\n        </View>\r\n      </Overlay>\r\n      <Header\r\n        backgroundColor=\"red\"\r\n        leftComponent={{ icon: 'plus', type: 'ant-design', color: 'white', onPress: toggleOverlay, size: 23 }}\r\n        centerComponent={{ text: 'Projects', style: { color: 'white', fontSize: 18, fontWeight: \"bold\" } }}\r\n        rightComponent={{ icon: \"settings\", type: 'feather', color: 'white', onPress: () => navigation.navigate('Settings'), size: 23 }}\r\n      />\r\n      <LinearGradient colors={[\"#ff000090\", \"red\"]} start={{ x: 0, y: .6 }} end={{ x: 0, y: 0 }} style={styles.container}>\r\n        {loading && <ActivityIndicator size=\"large\" />}\r\n        {!loading && <>\r\n          <FlatList\r\n            style={{ height: \"100%\", width: \"100%\" }}\r\n            data={projects}\r\n            renderItem={({ item }) => {\r\n              console.log(`item: ${JSON.stringify(item)}`)\r\n              return (<ListItem style={{ borderRadius: 20, marginVertical: 5 }} bottomDivider topDivider onPress={() => {\r\n                // navigation.closeDrawer()\r\n                navigation.navigate(\"Project\", { title: item.title })\r\n              }}\r\n                linearGradientProps={{\r\n                  colors: hashStringToColor(item.title),\r\n                  start: { x: 1, y: 0 },\r\n                  end: { x: 0, y: 0 },\r\n                }}\r\n                ViewComponent={LinearGradient}\r\n                containerStyle={{ borderRadius: 20 }}\r\n                >\r\n                <Avatar size=\"large\" rounded title={item.title.substring(0, 2)} />\r\n                <ListItem.Content>\r\n                  <ListItem.Title style={styles.listItemTitle}>{item.title}</ListItem.Title>\r\n                  <ListItem.Subtitle style={styles.listItemSubtitle}>{item.subtitle}</ListItem.Subtitle>\r\n                </ListItem.Content>\r\n                <ListItem.Chevron />\r\n              </ListItem>)\r\n            }}\r\n            keyExtractor={item => item.title}\r\n            ListFooterComponent={Platform.OS == 'web' && <Button title=\"Open Docs\" titleStyle={{textDecorationLine:\"underline\",color:\"white\"}} onPress={()=>WebBrowser.openBrowserAsync('https://notibotdocs.kihtrak.com',{controlsColor:'#FF0000',showTitle:true})} type=\"clear\"/>}\r\n            ListEmptyComponent={<View style={{ flex: 1, flexGrow: 1, justifyContent: 'center', alignItems: 'center', padding: 20 }}><Text style={{color:\"white\"}}>You currently have no projects</Text><Button style={{ marginTop: 10 }} title=\"Create a new project\" onPress={toggleOverlay} /></View>}\r\n          />\r\n        </>}\r\n      </LinearGradient>\r\n    </>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: \"center\",\r\n    paddingTop: 5,\r\n    paddingHorizontal: 5,\r\n  },\r\n  textInputBox: {\r\n    borderBottomColor: \"white\",\r\n    borderBottomWidth: 1,\r\n    marginBottom: 20,\r\n    alignSelf: 'stretch',\r\n  },\r\n  textInput: {\r\n    fontSize: 24,\r\n    height: 40,\r\n    fontWeight: '200',\r\n    marginBottom: 0,\r\n    color: \"white\",\r\n    textAlign: 'center'\r\n  },\r\n  errorMessage: {\r\n    color: 'blue', marginBottom: 20\r\n  },\r\n  listItemTitle: {\r\n    fontSize: 30,\r\n    fontWeight: \"bold\"\r\n  },\r\n  listItemSubtitle: {\r\n    //fontSize:20\r\n  }\r\n})","import React from 'react'\r\nimport { StyleSheet, Platform, Image, Text, View, FlatList, ActivityIndicator, Button} from 'react-native'\r\nimport { ListItem } from 'react-native-elements'\r\nimport firebase from 'firebase';\r\nimport '@firebase/firestore';\r\nimport { Notifications } from 'expo';\r\n\r\nexport default function Settings({navigation}) {\r\n  function signOut(){\r\n    firebase.auth().signOut().then(/*()=>navigation.navigate('Loading')*/).catch((error) => console.error('Sign Out Error', error))\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* <Button title=\"test\" onPress={()=>firebase.auth().currentUser.updateProfile({displayName: \"Demo\",photoURL: \"https://images-na.ssl-images-amazon.com/images/I/51zLZbEVSTL._AC_SL1200_.jpg\"})} /> */}\r\n      <Button title=\"Sign Out\" onPress={signOut}/>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  }\r\n})","import React, {useContext, useState} from 'react'\r\nimport { StyleSheet, Platform, Image, Text, View, FlatList, ActivityIndicator, Modal, SafeAreaView, TextInput, KeyboardAvoidingView, ScrollView, useWindowDimensions } from 'react-native'\r\nimport { ListItem, Button, Overlay, Avatar } from 'react-native-elements'\r\nimport WebModal from 'modal-react-native-web';\r\nimport * as Linking from 'expo-linking';\r\nimport { useLinkTo  } from '@react-navigation/native';\r\n\r\nimport { ProjectsContext, DeepLinkContext } from '../utils/contexts'\r\nimport { Alert } from 'react-native';\r\nimport Loading from './Loading';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nconst prefix = Linking.createURL('/');\r\n\r\nexport default function Project({ navigation, route }){\r\n    const {projectsData, listenToProject, stopListeningToProject} = useContext(ProjectsContext);\r\n    const projTitle = route.params?.title\r\n    const [notifications,updateNotifications] = useState(projectsData?.[projTitle]?.Notifications) //projectsData[projTitle] is guaranteed to exist due to previous screen\r\n    const dimensions = useWindowDimensions();\r\n    const isLargeScreen = dimensions.width >= 768;\r\n    \r\n    React.useEffect(()=>{\r\n      if(projTitle){\r\n        //updateNotifications(projectsData[projTitle].Notifications)\r\n        const handleProjUpdate = (newData)=>{\r\n          if(newData)\r\n            updateNotifications(newData.Notifications)\r\n          else\r\n            // navigation.goBack()\r\n            navigation.openDrawer()\r\n        }\r\n        listenToProject(projTitle,handleProjUpdate, true)\r\n        return ()=>stopListeningToProject(projTitle, handleProjUpdate)\r\n      }\r\n    },[projTitle])\r\n\r\n    // React.useEffect(()=>{\r\n    //   if(!projTitle)\r\n    //   navigation.openDrawer()\r\n    // },[navigation, projTitle])\r\n\r\n    React.useLayoutEffect(() => {\r\n          navigation.setOptions({...(projTitle?{\r\n            title: projTitle,\r\n            headerRight: () => (\r\n              <Button\r\n                icon={{\r\n                  name: \"ios-options-outline\",\r\n                  type:'ionicon',\r\n                  size: 25,\r\n                  color: \"white\"\r\n                }}\r\n                type=\"clear\"\r\n                onPress={()=>navigation.navigate(\"ProjectOptions\",{title:projTitle})}\r\n              />\r\n            ),\r\n          }:{title:\"\"}),\r\n          headerLeft:()=>{\r\n            if(isLargeScreen)\r\n              return null\r\n            return(\r\n              <Button\r\n                icon={{\r\n                  name: \"menu\",\r\n                  type:'entypo',\r\n                  size: 25,\r\n                  color: \"white\"\r\n                }}\r\n                type=\"clear\"\r\n                onPress={()=>navigation.openDrawer()}\r\n              />\r\n            )\r\n          }\r\n        });\r\n    }, [navigation, projTitle]);\r\n\r\n\r\n    // console.log(`projectsData: ${JSON.stringify(projectsData)}`)\r\n\r\n    const getSubtitle = (item) =>{\r\n        if(item.subtitle)\r\n            return item.subtitle\r\n        if(item.body)\r\n            return item.body\r\n        return \"\"\r\n    }\r\n\r\n\r\n    if(!projTitle){\r\n      // if(!isLargeScreen){\r\n      //   navigation.openDrawer()\r\n      //   return(<Loading/>)\r\n      // }\r\n      return(<View style={styles.container}>\r\n        <Text style={{fontSize:15, textAlign:\"center\"}}>Select a project</Text>\r\n      </View>)\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <FlatList\r\n            style={{height:\"100%\",width:\"100%\"}}\r\n            data={notifications?[...notifications].reverse():[]}\r\n            renderItem={({ item, index }) => <ListItem style={styles.listItem} bottomDivider topDivider onPress={\r\n              ()=>navigation.navigate(\"Notification\",{index: (notifications.length-1-index), timestamp: item.timestamp, projTitle})\r\n            }>\r\n                <ListItem.Content>\r\n                <ListItem.Title>{item.title.substring(0,30)}</ListItem.Title>\r\n                <ListItem.Subtitle>{getSubtitle(item).substring(0,40)}</ListItem.Subtitle>\r\n                <ListItem.Subtitle left>{new Date(item.timestamp).toLocaleString()}</ListItem.Subtitle>\r\n                </ListItem.Content>\r\n                <ListItem.Chevron/>\r\n            </ListItem>}\r\n            keyExtractor={item => item.title+item.timestamp}\r\n            ListEmptyComponent = {\r\n              <View style={{flex:1,flexGrow:1,height:\"100%\",justifyContent: 'center',alignItems: 'center', padding:20 }}>\r\n                <Text style={{fontSize:15, textAlign:\"center\",marginVertical:20}}>The project currently has no notifications</Text>\r\n\r\n                <Button title=\"Learn how to send yourself a notification\" titleStyle={{textDecorationLine:\"underline\"}} onPress={()=>WebBrowser.openBrowserAsync('https://notibotdocs.kihtrak.com',{controlsColor:'#FF0000',showTitle:true})} type=\"clear\"/>\r\n              </View>\r\n            }\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: \"center\"\r\n  }\r\n})","export const groups = [\"Owner\", \"Manager\", \"Subscriber\"]","import React from 'react'\r\nimport { StyleSheet, Platform, Image, ScrollView, FlatList, ActivityIndicator, Modal, SafeAreaView, TextInput, View, TouchableOpacity } from 'react-native'\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\r\nimport { ListItem, Button, Overlay, Avatar, Text } from 'react-native-elements'\r\nimport WebModal from 'modal-react-native-web';\r\nimport firebase from 'firebase';\r\nimport JSONTree from 'react-native-json-tree'\r\nimport Loading from './Loading'\r\n\r\nimport { ProjectsContext } from '../utils/contexts'\r\nimport { groups } from '../utils/constants'\r\n\r\nexport default function Notification({ navigation, route }){\r\n    const {projectsData, listenToProject, stopListeningToProject} = React.useContext(ProjectsContext);\r\n    const { index, timestamp, projTitle, resValue } = route.params\r\n    const [notification,updateNotification] = React.useState(projectsData?.[projTitle]?.Notifications?.[index]) //projectsData[projTitle].Notifications[index] is guaranteed to exist due to previous screen\r\n    const [webhookParamValue,setWebhookParamValue] = React.useState('')\r\n    const [webhookRes,setWebhookRes] = React.useState(resValue?resValue:'')\r\n\r\n    const checkCanDelete = () =>{\r\n        const currentUserUid = firebase.auth().currentUser.uid;\r\n        for(let index of [0,1])\r\n            if(projectsData?.[projTitle]?.[groups[index]]?.includes(currentUserUid))\r\n                return true\r\n        return false\r\n    }\r\n\r\n    const [canDelete,setCanDelete] = React.useState(checkCanDelete())\r\n\r\n    const db = firebase.firestore();\r\n\r\n    React.useLayoutEffect(()=>{\r\n        // Handle populating the previous state if the notification was opened with deep linking\r\n        const oldState = navigation.dangerouslyGetState()\r\n        console.log(\"oldState\")\r\n        console.log(JSON.stringify(oldState))\r\n        const {routes, index} = oldState\r\n        const prevRoute = routes?.[routes.length-2]\r\n        if(prevRoute?.name == \"Project\") // ensure that the correct screen came before\r\n            if(!prevRoute.params){ // only manually set params if they don't exist\r\n                prevRoute.params = {title: projTitle}\r\n                console.log(\"oldState\")\r\n                console.log(JSON.stringify(oldState))\r\n                navigation.reset({index, routes})\r\n            }\r\n    },[navigation])\r\n\r\n    React.useEffect(()=>{\r\n        const handleProjUpdate = (newData)=>{\r\n            if(newData && newData.Notifications){\r\n                let newIndex = /*index?index:*/newData.Notifications.length\r\n                while(newIndex>-1 && (!newData.Notifications[newIndex] || newData.Notifications[newIndex].timestamp > timestamp))\r\n                    newIndex--\r\n                if(newData.Notifications[newIndex] && newData.Notifications[newIndex].timestamp == timestamp){\r\n                    setCanDelete(checkCanDelete())\r\n                    updateNotification(newData.Notifications[newIndex])\r\n                    navigation.setParams({index: newIndex})\r\n                }else\r\n                    navigation.goBack()\r\n            }else\r\n                navigation.goBack()\r\n        }\r\n        listenToProject(projTitle,handleProjUpdate, true)\r\n        return ()=>stopListeningToProject(projTitle, handleProjUpdate)\r\n    },[projTitle,timestamp])\r\n\r\n    const deleteNotification=async ()=>{\r\n        await db.collection('Projects').doc(projTitle).set({\r\n            'Notifications':firebase.firestore.FieldValue.arrayRemove(notification)\r\n        }, { merge: true })\r\n    }\r\n\r\n    React.useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: notification?.title,\r\n            headerRight: () => canDelete\r\n                && <Button\r\n                    disabled={!canDelete}\r\n                    icon={{\r\n                        name: \"trash-outline\",\r\n                        type:'ionicon',\r\n                        size: 25,\r\n                        color: \"white\"\r\n                    }}\r\n                    type=\"clear\"\r\n                    titleStyle={styles.headerButtonTitle}\r\n                    onPress={deleteNotification}\r\n                />\r\n            ,\r\n        });\r\n    }, [navigation, canDelete, notification]);\r\n\r\n    const makeRequest = () => {\r\n        const url = notification.webhook+webhookParamValue\r\n        fetch(url).then(res=>res.text()).then(setWebhookRes).catch(e=>setWebhookRes(e.toString()))\r\n    }\r\n\r\n    if(!notification)\r\n        return(<Loading/>)\r\n\r\n    return (\r\n        <KeyboardAwareScrollView>\r\n            <ScrollView /*contentContainerStyle={styles.container}*/>\r\n                <SafeAreaView>\r\n                    <View style={styles.headerView}>\r\n                        <Text h1 style={{textAlign:\"center\"}}>{notification.title}</Text>\r\n                    </View>\r\n                    <View style={{alignItems: \"center\"}}>\r\n                        <View style={styles.subheaderView}>\r\n                            {notification.subtitle&&<Text style={styles.textMargin} h4 left>{notification.subtitle}</Text>}{notification.timestamp && <Text style={styles.textMargin} right>{`${new Date(notification.timestamp).toLocaleString()}\\nEpoch: ${notification.timestamp}`}</Text>}\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.dataView}>\r\n                        <Text style={[styles.textMargin,{fontSize:25}]}>{notification.body}</Text>\r\n                        {notification.webhook && <Text style={styles.textMargin}>Webhook: {notification.webhook}</Text>}\r\n                    </View>\r\n                    {notification.webhook && <View style={{alignItems: \"center\"}}>\r\n                        {notification.webhookParam && \r\n                        <View style={styles.textInputBox}>\r\n                            <TextInput\r\n                                placeholder=\"URL parameter value\"\r\n                                autoCapitalize=\"none\"\r\n                                style={styles.textInput}\r\n                                onChangeText={setWebhookParamValue}\r\n                                value={webhookParamValue}\r\n                            />\r\n                        </View>}\r\n                        <TouchableOpacity \r\n                            style={[styles.submitButton,{backgroundColor:\"green\"}]}\r\n                            onPress={makeRequest}\r\n                        >\r\n                            <Text style={{color:\"white\",fontSize:20,}}>Call {notification.webhook+webhookParamValue} {webhookRes && \"Again\"}</Text>\r\n                        </TouchableOpacity>\r\n                    </View>}\r\n                    <View style={styles.dataView}>\r\n                        {!!webhookRes && <Text style={styles.textMargin}>Response: {webhookRes}</Text>}\r\n                    </View>\r\n                </SafeAreaView>\r\n            </ScrollView>\r\n        </KeyboardAwareScrollView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    //justifyContent: 'center',\r\n  },\r\n  headerView:{\r\n    alignItems: \"center\",\r\n    margin:10\r\n  },\r\n  subheaderView: {\r\n    flex: 1,\r\n    flexDirection:'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  textMargin:{\r\n      margin:10,\r\n  },\r\n  headerButtonTitle:{\r\n      color:'white'\r\n  },\r\n  dataView:{\r\n      flex:1,\r\n      flexDirection:'column',\r\n      justifyContent:\"flex-start\"\r\n  },\r\n  textInputBox: {\r\n    borderBottomColor:\"black\",\r\n    borderBottomWidth: 1,\r\n    margin:10,\r\n    marginBottom: 40,\r\n    alignSelf: 'stretch',\r\n  },\r\n  textInput: {\r\n    fontSize: 24,\r\n    height: 40,\r\n    fontWeight: '200',\r\n    marginBottom: 0,\r\n    color:\"black\",\r\n  },\r\n  submitButton:{\r\n    alignItems: 'center',\r\n    padding:15,\r\n    borderRadius:7,\r\n    marginBottom:10,\r\n    margin:7,\r\n    alignSelf: 'stretch',\r\n  },\r\n})","import React from 'react'\r\nimport { StyleSheet, Platform, Image, Text, View, FlatList, ActivityIndicator, Modal, SafeAreaView, TextInput, KeyboardAvoidingView, ScrollView, Alert } from 'react-native'\r\nimport { ListItem, Button, Overlay, Avatar, Icon } from 'react-native-elements'\r\nimport WebModal from 'modal-react-native-web';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport firebase from 'firebase';\r\nimport { ProjectsContext } from '../utils/contexts'\r\nimport { groups } from '../utils/constants'\r\n\r\nconst groupDescriptions = [\"Full Access\", \"Can't delete project or edit team members\", \"Can only view data, can't delete notifications\"]\r\n\r\nexport default function Home({ navigation, route }) {\r\n    const { projectsData, listenToProject, stopListeningToProject } = React.useContext(ProjectsContext);\r\n    const projTitle = route.params.title\r\n    const [users, setUsers] = React.useState([])\r\n    const [currentGroupNum, setCurrentGroupNum] = React.useState(groups.length)\r\n    const [canLeave, setCanLeave] = React.useState(false)\r\n    const [visible, setVisible] = React.useState(false);\r\n    const [email, setEmail] = React.useState('');\r\n    const [errorMessage, setErrorMessage] = React.useState('');\r\n    const profileInfoMap = React.useRef({});\r\n\r\n    const db = firebase.firestore();\r\n\r\n    const projectInfo = projectsData[projTitle]\r\n\r\n    const currentUserUid = firebase.auth().currentUser.uid;\r\n\r\n    React.useLayoutEffect(() => {\r\n        const handleProjUpdate = (newData) => {\r\n            console.log(\"triggered\")\r\n            if (newData) {\r\n                let tempUsers = []\r\n                let tempCurrentGroupNum\r\n                for (let groupName of groups){\r\n                    console.log(groupName)\r\n                    if (newData[groupName])\r\n                        for (let uid of newData[groupName]) {\r\n                            console.log(uid)\r\n                            if (uid == currentUserUid)\r\n                                tempCurrentGroupNum = groups.indexOf(groupName)\r\n                            if (!profileInfoMap.current[uid])\r\n                                fetch(\"https://notibot-server.herokuapp.com/getProfileInfo\", { body: JSON.stringify({ uid }), method: 'POST', headers: { \"Content-Type\": \"application/json\" } }).then((res) => res.json()).then((profile) => {\r\n                                    profileInfoMap.current[uid] = profile\r\n                                    //console.log(profile)\r\n                                    setUsers((users)=>[...users, { group: groupName, profile: profileInfoMap.current[uid] }])\r\n                                })\r\n                            else {\r\n                                tempUsers.push({ group: groupName, profile: profileInfoMap.current[uid] }) // Don't re-render until finished\r\n                            }\r\n                        }\r\n                }\r\n                setCurrentGroupNum(tempCurrentGroupNum)\r\n                if (tempUsers.length > 0)\r\n                    setUsers(tempUsers)\r\n                if (tempCurrentGroupNum != 0 || newData[groups[0]].length > 1)\r\n                    setCanLeave(true)\r\n                else\r\n                    setCanLeave(false)\r\n            } else\r\n                navigation.goBack()\r\n        }\r\n        listenToProject(projTitle, handleProjUpdate, true)\r\n        return () => stopListeningToProject(projTitle, handleProjUpdate)\r\n    }, [])\r\n\r\n\r\n    React.useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: `${projTitle} Options`,\r\n        });\r\n    }, [navigation]);\r\n\r\n    const resetModalState = () => {\r\n        setEmail('')\r\n        setErrorMessage('')\r\n    }\r\n\r\n    const toggleOverlay = () => {\r\n        resetModalState()\r\n        setVisible(!visible);\r\n    };\r\n\r\n    const deleteProject = () => {\r\n        Alert.alert(`Delete ${projTitle}`, `Are you sure you want to delete ${projTitle}?`,\r\n            [{\r\n                text: 'Delete',\r\n                onPress: async () => {\r\n                    firebase.auth().currentUser.getIdToken(true)\r\n                        .then((idToken) => fetch(\"https://notibot-server.herokuapp.com/deleteProject\", { body: JSON.stringify({ idToken, project: projTitle }), method: 'POST', headers: { \"Content-Type\": \"application/json\" } }))\r\n                        .catch(e => Alert.alert(\"An error occurred while attempting to delete the project\"))\r\n                },\r\n                style: \"destructive\"\r\n            }, { text: 'Cancel', style: 'cancel' },],\r\n            { cancelable: true }\r\n        );\r\n    }\r\n\r\n    const deleteNotifications = () => {\r\n        Alert.alert(`Delete ${projTitle}`, `Are you sure you want to delete all of ${projTitle}'s notifications?`,\r\n            [{\r\n                text: 'Delete',\r\n                onPress: async () => {\r\n                    await db.collection('Projects').doc(projTitle).update({\r\n                        Notifications: firebase.firestore.FieldValue.delete()\r\n                    }).then(() => navigation.goBack()).catch(e => Alert.alert(\"An error occurred while attempting to delete the notifications\"))\r\n                },\r\n                style: \"destructive\"\r\n            }, { text: 'Cancel', style: 'cancel' },],\r\n            { cancelable: true }\r\n        );\r\n    }\r\n\r\n    const addUser = () => {\r\n        fetch(\"https://notibot-server.herokuapp.com/getProfileByEmail\", { body: JSON.stringify({ email }), method: 'POST', headers: { \"Content-Type\": \"application/json\" } })\r\n            .then((res) => res.json()).then((profile) => {\r\n                console.log(profile)\r\n                return firebase.auth().currentUser.getIdToken(true)\r\n                    .then((idToken) => fetch(\"https://notibot-server.herokuapp.com/addUserToProject\", { \r\n                        body: JSON.stringify({ idToken, project: projTitle, uid:profile.uid }), \r\n                        method: 'POST', \r\n                        headers: { \"Content-Type\": \"application/json\" } \r\n                    }))\r\n            }).then(()=>setVisible(false)).catch(e => Alert.alert(`An error occurred while attempting to add ${email} to the project`))\r\n    }\r\n\r\n    const removeUser = (email) => {\r\n        fetch(\"https://notibot-server.herokuapp.com/getProfileByEmail\", { body: JSON.stringify({ email }), method: 'POST', headers: { \"Content-Type\": \"application/json\" } })\r\n            .then((res) => res.json()).then((profile) => {\r\n                console.log(profile)\r\n                return firebase.auth().currentUser.getIdToken(true)\r\n                    .then((idToken) => fetch(\"https://notibot-server.herokuapp.com/removeUserFromProject\", { \r\n                        body: JSON.stringify({ idToken, project: projTitle, uid:profile.uid }), \r\n                        method: 'POST', \r\n                        headers: { \"Content-Type\": \"application/json\" } \r\n                    }))\r\n            }).catch(e => Alert.alert(`An error occurred while attempting to remove ${email} from the project`))\r\n    }\r\n\r\n    const leaveProject = async () => {\r\n        await db.collection('Projects').doc(projTitle).update({\r\n            [groups[currentGroupNum]]: firebase.firestore.FieldValue.arrayRemove(currentUserUid)\r\n        })\r\n        await db.collection('Users').doc(currentUserUid).update({\r\n            'Projects': firebase.firestore.FieldValue.arrayRemove(projTitle)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Overlay isVisible={visible} onBackdropPress={toggleOverlay} ModalComponent={Platform.OS === 'web' ? WebModal : Modal} overlayStyle={[Platform.OS != 'web' ? { width: \"80%\", margin: \"30%\", maxWidth: 400 /*,flexGrow:1,flex:1,*/ } : {}, { backgroundColor: \"red\", borderRadius: 10, bottom: \"20%\" }]}>\r\n                <View>\r\n                    <View style={styles.textInputBox}>\r\n                        <TextInput\r\n                            placeholder=\"Email\"\r\n                            placeholderTextColor=\"white\"\r\n                            autoCapitalize=\"none\"\r\n                            style={styles.textInput}\r\n                            onChangeText={setEmail}\r\n                            value={email}\r\n                        />\r\n                    </View>\r\n                    {errorMessage != '' &&\r\n                        <Text style={styles.errorMessage}>\r\n                            {errorMessage}\r\n                        </Text>}\r\n                    <Button\r\n                        title=\"Add User\"\r\n                        onPress={addUser}\r\n                    />\r\n                </View>\r\n            </Overlay>\r\n            <ScrollView contentContainerStyle={styles.container}>\r\n                <View style={{width:\"100%\"}}>\r\n                    {(() => {\r\n                        let userElements = []\r\n                        for(let itemIndex in users){\r\n                            let item = users[itemIndex]\r\n                            let controller\r\n                            userElements.push(<ListItem key={item.profile.email} style={[styles.listItem, {zIndex: -1*itemIndex}]} bottomDivider topDivider>\r\n                                <Avatar source={{ uri: item.profile.photoURL }} title={item.profile.email.substring(0,2)} rounded />\r\n                                <ListItem.Content>\r\n                                    <ListItem.Title>{item.profile.displayName}</ListItem.Title>\r\n                                    <ListItem.Subtitle adjustsFontSizeToFit numberOfLines={1}>{item.profile.email}</ListItem.Subtitle>\r\n                                </ListItem.Content>\r\n                                <DropDownPicker disabled={currentGroupNum > 0 || (currentUserUid == item.profile.uid && !canLeave)} items={[...groups, \"Remove\"].map(el => ({ label: el, value: el }))} defaultValue={item.group} containerStyle={{ flexGrow: .5 }} itemStyle={{overflow: \"visible\"}} controller={instance => controller = instance} onChangeItem={(el)=>{\r\n                                    const {value:newValue} = el\r\n                                    console.log(newValue)\r\n                                    if(newValue == \"Remove\"){\r\n                                        Alert.alert(`Remove ${item.profile.email}`, `Are you sure you want remove ${item.profile.email} from this project?`,\r\n                                            [{\r\n                                                text: 'Remove',\r\n                                                onPress: async () => {\r\n                                                    removeUser(item.profile.email)\r\n                                                },\r\n                                                style: \"destructive\"\r\n                                            }, \r\n                                            { text: 'Cancel', style: 'cancel',\r\n                                                onPress: ()=>{\r\n                                                    controller.selectItem(item.group)\r\n                                                }\r\n                                            }],\r\n                                            { cancelable: true, onDismiss:()=>{\r\n                                                controller.selectItem(item.group)\r\n                                            }}\r\n                                        );\r\n                                    }else{\r\n                                        const updateObj = {}\r\n                                        groups.forEach(el => { updateObj[el] = firebase.firestore.FieldValue.arrayRemove(item.profile.uid) })\r\n                                        updateObj[newValue] = firebase.firestore.FieldValue.arrayUnion(item.profile.uid)\r\n                                        db.collection('Projects').doc(projTitle).update(updateObj)\r\n                                    }\r\n                                }}/>\r\n                            </ListItem>)\r\n                        }\r\n                        if(userElements.length==0){\r\n                            return <ActivityIndicator size=\"large\" style={{padding:10}}/>\r\n                        }\r\n                        return userElements\r\n                    })()}\r\n                </View>\r\n                {/* <FlatList\r\n                    style={{ width: \"100%\", maxHeight: \"60%\" }}\r\n                    data={users}\r\n                    renderItem={({ item, index }) => {\r\n                        //console.log(item)\r\n                        return (<View style={{zIndex:-999999*index}}><ListItem style={styles.listItem} bottomDivider topDivider>\r\n                            <Avatar source={{ uri: item.profile.photoURL }} rounded />\r\n                            <ListItem.Content>\r\n                                <ListItem.Title>{item.profile.displayName}</ListItem.Title>\r\n                                <ListItem.Subtitle adjustsFontSizeToFit numberOfLines={1}>{item.profile.email}</ListItem.Subtitle>\r\n                            </ListItem.Content>\r\n                            <DropDownPicker disabled={currentGroupNum < 0} items={groups.map(el => ({ label: el, value: el }))} defaultValue={item.group} containerStyle={{ flexGrow: .5 }} style={{zIndex:999999*index}}/>\r\n                        </ListItem></View>)\r\n                    }}\r\n                    keyExtractor={item => item.profile.uid}\r\n                    ListEmptyComponent={<View style={{ flex: 1, flexGrow: 1, justifyContent: 'center', alignItems: 'center', padding: 20 }}><ActivityIndicator size=\"large\" /><Text>Populating with members...</Text></View>}\r\n                /> */}\r\n                <ListItem style={[{ zIndex: -9 }, styles.listItem]} bottomDivider topDivider disabled={currentGroupNum > 0} onPress={toggleOverlay}>\r\n                    <Icon name='plus' type='ant-design' color='blue' />\r\n                    <ListItem.Content>\r\n                        <ListItem.Title>Add User</ListItem.Title>\r\n                    </ListItem.Content>\r\n                </ListItem>\r\n                {(() => {\r\n                    const arr = []\r\n                    for (let groupIndex in groups) {\r\n                        // console.log(`${groupIndex} - ${currentGroupNum}`)\r\n                        arr.push(<View key={groupIndex} style={[styles.listItem, styles.descContainer]}>\r\n                            <Text style={[groupIndex == currentGroupNum ? { color: 'blue' } : {}, styles.groupTitle, styles.groupText]}>{groups[groupIndex]}</Text>\r\n                            <Text style={[styles.groupDesc, styles.groupText]}>{groupDescriptions[groupIndex]}</Text>\r\n                        </View>)\r\n                    }\r\n                    return arr\r\n                })()}\r\n                <Button\r\n                    disabled={currentGroupNum > 1}\r\n                    containerStyle={{ marginTop: 20, }}\r\n                    title=\"Delete Notifications\"\r\n                    buttonStyle={styles.deleteButton}\r\n                    onPress={deleteNotifications}\r\n                />\r\n                <Button\r\n                    disabled={!canLeave}\r\n                    containerStyle={{ marginTop: 20, }}\r\n                    title={`Leave Project`}\r\n                    buttonStyle={styles.leaveButton}\r\n                    onPress={leaveProject}\r\n                />\r\n                {!canLeave && <Text style={styles.explanationText}>You are the only owner, you can't leave until appointing a new owner</Text>}\r\n                <Button\r\n                    disabled={currentGroupNum > 0}\r\n                    containerStyle={{ marginTop: 20, }}\r\n                    title=\"Delete Project\"\r\n                    buttonStyle={styles.deleteButton}\r\n                    onPress={deleteProject}\r\n                />\r\n            </ScrollView>\r\n        </>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        //flex: 1,\r\n        // justifyContent: 'center',\r\n        paddingBottom:20,\r\n        alignItems: \"center\"\r\n    },\r\n    deleteButton: {\r\n        backgroundColor: \"red\"\r\n    },\r\n    leaveButton: {\r\n        backgroundColor: \"blue\"\r\n    },\r\n    listItem: {\r\n        width: \"100%\",\r\n        //zIndex:-1\r\n    },\r\n    descContainer: {\r\n        flexGrow: 1,\r\n        flexDirection: \"row\",\r\n        padding: 10,\r\n        zIndex: -99\r\n    },\r\n    groupTitle: {\r\n        marginRight: 10,\r\n        flexBasis: 100,\r\n    },\r\n    groupText: {\r\n        fontSize: 15,\r\n    },\r\n    groupDesc: {\r\n        flexShrink: 1,\r\n        flexWrap: 'wrap'\r\n    },\r\n    explanationText: {\r\n        textAlign: \"center\",\r\n        marginHorizontal: 20\r\n    },\r\n    textInputBox: {\r\n        borderBottomColor: \"white\",\r\n        borderBottomWidth: 1,\r\n        marginBottom: 20,\r\n        alignSelf: 'stretch',\r\n    },\r\n    textInput: {\r\n        fontSize: 24,\r\n        height: 40,\r\n        fontWeight: '200',\r\n        marginBottom: 0,\r\n        color: \"white\",\r\n        textAlign: 'center'\r\n    }\r\n})","import React, {useEffect, useRef} from 'react';\nimport { Button, Text, TextInput, View, useWindowDimensions, Dimensions, Platform, Alert } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator,   DrawerContentScrollView,  DrawerItemList, } from '@react-navigation/drawer';\nimport { ProjectsContext, DeepLinkContext, MainStackLoadedContext } from './utils/contexts'\nimport FlashMessage from \"react-native-flash-message\";\nimport { showMessage, hideMessage } from \"react-native-flash-message\";\nimport * as Linking from 'expo-linking';\nimport { useLinkTo  } from '@react-navigation/native';\nimport Constants from 'expo-constants';\nimport useRootNavigation from './utils/useRootNavigation'\nimport * as SplashScreen from 'expo-splash-screen';\n\nimport Loading from './screens/Loading'\nimport Login from './screens/Login'\nimport SignUp from './screens/SignUp'\nimport Home from './screens/Home'\nimport Settings from './screens/Settings'\nimport Project from './screens/Project'\nimport Notification from './screens/Notification'\nimport ProjectOptions from './screens/ProjectOptions'\n\nimport * as Notifications from 'expo-notifications'\n\n// import 'expo-firestore-offline-persistence'\nimport firebase from \"firebase\";\n// import 'firebase/firestore'\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBc_AtukKnVqdNYRefB-NtZLy5otD8KMvA\",\n  authDomain: \"notibotapp.firebaseapp.com\",\n  databaseURL: \"https://notibotapp.firebaseio.com\",\n  projectId: \"notibotapp\",\n  storageBucket: \"notibotapp.appspot.com\",\n};\n\ntry {\n  firebase.initializeApp(firebaseConfig);\n} catch (err) {\n    // ignore app already initialized error in stack\n}\n// firebase.firestore().enablePersistence()\n\nconst Stack = createStackNavigator();\nconst Drawer = createDrawerNavigator();\nconst db = firebase.firestore();\n\nconst prefix = Linking.createURL('/');\n\nexport default function App() {\n  const projectsData = React.useRef({});\n  const userData = React.useRef({});\n  const callbacks = React.useRef({});\n  const listeners = React.useRef({});\n  const notificationListener = useRef();\n  const responseListener = useRef();\n  const mainStackLoadedRef = useRef({\n    mainStackLoaded: () =>{\n      setTimeout(()=>SplashScreen.hideAsync().catch(),500)\n      mainStackLoadedRef.current.loaded = true\n      if(mainStackLoadedRef.current.queue)\n        mainStackLoadedRef.current.queue()\n    },\n    loaded:false,\n    projectsLoaded:false,\n    queue:null\n  });\n  const [initialDeepLink, setInitialDeepLink] = React.useState(null);\n  // don't use hook on web because resizing is a common action and the site shouldn't reload on every resize\n  const dimensionWidth = Platform.OS === 'web'?Dimensions.get('window').width:useWindowDimensions().width; \n  const isLargeScreen = dimensionWidth >= 768;\n  // const linkTo = useLinkTo();\n  const navigation = useRootNavigation();\n\n  const openLinkInApp = (appUrl)=>{\n    if(mainStackLoadedRef.current.loaded)\n      navigation.linkTo(appUrl)\n    else\n      mainStackLoadedRef.current.queue = ()=> navigation.linkTo(appUrl)\n  }\n  \n  // Set up notifications\n  React.useLayoutEffect(() => {\n    // setTimeout(()=>navigation.linkTo(`Main/Projects/Notification?projTitle=testt&timestamp=1621574434297`),5*1000)\n\n    if (Constants.isDevice && Platform.OS !== 'web') { //Expo's support for web push is \"pending\"\n      notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\n        const notifContent = notification.request.content\n        // console.log(notification)\n        showMessage({\n          message: notifContent.title,\n          description: notifContent.body,\n          type: \"info\",\n          hideStatusBar:true,\n          onPress: ()=>{\n            navigation.linkTo(`/Main/Projects/Notification?projTitle=${notifContent.data?.project}&timestamp=${notifContent.data?.firebaseData?.timestamp}`)\n          }\n        });\n      });\n\n      responseListener.current = Notifications.addNotificationResponseReceivedListener(async response => {\n        const notifMetaData = response.notification.request.content.data\n        if (response.actionIdentifier == \"deleteNotif\"){\n          // Alert.alert(\"delete\")\n          return db.collection('Projects').doc(notifMetaData?.project).set({\n            'Notifications':firebase.firestore.FieldValue.arrayRemove(notifMetaData?.firebaseData)\n          }, { merge: true })\n        }\n        let url = \"\"\n        if(response.actionIdentifier == \"webhookAction\"){\n          url = notifMetaData?.firebaseData?.webhook\n        }else if(response.actionIdentifier == \"webhookReply\"){\n          url = notifMetaData?.firebaseData?.webhook + response?.userText\n        }else{ // response.actionIdentifier == Notifications.DEFAULT_ACTION_IDENTIFIER\n          return openLinkInApp(encodeURI(`Main/Projects/Notification?projTitle=${notifMetaData?.project}&timestamp=${notifMetaData?.firebaseData?.timestamp}`))\n        }\n        const fetchCallback = (resStr, errored) =>{\n          showMessage({\n            message: errored?\"Webhook call failed!\":\"Webhook called!\",\n            type: errored?\"danger\":\"success\",\n            hideStatusBar:true,\n          });\n          openLinkInApp(encodeURI(`Main/Projects/Notification?projTitle=${notifMetaData?.project}&timestamp=${notifMetaData?.firebaseData?.timestamp}&resValue=${resStr}`))\n        }\n        fetch(url).then(res=>res.text())\n        .then(fetchCallback)\n        .catch((e)=>fetchCallback(e.toString(), true))\n      });\n\n      return () => {\n        Notifications.removeNotificationSubscription(notificationListener.current);\n        Notifications.removeNotificationSubscription(responseListener.current);\n      };\n    }\n  }, [true])\n\n  const [state, dispatch] = React.useReducer(\n    (prevState, action) => {\n      switch (action.type) {\n        case 'SIGN_IN':\n          return {\n            ...prevState,\n            isLoading: false,\n            isSignedIn: action.isSignedIn,\n          };\n        case 'SIGN_OUT':\n          return {\n            ...prevState,\n            isLoading: false,\n            isSignedIn: false,\n          };\n      }\n    },\n    {\n      isLoading: true,\n      isSignedIn: false,\n    }\n  );\n\n  React.useLayoutEffect(()=>{\n    Linking.getInitialURL().then((url) => {\n      setInitialDeepLink(url)\n    });\n  },[true])\n\n\n  React.useLayoutEffect(() => {\n    try{\n      firebase.auth().onAuthStateChanged((user) => {\n        console.log(`Auth: ${!!user}`)\n        dispatch({ type: 'SIGN_IN', isSignedIn: !!user });\n        if(user){\n          setTimeout(()=>SplashScreen.hideAsync().catch(),3000)\n        }\n      })\n    }catch(e){\n      SplashScreen.hideAsync().catch()\n    }\n  }, []);\n\n  React.useLayoutEffect(()=>{\n    SplashScreen.preventAutoHideAsync();\n  },[true])\n\n  //const projectsData = {}\n\n  const projContext = {\n    projectsData: projectsData.current,\n    listenToProject: (projectName, callback, callOnInit)=>{\n      // console.log(JSON.stringify(callbacks.current))\n      if(callbacks.current[projectName]){\n        console.log(`listener already exists for ${projectName}`)\n        callbacks.current[projectName].push(callback)\n        if(callOnInit && projectName in projectsData.current)\n          callback(projectsData.current[projectName])\n      }else{\n        console.log(`creating listener for ${projectName}`)\n        callbacks.current[projectName] = [callback]\n        listeners.current[projectName] = db.collection('Projects').doc(projectName).onSnapshot({\n          includeMetadataChanges: true\n        },(doc) => {\n          const source = doc.metadata.hasPendingWrites ? \"Local\" : \"Server\";\n          // console.log(source)\n          if(source == \"Server\"){\n            // console.log(`Snapshot: ${projectName} - ${doc.data()}`)\n            projectsData.current[projectName] = doc.data()\n            for(let invCallback of callbacks.current[projectName])\n              invCallback(doc.data())\n          }\n        },\n        error=>{\n          // console.warn(error)\n          projectsData.current[projectName] = null\n          for(let invCallback of callbacks.current[projectName])\n            invCallback(null)\n        }\n        )\n      }\n    },\n    stopListeningToProject: (projectName, callback)=>{\n      // console.log(`Stopping listener - ${projectName}:${callback}\\n${callbacks.current[projectName]}`)\n      if(!callbacks.current[projectName]){\n        console.warn(\"Listener doesn't exist. How did this happen?\")\n      }\n      const index = callbacks.current[projectName].indexOf(callback)\n      console.log(`Index of callback in array: ${index}`)\n      callbacks.current[projectName].splice(index,1)\n      if(callbacks.current[projectName].length == 0){\n        callbacks.current[projectName] = null\n        listeners.current[projectName]();\n      }\n    }\n  }\n\n  const ProjectStack = () => {\n    return (<Stack.Navigator \n      screenOptions={{\n        headerStyle: {\n          backgroundColor: 'red',\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n        },\n      }}\n    >\n      <Stack.Screen name=\"Project\" component={Project}/>\n      <Stack.Screen name=\"ProjectOptions\" component={ProjectOptions} />\n      <Stack.Screen name=\"Notification\" component={Notification} />\n    </Stack.Navigator>)\n  }\n\n  const DrawerNav = ()=> {\n    return(<Drawer.Navigator\n      // openByDefault\n      drawerType={isLargeScreen ? 'permanent' : 'back'}\n      drawerStyle={isLargeScreen ? null : { width: '100%' }}\n      overlayColor=\"transparent\"\n      drawerContent={(props) => {\n        return (<Home {...props} />)\n      }}\n      screenOptions={{\n        gestureEnabled:true\n      }}\n    >\n      <Drawer.Screen name=\"Projects\" component={ProjectStack}/>\n    </Drawer.Navigator>)\n  }\n\n  return (<NavigationContainer ref={navigation.navigationRef} linking={{\n    prefixes: [prefix, 'http://localhost:19006', 'https://notibot.kihtrak.com'],\n    screens: {\n      ProjectsDrawerScreen:{\n        path: '',\n        screens: {\n          Projects:{\n            path: '',\n            screens: {\n              Project: 'project/:title',\n              Notification: 'notification/:projTitle/:timestamp/:resValue?/:index?',\n            }\n          }\n        },\n      },\n    },\n    subscribe(listener) {\n      const onReceiveURL = ({ url }) => {\n        listener(url)\n        console.log(`setInitialDeepLink(${url})`)\n        if(url!=initialDeepLink)\n          setInitialDeepLink(url)\n      };\n\n      // Linking.getInitialURL().then((url) => {\n      //   console.log(`setInitialDeepLinkbyutnotreally(${url})`)\n      // });\n\n      // Listen to incoming links from deep linking\n      Linking.addEventListener('url', onReceiveURL);\n\n      return () => {\n        // Clean up the event listeners\n        Linking.removeEventListener('url', onReceiveURL);\n      };\n    },\n  }}>\n    <MainStackLoadedContext.Provider value={mainStackLoadedRef}>\n      <DeepLinkContext.Provider value={initialDeepLink}>\n        <ProjectsContext.Provider value={projContext}>\n            <Stack.Navigator \n              screenOptions={{\n                headerStyle: {\n                  backgroundColor: 'red',\n                },\n                headerTintColor: '#fff',\n                headerTitleStyle: {\n                  fontWeight: 'bold',\n                },\n              }}\n            >\n              {state.isLoading ? ( \n                <Stack.Screen name=\"Splash\" component={Loading} options={{ headerShown:false }}/>\n              ) : state.isSignedIn == false ? <>\n                 <Stack.Screen\n                  name=\"SignIn\"\n                  component={Login}\n                  options={{\n                    headerShown:false,\n                // When logging out, a pop animation feels intuitive\n                    animationTypeForReplace: !state.isSignedIn ? 'pop' : 'push',\n                  }}\n                />\n                <Stack.Screen\n                  name=\"SignUp\"\n                  component={SignUp}\n                  options={{\n                    headerShown:false,\n                // When logging out, a pop animation feels intuitive\n                    animationTypeForReplace: !state.isSignedIn ? 'pop' : 'push',\n                  }}\n                />\n                </> : <><Stack.Screen name=\"Main\" component={DrawerNav} options={{ headerShown:false }}/>\n                  <Stack.Screen name=\"Settings\" component={Settings} />\n                {/* <Stack.Screen name=\"Projects\" component={Home} /> */}\n              \n                {/* <Stack.Screen name=\"ProjectOptions\" component={ProjectOptions} />\n                <Stack.Screen name=\"Notification\" component={Notification} />\n                <Stack.Screen name=\"Settings\" component={Settings} /> */}\n              </>}\n            </Stack.Navigator>\n          </ProjectsContext.Provider>\n        </DeepLinkContext.Provider>\n      </MainStackLoadedContext.Provider>\n      <FlashMessage position=\"top\" />\n    </NavigationContainer>\n  );\n}\n"],"sourceRoot":""}