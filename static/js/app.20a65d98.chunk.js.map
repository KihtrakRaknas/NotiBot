{"version":3,"sources":["utils/contexts.js","utils/useRootNavigation.js","screens/Loading.js","screens/Login.js","screens/SignUp.js","utils/hashStringToColor.js","screens/Home.js","screens/Settings.js","screens/Project.js","utils/constants.js","screens/Notification.js","screens/ProjectOptions.js","App.js"],"names":["ProjectsContext","React","createContext","DeepLinkContext","MainStackLoadedContext","navigationRef","createRef","dispatch","action","current","linkTo","path","config","state","getStateFromPath","getActionFromState","undefined","useRootNavigation","Loading","View","style","styles","container","Text","loadingText","ActivityIndicator","size","color","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","marginBottom","Login","navigation","useState","email","setEmail","password","setPassword","errorMessage","setErrorMessage","useEffect","SplashScreen","hideAsync","Platform","OS","WebBrowser","Constants","appOwnership","GoogleSignIn","catch","message","Alert","alert","Google","expoClientId","webClientId","androidClientId","iosClientId","request","response","promptAsync","console","log","type","id_token","params","credential","firebase","auth","GoogleAuthProvider","signInWithCredential","error","KeyboardAvoidingView","behavior","SafeAreaView","title","textInputBox","TextInput","placeholder","placeholderTextColor","autoCapitalize","textInput","onChangeText","value","secureTextEntry","TouchableOpacity","submitButton","onPress","signInWithEmailAndPassword","then","user","includes","substring","indexOf","fontSize","disabled","button","light","a","async","idToken","titleStyle","navigate","borderBottomColor","borderBottomWidth","alignSelf","height","fontWeight","padding","borderRadius","margin","SignUp","route","createUserWithEmailAndPassword","string","total","charCodeAt","firstPartOfString","toString","substr","prefix","Linking","Home","useContext","projectsData","listenToProject","stopListeningToProject","loading","setLoading","projects","setProjects","numberOfProjects","setNumberOfProjects","visible","setVisible","projectName","setProjectName","initialDeepLink","mainStackLoadedRef","useLinkTo","currentUserUid","currentUser","uid","db","firestore","setNotificationCategories","Notifications","identifier","buttonTitle","options","opensAppToForeground","isAuthenticationRequired","isDestructive","previewPlaceholder","submitButtonTitle","isDevice","existingStatus","status","finalStatus","token","data","collection","doc","set","FieldValue","arrayUnion","merge","name","importance","MAX","vibrationPattern","lightColor","registerForPushNotificationsAsync","getTimeStamp","item","length","timestamp","useLayoutEffect","parsedDeepLink","queue","openDrawer","mainStackLoaded","encodeURI","subscriptionFunctions","unsub","onSnapshot","includeMetadataChanges","metadata","hasPendingWrites","subFunc","filter","project","sort","b","push","toggleOverlay","isVisible","onBackdropPress","ModalComponent","WebModal","Modal","overlayStyle","width","maxWidth","bottom","match","code","leftComponent","icon","centerComponent","text","rightComponent","LinearGradient","colors","start","x","y","end","FlatList","renderItem","marginVertical","bottomDivider","topDivider","linearGradientProps","hashStringToColor","ViewComponent","containerStyle","rounded","Content","Title","listItemTitle","Subtitle","listItemSubtitle","Chevron","warn","keyExtractor","ListFooterComponent","textDecorationLine","controlsColor","showTitle","ListEmptyComponent","flexGrow","marginTop","paddingTop","paddingHorizontal","textAlign","Settings","Button","signOut","Project","projTitle","notifications","updateNotifications","isLargeScreen","useWindowDimensions","handleProjUpdate","newData","setOptions","headerRight","headerLeft","reverse","index","listItem","subtitle","body","getSubtitle","left","Date","toLocaleString","groups","Notification","resValue","notification","updateNotification","webhookParamValue","setWebhookParamValue","webhookRes","setWebhookRes","checkCanDelete","canDelete","setCanDelete","oldState","dangerouslyGetState","JSON","stringify","routes","prevRoute","reset","newIndex","setParams","goBack","deleteNotification","arrayRemove","headerButtonTitle","ScrollView","headerView","h1","subheaderView","textMargin","h4","right","dataView","webhook","webhookParam","url","fetch","res","e","flexDirection","groupDescriptions","users","setUsers","currentGroupNum","setCurrentGroupNum","canLeave","setCanLeave","profileInfoMap","useRef","tempCurrentGroupNum","tempUsers","groupName","group","profile","method","headers","json","removeUser","getIdToken","contentContainerStyle","userElements","itemIndex","controller","key","zIndex","source","uri","photoURL","displayName","adjustsFontSizeToFit","numberOfLines","items","map","el","label","defaultValue","itemStyle","overflow","instance","onChangeItem","newValue","selectItem","cancelable","onDismiss","updateObj","forEach","update","arr","groupIndex","descContainer","groupTitle","groupText","groupDesc","buttonStyle","deleteButton","delete","leaveButton","explanationText","paddingBottom","marginRight","flexBasis","flexShrink","flexWrap","marginHorizontal","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","err","Stack","createStackNavigator","Drawer","createDrawerNavigator","App","callbacks","listeners","notificationListener","responseListener","setTimeout","loaded","setInitialDeepLink","Dimensions","get","openLinkInApp","appUrl","notifContent","content","showMessage","description","hideStatusBar","firebaseData","notifMetaData","actionIdentifier","userText","fetchCallback","resStr","errored","useReducer","prevState","isLoading","isSignedIn","onAuthStateChanged","projContext","callback","callOnInit","invCallback","splice","ProjectStack","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","Screen","component","ProjectOptions","NavigationContainer","ref","linking","prefixes","screens","ProjectsDrawerScreen","Projects","subscribe","listener","onReceiveURL","Provider","headerShown","animationTypeForReplace","drawerType","drawerStyle","overlayColor","drawerContent","props","gestureEnabled","position"],"mappings":"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","file":"static/js/app.20a65d98.chunk.js","sourcesContent":["import React from 'react';\r\nexport const ProjectsContext = React.createContext();\r\nexport const DeepLinkContext = React.createContext();\r\nexport const MainStackLoadedContext = React.createContext();","import { createRef } from 'react';\r\nimport { getActionFromState, getStateFromPath } from '@react-navigation/native';\r\n\r\nexport const navigationRef = createRef();\r\n\r\nexport function dispatch(action) {\r\n    navigationRef.current?.dispatch(action);\r\n}\r\n\r\nexport function linkTo(path, config = null) {\r\n  var state = getStateFromPath(path, config);\r\n  var action = getActionFromState(state);\r\n  if (action !== undefined) {\r\n    dispatch(action);\r\n  }\r\n}\r\n\r\nconst useRootNavigation = () => ({\r\n    navigationRef,\r\n  linkTo\r\n});\r\n\r\nexport default useRootNavigation","import React from 'react';\r\nimport { View, Text, ActivityIndicator, StyleSheet } from 'react-native'\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.loadingText}>Loading</Text>\r\n      <ActivityIndicator size=\"large\" color=\"white\"/>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor:\"red\"\r\n  },\r\n  loadingText:{\r\n    marginBottom:20,\r\n    color:\"white\"\r\n  }\r\n})","import React from 'react';\r\nimport { StyleSheet, Text, TextInput, View, Alert, KeyboardAvoidingView, TouchableOpacity, SafeAreaView, Platform} from 'react-native'\r\nimport firebase from 'firebase';\r\nimport * as Google from 'expo-auth-session/providers/google';\r\n// import * as Google from 'expo-google-app-auth';\r\nimport * as GoogleSignIn from 'expo-google-sign-in';\r\nimport { SocialIcon } from 'react-native-elements';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport { Button } from 'react-native-elements';\r\nimport Constants from 'expo-constants';\r\nWebBrowser.maybeCompleteAuthSession();\r\n\r\nexport default function Login({ navigation }) {\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState(null);\r\n  \r\n  React.useEffect(()=>SplashScreen.hideAsync(),[true])\r\n\r\n  function handleLogin() {\r\n    firebase\r\n    .auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((user) => {\r\n      //if(checkUserFeilds(doc.data()))\r\n        //navigation.navigate('LoggedIn')\r\n      // else\r\n      //   navigation.navigate('SetUp')\r\n    })\r\n    .catch(error => {\r\n      if(error.message.includes(\"The user may have been deleted\"))\r\n        error.message = error.message.substring(0,error.message.indexOf(\"The user may have been deleted\"))\r\n      Alert.alert(error.message)\r\n      setErrorMessage(error.message)\r\n    })\r\n  }  \r\n\r\n  React.useEffect(() => {\r\n    if(Platform.OS == 'android'){\r\n      WebBrowser.warmUpAsync();\r\n      \r\n      return () => {\r\n        WebBrowser.coolDownAsync();\r\n      };\r\n    }\r\n    if(Constants.appOwnership == \"standalone\"){ // init native sign in with google logic\r\n\r\n      GoogleSignIn.initAsync({\r\n        // You may ommit the clientId when the firebase `googleServicesFile` is configured\r\n        // clientId: '<YOUR_IOS_CLIENT_ID>',\r\n        // Provide other custom options...\r\n      }).catch (({ message }) => {\r\n        Alert.alert('GoogleSignIn.initAsync(): ' + message);\r\n      })\r\n    }\r\n\r\n  }, []);\r\n\r\n  // const config = {\r\n  //   //\r\n  //   //androidClientId:\"\",\r\n  //   iosClientId: \"896187396809-2ks3dj1dogegfsc8a9jr32s33tt4rben.apps.googleusercontent.com\",\r\n  //   androidClientId: \"896187396809-tn8u9tp3thnvv07njp6ik46j8ot6k6lc.apps.googleusercontent.com\"\r\n  // }\r\n\r\n  const [request, response, promptAsync] = Google.useIdTokenAuthRequest(\r\n    {\r\n      expoClientId: '896187396809-tn4obhk9l23t5u8uhmrspmn89iph7lr0.apps.googleusercontent.com',\r\n      webClientId: '896187396809-5tbhq093deljombkbflt9c5mrfu7qvum.apps.googleusercontent.com',\r\n      // clientId: '896187396809-89ltb58u1or8fnetjgn90btpmb4ghmaq.apps.googleusercontent.com',\r\n      androidClientId: '896187396809-i55h6jach0jrja5studqj9dr2iiuhf8a.apps.googleusercontent.com',\r\n      iosClientId: \"896187396809-2ks3dj1dogegfsc8a9jr32s33tt4rben.apps.googleusercontent.com\",\r\n    },\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    console.log(\"response: \")\r\n    console.log(response)\r\n    if (response?.type === 'success') {\r\n      const { id_token } = response.params;\r\n      console.log(id_token)\r\n      const credential = firebase.auth.GoogleAuthProvider.credential(id_token);\r\n      firebase.auth().signInWithCredential(credential).catch((error) => {\r\n        console.log(error)\r\n        Alert.alert(error.message)\r\n      });\r\n    }\r\n  }, [response]);\r\n\r\n  return (\r\n    <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n      <SafeAreaView style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Text style={styles.title}>Login</Text>\r\n        {errorMessage &&\r\n        <Text style={styles.errorMessage}>\r\n            {errorMessage}\r\n        </Text>} \r\n        <View style={styles.textInputBox}>\r\n          <TextInput\r\n            placeholder=\"Email\"\r\n            placeholderTextColor=\"white\"\r\n            autoCapitalize=\"none\"\r\n            style={styles.textInput}\r\n            onChangeText={setEmail}\r\n            value={email}\r\n          />\r\n        </View>\r\n        <View style={styles.textInputBox}>\r\n          <TextInput\r\n            secureTextEntry\r\n            placeholder=\"Password\"\r\n            placeholderTextColor=\"white\"\r\n            autoCapitalize=\"none\"\r\n            style={styles.textInput}\r\n            onChangeText={setPassword}\r\n            value={password}\r\n          />\r\n        </View>\r\n        <TouchableOpacity \r\n          style={[styles.submitButton,{backgroundColor:\"blue\"}]}\r\n          onPress={handleLogin}\r\n        >\r\n          <Text style={{color:\"white\",fontSize:20,}}>Sign In</Text>\r\n        </TouchableOpacity>\r\n        <SocialIcon\r\n          title={\"Sign In With Google\"}\r\n          disabled={(Constants.appOwnership != \"standalone\" || Platform.OS == 'web') && !request}\r\n          button={true}\r\n          light\r\n          style={styles.submitButton}\r\n          type={\"google\"}\r\n          onPress={async ()=>{\r\n            if(Constants.appOwnership != \"standalone\" || Platform.OS == 'web') {\r\n              console.log(\"promting async\")\r\n              promptAsync()\r\n            } else {\r\n              try {\r\n                await GoogleSignIn.askForPlayServicesAsync();\r\n                const { type, user } = await GoogleSignIn.signInAsync();\r\n                if (type === 'success') {\r\n                  const idToken = user.auth.idToken\r\n                  console.log(idToken)\r\n                  const credential = firebase.auth.GoogleAuthProvider.credential(idToken);\r\n                  firebase.auth().signInWithCredential(credential).catch((error) => {\r\n                    console.log(error)\r\n                    Alert.alert(error.message)\r\n                  });\r\n                }\r\n              } catch ({ message }) {\r\n                Alert.alert('login: Error:' + message);\r\n              }\r\n            }\r\n          }}\r\n        />\r\n        <Button\r\n          titleStyle={{color:\"white\"}}//\"#d1faff\"\r\n          title=\"Don't have an account? Sign Up\"\r\n          disabled={(Constants.appOwnership != \"standalone\" || Platform.OS != 'web') && !request}\r\n          onPress={() => navigation.navigate('SignUp',{email})}\r\n          type=\"clear\"\r\n        />\r\n      </SafeAreaView>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor:\"red\",\r\n  },\r\n  textInputBox: {\r\n    borderBottomColor:\"white\",\r\n    borderBottomWidth: 1,\r\n    marginBottom: 40,\r\n    alignSelf: 'stretch',\r\n  },\r\n  textInput: {\r\n    fontSize: 24,\r\n    height: 40,\r\n    fontWeight: '200',\r\n    marginBottom: 0,\r\n    color:\"white\",\r\n  },\r\n  title: {\r\n    fontSize:50,\r\n    marginBottom:30,\r\n    color:\"white\"\r\n  },\r\n  submitButton:{\r\n    alignItems: 'center',\r\n    padding:15,\r\n    borderRadius:7,\r\n    marginBottom:10,\r\n    margin:7,\r\n    alignSelf: 'stretch',\r\n  },\r\n  errorMessage:{\r\n    color: 'blue', marginBottom:20\r\n  }\r\n})","import React from 'react'\r\nimport { StyleSheet, Text, TextInput, View,  Alert, KeyboardAvoidingView, TouchableOpacity, SafeAreaView } from 'react-native'\r\nimport firebase from 'firebase';\r\nimport { Button } from 'react-native-elements';\r\n\r\nexport default function SignUp({ navigation, route}) {\r\n    const [email, setEmail] = React.useState(route.params.email)\r\n    const [password, setPassword] = React.useState(null)\r\n    const [errorMessage, setErrorMessage] = React.useState(null)\r\n    const handleSignUp = () => {\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(() => {\r\n          // firebase.firestore().collection('Users').doc(currentUser.uid).onSnapshot((doc) => {\r\n          //   console.log(\"Current data: \", doc.data());\r\n          //   if(checkUserFeilds(doc.data()))\r\n          //     this.props.navigation.navigate('LoggedIn')\r\n          //   else\r\n          //     this.props.navigation.navigate('SetUp')\r\n          // });\r\n        })\r\n        .catch(error => {\r\n          setErrorMessage(error.message)\r\n          Alert.alert(error.message)\r\n        })\r\n    }\r\n    return (\r\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n        <SafeAreaView style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>{/*  SafeAreaView makes it nice looking on iPad */}\r\n          <Text style={styles.title}>Sign Up</Text>\r\n          {errorMessage &&\r\n          <Text style={{ color: 'blue', marginBottom:20 }}>\r\n              {errorMessage}\r\n          </Text>} \r\n          <View style={styles.textInputBox}>\r\n            <TextInput\r\n              placeholder=\"Email\"\r\n              placeholderTextColor=\"white\"\r\n              autoCapitalize=\"none\"\r\n              style={styles.textInput}\r\n              onChangeText={setEmail}\r\n              value={email}\r\n            />\r\n          </View>\r\n          <View style={styles.textInputBox}>\r\n            <TextInput\r\n              secureTextEntry\r\n              placeholder=\"Password\"\r\n              placeholderTextColor=\"white\"\r\n              autoCapitalize=\"none\"\r\n              style={styles.textInput}\r\n              onChangeText={setPassword}\r\n              value={password}\r\n            />\r\n          </View>\r\n          <TouchableOpacity \r\n            style={styles.submitButton}\r\n            onPress={handleSignUp}\r\n          >\r\n            <Text style={{color:\"white\",fontSize:20,}}>Create Account</Text>\r\n          </TouchableOpacity>\r\n          <Button\r\n            titleStyle={{color:\"white\"}}//\"#d1faff\"\r\n            title=\"Already have an account? Login\"\r\n            onPress={() => navigation.navigate('SignIn')}\r\n            type=\"clear\"\r\n          />\r\n        </SafeAreaView>\r\n      </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor:\"red\",\r\n    \r\n  },\r\n  textInputBox: {\r\n    borderBottomColor:\"white\",\r\n    borderBottomWidth: 1,\r\n    marginBottom: 40,\r\n    alignSelf: 'stretch',\r\n  },\r\n  textInput: {\r\n    alignSelf: 'stretch',\r\n    fontSize: 24,\r\n    height: 40,\r\n    fontWeight: '200',\r\n    marginBottom: 0,\r\n    color:\"white\",\r\n  },\r\n  title: {\r\n    fontSize:50,\r\n    marginBottom:30,\r\n    color:\"white\"\r\n  },\r\n  submitButton:{\r\n    alignItems: 'center',\r\n    backgroundColor:\"blue\",\r\n    alignSelf: 'stretch',\r\n    padding:15,\r\n    borderRadius:7,\r\n    marginBottom:10\r\n  },\r\n})","export default (string)=>{\r\n    let total = 0;\r\n    for(let char of string)\r\n        total += char.charCodeAt(0)\r\n    // '}' is 125\r\n    // ' ' is 32\r\n    total%=126\r\n    // total-=32\r\n    total/=(126)\r\n    const firstPartOfString = '#' + total.toString(16).substr(2, 6)\r\n    console.log(firstPartOfString)\r\n    return [ firstPartOfString + \"00\", firstPartOfString + \"30\"]\r\n}","import React, { useRef, useContext, useLayoutEffect, useEffect } from 'react'\r\nimport { StyleSheet, Platform, Image, Text, View, FlatList, ActivityIndicator, Modal, SafeAreaView, TextInput, KeyboardAvoidingView, ScrollView } from 'react-native'\r\nimport { ListItem, Button, Overlay, Avatar, Header } from 'react-native-elements'\r\nimport firebase from 'firebase';\r\nimport * as Notifications from 'expo-notifications'\r\nimport Constants from 'expo-constants';\r\nimport WebModal from 'modal-react-native-web';\r\nimport hashStringToColor from '../utils/hashStringToColor'\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { ProjectsContext, DeepLinkContext, MainStackLoadedContext } from '../utils/contexts'\r\nimport { showMessage, hideMessage } from \"react-native-flash-message\";\r\nimport * as Linking from 'expo-linking';\r\nimport { useFocusEffect, useLinkTo } from '@react-navigation/native';\r\nimport { Alert } from 'react-native';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\n\r\nconst prefix = Linking.createURL('/');\r\n\r\nexport default function Home({ navigation }) {\r\n  const { projectsData, listenToProject, stopListeningToProject } = React.useContext(ProjectsContext);\r\n  // const notificationListener = useRef();\r\n  // const responseListener = useRef();\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [projects, setProjects] = React.useState([]);\r\n  const [numberOfProjects, setNumberOfProjects] = React.useState(null);\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [projectName, setProjectName] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const initialDeepLink = useContext(DeepLinkContext)\r\n  const mainStackLoadedRef = useContext(MainStackLoadedContext)\r\n  const linkTo = useLinkTo();\r\n\r\n  const currentUserUid = firebase.auth().currentUser.uid;\r\n  const db = firebase.firestore();\r\n\r\n  const resetModalState = () => {\r\n    setProjectName('')\r\n    setErrorMessage('')\r\n  }\r\n\r\n  async function createNewProject() {\r\n    const valid = await checkProjName()\r\n    if (valid) {\r\n      try{\r\n        await db.collection('Projects').doc(projectName).set({\r\n          'Owner': firebase.firestore.FieldValue.arrayUnion(currentUserUid)\r\n        })\r\n        await db.collection('Users').doc(currentUserUid).set({\r\n          'Projects': firebase.firestore.FieldValue.arrayUnion(projectName)\r\n        }, { merge: true })\r\n        setVisible(false)\r\n      } catch(e) {\r\n        if(e.code == \"permission-denied\" || e.code == \"already-exists\"){\r\n          setErrorMessage(`Name already taken: ${projectName}`)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async function checkProjName() {\r\n    if (projectName.length < 2) {\r\n      setErrorMessage(`Your name must be at least 2 characters. You only have: ${projectName.length}`)\r\n      return false\r\n    }\r\n    if (!projectName.match(\"^[A-Za-z0-9]+$\")){\r\n      setErrorMessage(`Your name must only have letters and numbers (no spaces or special characters)`)\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  async function registerForPushNotificationsAsync() {\r\n      const { status: existingStatus } = await Notifications.getPermissionsAsync();\r\n      let finalStatus = existingStatus;\r\n      if (existingStatus !== 'granted') {\r\n        const { status } = await Notifications.requestPermissionsAsync();\r\n        finalStatus = status;\r\n      }\r\n      if (finalStatus !== 'granted') {\r\n        alert('Failed to get push token for push notification!');\r\n        return;\r\n      }\r\n      const token = (await Notifications.getExpoPushTokenAsync()).data;\r\n      console.log(token);\r\n      firebase.firestore().collection('Users').doc(currentUserUid).set({\r\n        'Push Tokens': firebase.firestore.FieldValue.arrayUnion(token)\r\n      }, { merge: true })\r\n\r\n\r\n    if (Platform.OS === 'android') {\r\n      Notifications.setNotificationChannelAsync('default', {\r\n        name: 'default',\r\n        importance: Notifications.AndroidImportance.MAX,\r\n        vibrationPattern: [0, 250, 250, 250],\r\n        lightColor: '#FF00007C',\r\n      });\r\n    }\r\n  };\r\n\r\n  async function setNotificationCategories() {\r\n    await Notifications.setNotificationCategoryAsync(\"standard\",[\r\n      {\r\n        identifier:\"deleteNotif\", \r\n        buttonTitle: \"Delete\",\r\n        options: {\r\n          opensAppToForeground:false,\r\n          isAuthenticationRequired:true,\r\n          isDestructive:true\r\n        }\r\n      }\r\n    ],{previewPlaceholder:\"NotiBot Notification\"})\r\n    await Notifications.setNotificationCategoryAsync(\"webhookbutton\",[\r\n      {\r\n        identifier:\"webhookAction\", \r\n        buttonTitle: \"Trigger Webhook Action\",\r\n        options: {\r\n          opensAppToForeground:true,\r\n          isAuthenticationRequired:true,\r\n          isDestructive:false\r\n        }\r\n      },\r\n      {\r\n        identifier:\"deleteNotif\", \r\n        buttonTitle: \"Delete\",\r\n        options: {\r\n          opensAppToForeground:true,\r\n          isAuthenticationRequired:true,\r\n          isDestructive:true\r\n        }\r\n      }\r\n    ],{previewPlaceholder:\"NotiBot Notification With Webhook Action\"})\r\n    await Notifications.setNotificationCategoryAsync(\"webhooktext\",[\r\n      {\r\n        identifier:\"webhookReply\", \r\n        buttonTitle: \"Send Text to Webhook\",\r\n        textInput:{\r\n          submitButtonTitle:\"SEND\",\r\n          placeholder:\"\"\r\n        },\r\n        options: {\r\n          opensAppToForeground:true,\r\n          isAuthenticationRequired:true,\r\n          isDestructive:false\r\n        }\r\n      },\r\n      {\r\n        identifier:\"deleteNotif\", \r\n        buttonTitle: \"Delete\",\r\n        options: {\r\n          opensAppToForeground:true,\r\n          isAuthenticationRequired:true,\r\n          isDestructive:true\r\n        }\r\n      }\r\n    ],{previewPlaceholder:\"NotiBot Notification With Webhook Reply\"})\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (Constants.isDevice && Platform.OS !== 'web') { //Expo's support for web push is \"pending\"\r\n     registerForPushNotificationsAsync().then(setNotificationCategories)\r\n    }\r\n      \r\n  }, [true])\r\n\r\n  const getTimeStamp = (item) => projectsData?.[item]?.Notifications && projectsData[item].Notifications.length > 0 ? projectsData[item].Notifications[projectsData[item].Notifications.length - 1].timestamp : 0\r\n\r\n  React.useLayoutEffect(()=>{\r\n    const parsedDeepLink = initialDeepLink?.substring(prefix.length-1)\r\n    if(parsedDeepLink && parsedDeepLink.length>1 && parsedDeepLink[0]=='/') {\r\n      // Moved to a separate effect so it wont get triggers everytime projects changes\r\n      // linkTo(parsedDeepLink)\r\n    }else if(numberOfProjects == projects.length && !mainStackLoadedRef.current.queue) { // projects have finished downloading\r\n      if(projects.length>0){\r\n        console.log(\"opening most recent project!\")\r\n        navigation.navigate(\"Project\", { title: projects[0] })\r\n      }\r\n      navigation.openDrawer()\r\n    }\r\n    mainStackLoadedRef.current.mainStackLoaded()\r\n  },[projects, numberOfProjects])\r\n\r\n  React.useEffect(()=>{ // handle deep links\r\n    const parsedDeepLink = initialDeepLink?.substring(prefix.length-1)\r\n    if(parsedDeepLink && parsedDeepLink.length>1 && parsedDeepLink[0]=='/')\r\n      linkTo(encodeURI(parsedDeepLink))\r\n  },[true])\r\n\r\n  React.useLayoutEffect(() => {\r\n    const subscriptionFunctions = []\r\n    const unsub = firebase.firestore().collection('Users').doc(currentUserUid).onSnapshot({\r\n      includeMetadataChanges: true\r\n    }, (doc) => {\r\n      const source = doc.metadata.hasPendingWrites ? \"Local\" : \"Server\";\r\n      if (source == \"Server\") {\r\n        let data = (doc.data() && doc.data()[\"Projects\"]) ? doc.data()[\"Projects\"] : []\r\n        console.log(doc.data());\r\n        console.log(\"Current data: \" + data);\r\n        for (let projectName of data) {\r\n          if (!projects.includes(projectName)) {\r\n            const subFunc = (data) => {\r\n              setProjects(projects => {\r\n                if (projects.indexOf(projectName) == -1) {\r\n                  projects = [projectName, ...projects]\r\n                  console.log(`adding project to array: ${projectName}`)\r\n                }else if(!data){\r\n                  projects = projects.filter(project=>project!=projectName)\r\n                }\r\n                projects.sort((a, b) => getTimeStamp(b) - getTimeStamp(a))\r\n                setLoading(false)\r\n                console.log(projects)\r\n                return projects\r\n              })\r\n\r\n            }\r\n            listenToProject(projectName, subFunc, true)\r\n            subscriptionFunctions.push({ projectName, subFunc })\r\n          }\r\n        }\r\n        setNumberOfProjects(data.length)\r\n        if (data.length == 0) {\r\n          setLoading(false)\r\n        }\r\n      }\r\n    });\r\n    return () => {\r\n      for (let { projectName, subFunc } of subscriptionFunctions)\r\n        stopListeningToProject(projectName, subFunc)\r\n      unsub()\r\n    }\r\n  }, []);\r\n\r\n  const toggleOverlay = () => {\r\n    resetModalState()\r\n    setVisible(!visible);\r\n  };\r\n\r\n  //console.log(`projectsData: ${JSON.stringify(projectsData)}`)\r\n  return (\r\n    <>\r\n      <Overlay isVisible={visible} onBackdropPress={toggleOverlay} ModalComponent={Platform.OS === 'web' ? WebModal : Modal} overlayStyle={[Platform.OS != 'web' ? { width: \"80%\", margin: \"30%\", maxWidth: 400 /*,flexGrow:1,flex:1,*/ } : {}, { backgroundColor: \"red\", borderRadius: 10, bottom: \"20%\" }]}>\r\n        <View>\r\n          <View style={styles.textInputBox}>\r\n            <TextInput\r\n              placeholder=\"Project Name\"\r\n              placeholderTextColor=\"white\"\r\n              autoCapitalize=\"none\"\r\n              style={styles.textInput}\r\n              onChangeText={setProjectName}\r\n              value={projectName}\r\n            />\r\n          </View>\r\n          {errorMessage != '' &&\r\n            <Text style={styles.errorMessage}>\r\n              {errorMessage}\r\n            </Text>}\r\n          <Button\r\n            title=\"Create Project\"\r\n            onPress={createNewProject}\r\n          />\r\n        </View>\r\n      </Overlay>\r\n      <Header\r\n        backgroundColor=\"red\"\r\n        leftComponent={{ icon: 'plus', type: 'ant-design', color: 'white', onPress: toggleOverlay, size: 23 }}\r\n        centerComponent={{ text: 'Projects', style: { color: 'white', fontSize: 18, fontWeight: \"bold\" } }}\r\n        rightComponent={{ icon: \"settings\", type: 'feather', color: 'white', onPress: () => navigation.navigate('Settings'), size: 23 }}\r\n      />\r\n      <LinearGradient colors={[\"#ff000090\", \"red\"]} start={{ x: 0, y: .6 }} end={{ x: 0, y: 0 }} style={styles.container}>\r\n        {loading && <ActivityIndicator size=\"large\" />}\r\n        {!loading && <>\r\n          <FlatList\r\n            style={{ height: \"100%\", width: \"100%\" }}\r\n            data={projects}\r\n            renderItem={({ item }) => {\r\n              console.log(`item: ${item}`)\r\n              // console.log(projectsData)\r\n              // console.log(projectsData[item])\r\n              if (!projectsData[item]) {\r\n                console.warn(`Trying to render a project that doesn't exist item: ${item}`)\r\n                return null\r\n              }\r\n              return (<ListItem style={{ borderRadius: 20, marginVertical: 5 }} bottomDivider topDivider onPress={() => {\r\n                // navigation.closeDrawer()\r\n                navigation.navigate(\"Project\", { title: item })\r\n              }}\r\n                linearGradientProps={{\r\n                  colors: hashStringToColor(item),\r\n                  start: { x: 1, y: 0 },\r\n                  end: { x: 0, y: 0 },\r\n                }}\r\n                ViewComponent={LinearGradient}\r\n                containerStyle={{ borderRadius: 20 }}\r\n                >\r\n                <Avatar size=\"large\" rounded title={item.substring(0, 2)} />\r\n                <ListItem.Content>\r\n                  <ListItem.Title style={styles.listItemTitle}>{item}</ListItem.Title>\r\n                  <ListItem.Subtitle style={styles.listItemSubtitle}>{projectsData[item].Notifications && projectsData[item].Notifications.length > 0 ? projectsData[item].Notifications[projectsData[item].Notifications.length - 1].title : `No notifications yet!`}</ListItem.Subtitle>\r\n                </ListItem.Content>\r\n                <ListItem.Chevron />\r\n              </ListItem>)\r\n            }}\r\n            keyExtractor={item => item}\r\n            ListFooterComponent={Platform.OS == 'web' && <Button title=\"Open Docs\" titleStyle={{textDecorationLine:\"underline\",color:\"white\"}} onPress={()=>WebBrowser.openBrowserAsync('https://notibotdocs.kihtrak.com',{controlsColor:'#FF0000',showTitle:true})} type=\"clear\"/>}\r\n            ListEmptyComponent={<View style={{ flex: 1, flexGrow: 1, justifyContent: 'center', alignItems: 'center', padding: 20 }}><Text style={{color:\"white\"}}>You currently have no projects</Text><Button style={{ marginTop: 10 }} title=\"Create a new project\" onPress={toggleOverlay} /></View>}\r\n          />\r\n        </>}\r\n      </LinearGradient>\r\n    </>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: \"center\",\r\n    paddingTop: 5,\r\n    paddingHorizontal: 5,\r\n  },\r\n  textInputBox: {\r\n    borderBottomColor: \"white\",\r\n    borderBottomWidth: 1,\r\n    marginBottom: 20,\r\n    alignSelf: 'stretch',\r\n  },\r\n  textInput: {\r\n    fontSize: 24,\r\n    height: 40,\r\n    fontWeight: '200',\r\n    marginBottom: 0,\r\n    color: \"white\",\r\n    textAlign: 'center'\r\n  },\r\n  errorMessage: {\r\n    color: 'blue', marginBottom: 20\r\n  },\r\n  listItemTitle: {\r\n    fontSize: 30,\r\n    fontWeight: \"bold\"\r\n  },\r\n  listItemSubtitle: {\r\n    //fontSize:20\r\n  }\r\n})","import React from 'react'\r\nimport { StyleSheet, Platform, Image, Text, View, FlatList, ActivityIndicator, Button} from 'react-native'\r\nimport { ListItem } from 'react-native-elements'\r\nimport firebase from 'firebase';\r\nimport '@firebase/firestore';\r\nimport { Notifications } from 'expo';\r\n\r\nexport default function Settings({navigation}) {\r\n  function signOut(){\r\n    firebase.auth().signOut().then(/*()=>navigation.navigate('Loading')*/).catch((error) => console.error('Sign Out Error', error))\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Button title=\"Sign Out\" onPress={signOut}/>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  }\r\n})","import React, {useContext, useState} from 'react'\r\nimport { StyleSheet, Platform, Image, Text, View, FlatList, ActivityIndicator, Modal, SafeAreaView, TextInput, KeyboardAvoidingView, ScrollView, useWindowDimensions } from 'react-native'\r\nimport { ListItem, Button, Overlay, Avatar } from 'react-native-elements'\r\nimport WebModal from 'modal-react-native-web';\r\nimport * as Linking from 'expo-linking';\r\nimport { useLinkTo  } from '@react-navigation/native';\r\n\r\nimport { ProjectsContext, DeepLinkContext } from '../utils/contexts'\r\nimport { Alert } from 'react-native';\r\nimport Loading from './Loading';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nconst prefix = Linking.createURL('/');\r\n\r\nexport default function Project({ navigation, route }){\r\n    const {projectsData, listenToProject, stopListeningToProject} = useContext(ProjectsContext);\r\n    const projTitle = route.params?.title\r\n    const [notifications,updateNotifications] = useState(projectsData?.[projTitle]?.Notifications) //projectsData[projTitle] is guaranteed to exist due to previous screen\r\n    const dimensions = useWindowDimensions();\r\n    const isLargeScreen = dimensions.width >= 768;\r\n    \r\n    React.useEffect(()=>{\r\n      if(projTitle){\r\n        //updateNotifications(projectsData[projTitle].Notifications)\r\n        const handleProjUpdate = (newData)=>{\r\n          if(newData)\r\n            updateNotifications(newData.Notifications)\r\n          else\r\n            // navigation.goBack()\r\n            navigation.openDrawer()\r\n        }\r\n        listenToProject(projTitle,handleProjUpdate, true)\r\n        return ()=>stopListeningToProject(projTitle, handleProjUpdate)\r\n      }\r\n    },[projTitle])\r\n\r\n    // React.useEffect(()=>{\r\n    //   if(!projTitle)\r\n    //   navigation.openDrawer()\r\n    // },[navigation, projTitle])\r\n\r\n    React.useLayoutEffect(() => {\r\n          navigation.setOptions({...(projTitle?{\r\n            title: projTitle,\r\n            headerRight: () => (\r\n              <Button\r\n                icon={{\r\n                  name: \"ios-options-outline\",\r\n                  type:'ionicon',\r\n                  size: 25,\r\n                  color: \"white\"\r\n                }}\r\n                type=\"clear\"\r\n                onPress={()=>navigation.navigate(\"ProjectOptions\",{title:projTitle})}\r\n              />\r\n            ),\r\n          }:{title:\"\"}),\r\n          headerLeft:()=>{\r\n            if(isLargeScreen)\r\n              return null\r\n            return(\r\n              <Button\r\n                icon={{\r\n                  name: \"menu\",\r\n                  type:'entypo',\r\n                  size: 25,\r\n                  color: \"white\"\r\n                }}\r\n                type=\"clear\"\r\n                onPress={()=>navigation.openDrawer()}\r\n              />\r\n            )\r\n          }\r\n        });\r\n    }, [navigation, projTitle]);\r\n\r\n\r\n    // console.log(`projectsData: ${JSON.stringify(projectsData)}`)\r\n\r\n    const getSubtitle = (item) =>{\r\n        if(item.subtitle)\r\n            return item.subtitle\r\n        if(item.body)\r\n            return item.body\r\n        return \"\"\r\n    }\r\n\r\n\r\n    if(!projTitle){\r\n      // if(!isLargeScreen){\r\n      //   navigation.openDrawer()\r\n      //   return(<Loading/>)\r\n      // }\r\n      return(<View style={styles.container}>\r\n        <Text style={{fontSize:15, textAlign:\"center\"}}>Select a project</Text>\r\n      </View>)\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <FlatList\r\n            style={{height:\"100%\",width:\"100%\"}}\r\n            data={notifications?[...notifications].reverse():[]}\r\n            renderItem={({ item, index }) => <ListItem style={styles.listItem} bottomDivider topDivider onPress={\r\n              ()=>navigation.navigate(\"Notification\",{index: (notifications.length-1-index), timestamp: item.timestamp, projTitle})\r\n            }>\r\n                <ListItem.Content>\r\n                <ListItem.Title>{item.title.substring(0,30)}</ListItem.Title>\r\n                <ListItem.Subtitle>{getSubtitle(item).substring(0,40)}</ListItem.Subtitle>\r\n                <ListItem.Subtitle left>{new Date(item.timestamp).toLocaleString()}</ListItem.Subtitle>\r\n                </ListItem.Content>\r\n                <ListItem.Chevron/>\r\n            </ListItem>}\r\n            keyExtractor={item => item.title+item.timestamp}\r\n            ListEmptyComponent = {\r\n              <View style={{flex:1,flexGrow:1,height:\"100%\",justifyContent: 'center',alignItems: 'center', padding:20 }}>\r\n                <Text style={{fontSize:15, textAlign:\"center\",marginVertical:20}}>The project currently has no notifications</Text>\r\n\r\n                <Button title=\"Learn how to send yourself a notification\" titleStyle={{textDecorationLine:\"underline\"}} onPress={()=>WebBrowser.openBrowserAsync('https://notibotdocs.kihtrak.com',{controlsColor:'#FF0000',showTitle:true})} type=\"clear\"/>\r\n              </View>\r\n            }\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: \"center\"\r\n  }\r\n})","export const groups = [\"Owner\", \"Manager\", \"Subscriber\"]","import React from 'react'\r\nimport { StyleSheet, Platform, Image, ScrollView, FlatList, ActivityIndicator, Modal, SafeAreaView, TextInput, View, TouchableOpacity } from 'react-native'\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\r\nimport { ListItem, Button, Overlay, Avatar, Text } from 'react-native-elements'\r\nimport WebModal from 'modal-react-native-web';\r\nimport firebase from 'firebase';\r\nimport JSONTree from 'react-native-json-tree'\r\nimport Loading from './Loading'\r\n\r\nimport { ProjectsContext } from '../utils/contexts'\r\nimport { groups } from '../utils/constants'\r\n\r\nexport default function Notification({ navigation, route }){\r\n    const {projectsData, listenToProject, stopListeningToProject} = React.useContext(ProjectsContext);\r\n    const { index, timestamp, projTitle, resValue } = route.params\r\n    const [notification,updateNotification] = React.useState(projectsData?.[projTitle]?.Notifications?.[index]) //projectsData[projTitle].Notifications[index] is guaranteed to exist due to previous screen\r\n    const [webhookParamValue,setWebhookParamValue] = React.useState('')\r\n    const [webhookRes,setWebhookRes] = React.useState(resValue?resValue:'')\r\n\r\n    const checkCanDelete = () =>{\r\n        const currentUserUid = firebase.auth().currentUser.uid;\r\n        for(let index of [0,1])\r\n            if(projectsData?.[projTitle]?.[groups[index]]?.includes(currentUserUid))\r\n                return true\r\n        return false\r\n    }\r\n\r\n    const [canDelete,setCanDelete] = React.useState(checkCanDelete())\r\n\r\n    const db = firebase.firestore();\r\n\r\n    React.useLayoutEffect(()=>{\r\n        // Handle populating the previous state if the notification was opened with deep linking\r\n        const oldState = navigation.dangerouslyGetState()\r\n        console.log(\"oldState\")\r\n        console.log(JSON.stringify(oldState))\r\n        const {routes, index} = oldState\r\n        const prevRoute = routes?.[routes.length-2]\r\n        if(prevRoute?.name == \"Project\") // ensure that the correct screen came before\r\n            if(!prevRoute.params){ // only manually set params if they don't exist\r\n                prevRoute.params = {title: projTitle}\r\n                console.log(\"oldState\")\r\n                console.log(JSON.stringify(oldState))\r\n                navigation.reset({index, routes})\r\n            }\r\n    },[navigation])\r\n\r\n    React.useEffect(()=>{\r\n        const handleProjUpdate = (newData)=>{\r\n            if(newData && newData.Notifications){\r\n                let newIndex = /*index?index:*/newData.Notifications.length\r\n                while(newIndex>-1 && (!newData.Notifications[newIndex] || newData.Notifications[newIndex].timestamp > timestamp))\r\n                    newIndex--\r\n                if(newData.Notifications[newIndex] && newData.Notifications[newIndex].timestamp == timestamp){\r\n                    setCanDelete(checkCanDelete())\r\n                    updateNotification(newData.Notifications[newIndex])\r\n                    navigation.setParams({index: newIndex})\r\n                }else\r\n                    navigation.goBack()\r\n            }else\r\n                navigation.goBack()\r\n        }\r\n        listenToProject(projTitle,handleProjUpdate, true)\r\n        return ()=>stopListeningToProject(projTitle, handleProjUpdate)\r\n    },[projTitle,timestamp])\r\n\r\n    const deleteNotification=async ()=>{\r\n        await db.collection('Projects').doc(projTitle).set({\r\n            'Notifications':firebase.firestore.FieldValue.arrayRemove(notification)\r\n        }, { merge: true })\r\n    }\r\n\r\n    React.useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: notification?.title,\r\n            headerRight: () => canDelete\r\n                && <Button\r\n                    disabled={!canDelete}\r\n                    icon={{\r\n                        name: \"trash-outline\",\r\n                        type:'ionicon',\r\n                        size: 25,\r\n                        color: \"white\"\r\n                    }}\r\n                    type=\"clear\"\r\n                    titleStyle={styles.headerButtonTitle}\r\n                    onPress={deleteNotification}\r\n                />\r\n            ,\r\n        });\r\n    }, [navigation, canDelete, notification]);\r\n\r\n    const makeRequest = () => {\r\n        const url = notification.webhook+webhookParamValue\r\n        fetch(url).then(res=>res.text()).then(setWebhookRes).catch(e=>setWebhookRes(e.toString()))\r\n    }\r\n\r\n    if(!notification)\r\n        return(<Loading/>)\r\n\r\n    return (\r\n        <KeyboardAwareScrollView>\r\n            <ScrollView /*contentContainerStyle={styles.container}*/>\r\n                <SafeAreaView>\r\n                    <View style={styles.headerView}>\r\n                        <Text h1>{notification.title}</Text>\r\n                    </View>\r\n                    <View style={{alignItems: \"center\"}}>\r\n                        <View style={styles.subheaderView}>\r\n                            {notification.subtitle&&<Text style={styles.textMargin} h4 left>{notification.subtitle}</Text>}{notification.timestamp && <Text style={styles.textMargin} right>{`${new Date(notification.timestamp).toLocaleString()}\\nEpoch: ${notification.timestamp}`}</Text>}\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.dataView}>\r\n                        <Text style={styles.textMargin}>{notification.body}</Text>\r\n                        {notification.webhook && <Text style={styles.textMargin}>Webhook: {notification.webhook}</Text>}\r\n                    </View>\r\n                    {notification.webhook && <View style={{alignItems: \"center\"}}>\r\n                        {notification.webhookParam && \r\n                        <View style={styles.textInputBox}>\r\n                            <TextInput\r\n                                placeholder=\"URL parameter value\"\r\n                                autoCapitalize=\"none\"\r\n                                style={styles.textInput}\r\n                                onChangeText={setWebhookParamValue}\r\n                                value={webhookParamValue}\r\n                            />\r\n                        </View>}\r\n                        <TouchableOpacity \r\n                            style={[styles.submitButton,{backgroundColor:\"green\"}]}\r\n                            onPress={makeRequest}\r\n                        >\r\n                            <Text style={{color:\"white\",fontSize:20,}}>Call {notification.webhook+webhookParamValue} {webhookRes && \"Again\"}</Text>\r\n                        </TouchableOpacity>\r\n                    </View>}\r\n                    <View style={styles.dataView}>\r\n                        {!!webhookRes && <Text style={styles.textMargin}>Response: {webhookRes}</Text>}\r\n                    </View>\r\n                </SafeAreaView>\r\n            </ScrollView>\r\n        </KeyboardAwareScrollView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    //justifyContent: 'center',\r\n  },\r\n  headerView:{\r\n    alignItems: \"center\",\r\n  },\r\n  subheaderView: {\r\n    flex: 1,\r\n    flexDirection:'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  textMargin:{\r\n      margin:10,\r\n  },\r\n  headerButtonTitle:{\r\n      color:'white'\r\n  },\r\n  dataView:{\r\n      flex:1,\r\n      flexDirection:'column',\r\n      justifyContent:\"flex-start\"\r\n  },\r\n  textInputBox: {\r\n    borderBottomColor:\"black\",\r\n    borderBottomWidth: 1,\r\n    margin:10,\r\n    marginBottom: 40,\r\n    alignSelf: 'stretch',\r\n  },\r\n  textInput: {\r\n    fontSize: 24,\r\n    height: 40,\r\n    fontWeight: '200',\r\n    marginBottom: 0,\r\n    color:\"black\",\r\n  },\r\n  submitButton:{\r\n    alignItems: 'center',\r\n    padding:15,\r\n    borderRadius:7,\r\n    marginBottom:10,\r\n    margin:7,\r\n    alignSelf: 'stretch',\r\n  },\r\n})","import React from 'react'\r\nimport { StyleSheet, Platform, Image, Text, View, FlatList, ActivityIndicator, Modal, SafeAreaView, TextInput, KeyboardAvoidingView, ScrollView, Alert } from 'react-native'\r\nimport { ListItem, Button, Overlay, Avatar, Icon } from 'react-native-elements'\r\nimport WebModal from 'modal-react-native-web';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport firebase from 'firebase';\r\nimport { ProjectsContext } from '../utils/contexts'\r\nimport { groups } from '../utils/constants'\r\n\r\nconst groupDescriptions = [\"Full Access\", \"Can't delete project or edit team members\", \"Can only view data, can't delete notifications\"]\r\n\r\nexport default function Home({ navigation, route }) {\r\n    const { projectsData, listenToProject, stopListeningToProject } = React.useContext(ProjectsContext);\r\n    const projTitle = route.params.title\r\n    const [users, setUsers] = React.useState([])\r\n    const [currentGroupNum, setCurrentGroupNum] = React.useState(groups.length)\r\n    const [canLeave, setCanLeave] = React.useState(false)\r\n    const [visible, setVisible] = React.useState(false);\r\n    const [email, setEmail] = React.useState('');\r\n    const [errorMessage, setErrorMessage] = React.useState('');\r\n    const profileInfoMap = React.useRef({});\r\n\r\n    const db = firebase.firestore();\r\n\r\n    const projectInfo = projectsData[projTitle]\r\n\r\n    const currentUserUid = firebase.auth().currentUser.uid;\r\n\r\n    React.useLayoutEffect(() => {\r\n        const handleProjUpdate = (newData) => {\r\n            console.log(\"triggered\")\r\n            if (newData) {\r\n                let tempUsers = []\r\n                let tempCurrentGroupNum\r\n                for (let groupName of groups){\r\n                    console.log(groupName)\r\n                    if (newData[groupName])\r\n                        for (let uid of newData[groupName]) {\r\n                            console.log(uid)\r\n                            if (uid == currentUserUid)\r\n                                tempCurrentGroupNum = groups.indexOf(groupName)\r\n                            if (!profileInfoMap.current[uid])\r\n                                fetch(\"https://notibot-server.herokuapp.com/getProfileInfo\", { body: JSON.stringify({ uid }), method: 'POST', headers: { \"Content-Type\": \"application/json\" } }).then((res) => res.json()).then((profile) => {\r\n                                    profileInfoMap.current[uid] = profile\r\n                                    //console.log(profile)\r\n                                    setUsers((users)=>[...users, { group: groupName, profile: profileInfoMap.current[uid] }])\r\n                                })\r\n                            else {\r\n                                tempUsers.push({ group: groupName, profile: profileInfoMap.current[uid] }) // Don't re-render until finished\r\n                            }\r\n                        }\r\n                }\r\n                setCurrentGroupNum(tempCurrentGroupNum)\r\n                if (tempUsers.length > 0)\r\n                    setUsers(tempUsers)\r\n                if (tempCurrentGroupNum != 0 || newData[groups[0]].length > 1)\r\n                    setCanLeave(true)\r\n                else\r\n                    setCanLeave(false)\r\n            } else\r\n                navigation.goBack()\r\n        }\r\n        listenToProject(projTitle, handleProjUpdate, true)\r\n        return () => stopListeningToProject(projTitle, handleProjUpdate)\r\n    }, [])\r\n\r\n\r\n    React.useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: `${projTitle} Options`,\r\n        });\r\n    }, [navigation]);\r\n\r\n    const resetModalState = () => {\r\n        setEmail('')\r\n        setErrorMessage('')\r\n    }\r\n\r\n    const toggleOverlay = () => {\r\n        resetModalState()\r\n        setVisible(!visible);\r\n    };\r\n\r\n    const deleteProject = () => {\r\n        Alert.alert(`Delete ${projTitle}`, `Are you sure you want to delete ${projTitle}?`,\r\n            [{\r\n                text: 'Delete',\r\n                onPress: async () => {\r\n                    firebase.auth().currentUser.getIdToken(true)\r\n                        .then((idToken) => fetch(\"https://notibot-server.herokuapp.com/deleteProject\", { body: JSON.stringify({ idToken, project: projTitle }), method: 'POST', headers: { \"Content-Type\": \"application/json\" } }))\r\n                        .catch(e => Alert.alert(\"An error occurred while attempting to delete the project\"))\r\n                },\r\n                style: \"destructive\"\r\n            }, { text: 'Cancel', style: 'cancel' },],\r\n            { cancelable: true }\r\n        );\r\n    }\r\n\r\n    const deleteNotifications = () => {\r\n        Alert.alert(`Delete ${projTitle}`, `Are you sure you want to delete all of ${projTitle}'s notifications?`,\r\n            [{\r\n                text: 'Delete',\r\n                onPress: async () => {\r\n                    await db.collection('Projects').doc(projTitle).update({\r\n                        Notifications: firebase.firestore.FieldValue.delete()\r\n                    }).then(() => navigation.goBack()).catch(e => Alert.alert(\"An error occurred while attempting to delete the notifications\"))\r\n                },\r\n                style: \"destructive\"\r\n            }, { text: 'Cancel', style: 'cancel' },],\r\n            { cancelable: true }\r\n        );\r\n    }\r\n\r\n    const addUser = () => {\r\n        fetch(\"https://notibot-server.herokuapp.com/getProfileByEmail\", { body: JSON.stringify({ email }), method: 'POST', headers: { \"Content-Type\": \"application/json\" } })\r\n            .then((res) => res.json()).then((profile) => {\r\n                console.log(profile)\r\n                return firebase.auth().currentUser.getIdToken(true)\r\n                    .then((idToken) => fetch(\"https://notibot-server.herokuapp.com/addUserToProject\", { \r\n                        body: JSON.stringify({ idToken, project: projTitle, uid:profile.uid }), \r\n                        method: 'POST', \r\n                        headers: { \"Content-Type\": \"application/json\" } \r\n                    }))\r\n            }).then(()=>setVisible(false)).catch(e => Alert.alert(`An error occurred while attempting to add ${email} to the project`))\r\n    }\r\n\r\n    const removeUser = (email) => {\r\n        fetch(\"https://notibot-server.herokuapp.com/getProfileByEmail\", { body: JSON.stringify({ email }), method: 'POST', headers: { \"Content-Type\": \"application/json\" } })\r\n            .then((res) => res.json()).then((profile) => {\r\n                console.log(profile)\r\n                return firebase.auth().currentUser.getIdToken(true)\r\n                    .then((idToken) => fetch(\"https://notibot-server.herokuapp.com/removeUserFromProject\", { \r\n                        body: JSON.stringify({ idToken, project: projTitle, uid:profile.uid }), \r\n                        method: 'POST', \r\n                        headers: { \"Content-Type\": \"application/json\" } \r\n                    }))\r\n            }).catch(e => Alert.alert(`An error occurred while attempting to remove ${email} from the project`))\r\n    }\r\n\r\n    const leaveProject = async () => {\r\n        await db.collection('Projects').doc(projTitle).update({\r\n            [groups[currentGroupNum]]: firebase.firestore.FieldValue.arrayRemove(currentUserUid)\r\n        })\r\n        await db.collection('Users').doc(currentUserUid).update({\r\n            'Projects': firebase.firestore.FieldValue.arrayRemove(projTitle)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Overlay isVisible={visible} onBackdropPress={toggleOverlay} ModalComponent={Platform.OS === 'web' ? WebModal : Modal} overlayStyle={[Platform.OS != 'web' ? { width: \"80%\", margin: \"30%\", maxWidth: 400 /*,flexGrow:1,flex:1,*/ } : {}, { backgroundColor: \"red\", borderRadius: 10, bottom: \"20%\" }]}>\r\n                <View>\r\n                    <View style={styles.textInputBox}>\r\n                        <TextInput\r\n                            placeholder=\"Email\"\r\n                            placeholderTextColor=\"white\"\r\n                            autoCapitalize=\"none\"\r\n                            style={styles.textInput}\r\n                            onChangeText={setEmail}\r\n                            value={email}\r\n                        />\r\n                    </View>\r\n                    {errorMessage != '' &&\r\n                        <Text style={styles.errorMessage}>\r\n                            {errorMessage}\r\n                        </Text>}\r\n                    <Button\r\n                        title=\"Add User\"\r\n                        onPress={addUser}\r\n                    />\r\n                </View>\r\n            </Overlay>\r\n            <ScrollView contentContainerStyle={styles.container}>\r\n                <View style={{width:\"100%\"}}>\r\n                    {(() => {\r\n                        let userElements = []\r\n                        for(let itemIndex in users){\r\n                            let item = users[itemIndex]\r\n                            let controller\r\n                            userElements.push(<ListItem key={item.profile.email} style={[styles.listItem, {zIndex: -1*itemIndex}]} bottomDivider topDivider>\r\n                                <Avatar source={{ uri: item.profile.photoURL }} title={item.profile.email.substring(0,2)} rounded />\r\n                                <ListItem.Content>\r\n                                    <ListItem.Title>{item.profile.displayName}</ListItem.Title>\r\n                                    <ListItem.Subtitle adjustsFontSizeToFit numberOfLines={1}>{item.profile.email}</ListItem.Subtitle>\r\n                                </ListItem.Content>\r\n                                <DropDownPicker disabled={currentGroupNum > 0 || (currentUserUid == item.profile.uid && !canLeave)} items={[...groups, \"Remove\"].map(el => ({ label: el, value: el }))} defaultValue={item.group} containerStyle={{ flexGrow: .5 }} itemStyle={{overflow: \"visible\"}} controller={instance => controller = instance} onChangeItem={(el)=>{\r\n                                    const {value:newValue} = el\r\n                                    console.log(newValue)\r\n                                    if(newValue == \"Remove\"){\r\n                                        Alert.alert(`Remove ${item.profile.email}`, `Are you sure you want remove ${item.profile.email} from this project?`,\r\n                                            [{\r\n                                                text: 'Remove',\r\n                                                onPress: async () => {\r\n                                                    removeUser(item.profile.email)\r\n                                                },\r\n                                                style: \"destructive\"\r\n                                            }, \r\n                                            { text: 'Cancel', style: 'cancel',\r\n                                                onPress: ()=>{\r\n                                                    controller.selectItem(item.group)\r\n                                                }\r\n                                            }],\r\n                                            { cancelable: true, onDismiss:()=>{\r\n                                                controller.selectItem(item.group)\r\n                                            }}\r\n                                        );\r\n                                    }else{\r\n                                        const updateObj = {}\r\n                                        groups.forEach(el => { updateObj[el] = firebase.firestore.FieldValue.arrayRemove(item.profile.uid) })\r\n                                        updateObj[newValue] = firebase.firestore.FieldValue.arrayUnion(item.profile.uid)\r\n                                        db.collection('Projects').doc(projTitle).update(updateObj)\r\n                                    }\r\n                                }}/>\r\n                            </ListItem>)\r\n                        }\r\n                        if(userElements.length==0){\r\n                            return <ActivityIndicator size=\"large\" style={{padding:10}}/>\r\n                        }\r\n                        return userElements\r\n                    })()}\r\n                </View>\r\n                {/* <FlatList\r\n                    style={{ width: \"100%\", maxHeight: \"60%\" }}\r\n                    data={users}\r\n                    renderItem={({ item, index }) => {\r\n                        //console.log(item)\r\n                        return (<View style={{zIndex:-999999*index}}><ListItem style={styles.listItem} bottomDivider topDivider>\r\n                            <Avatar source={{ uri: item.profile.photoURL }} rounded />\r\n                            <ListItem.Content>\r\n                                <ListItem.Title>{item.profile.displayName}</ListItem.Title>\r\n                                <ListItem.Subtitle adjustsFontSizeToFit numberOfLines={1}>{item.profile.email}</ListItem.Subtitle>\r\n                            </ListItem.Content>\r\n                            <DropDownPicker disabled={currentGroupNum < 0} items={groups.map(el => ({ label: el, value: el }))} defaultValue={item.group} containerStyle={{ flexGrow: .5 }} style={{zIndex:999999*index}}/>\r\n                        </ListItem></View>)\r\n                    }}\r\n                    keyExtractor={item => item.profile.uid}\r\n                    ListEmptyComponent={<View style={{ flex: 1, flexGrow: 1, justifyContent: 'center', alignItems: 'center', padding: 20 }}><ActivityIndicator size=\"large\" /><Text>Populating with members...</Text></View>}\r\n                /> */}\r\n                <ListItem style={[{ zIndex: -9 }, styles.listItem]} bottomDivider topDivider disabled={currentGroupNum > 0} onPress={toggleOverlay}>\r\n                    <Icon name='plus' type='ant-design' color='blue' />\r\n                    <ListItem.Content>\r\n                        <ListItem.Title>Add User</ListItem.Title>\r\n                    </ListItem.Content>\r\n                </ListItem>\r\n                {(() => {\r\n                    const arr = []\r\n                    for (let groupIndex in groups) {\r\n                        // console.log(`${groupIndex} - ${currentGroupNum}`)\r\n                        arr.push(<View key={groupIndex} style={[styles.listItem, styles.descContainer]}>\r\n                            <Text style={[groupIndex == currentGroupNum ? { color: 'blue' } : {}, styles.groupTitle, styles.groupText]}>{groups[groupIndex]}</Text>\r\n                            <Text style={[styles.groupDesc, styles.groupText]}>{groupDescriptions[groupIndex]}</Text>\r\n                        </View>)\r\n                    }\r\n                    return arr\r\n                })()}\r\n                <Button\r\n                    disabled={currentGroupNum > 1}\r\n                    containerStyle={{ marginTop: 20, }}\r\n                    title=\"Delete Notifications\"\r\n                    buttonStyle={styles.deleteButton}\r\n                    onPress={deleteNotifications}\r\n                />\r\n                <Button\r\n                    disabled={!canLeave}\r\n                    containerStyle={{ marginTop: 20, }}\r\n                    title={`Leave Project`}\r\n                    buttonStyle={styles.leaveButton}\r\n                    onPress={leaveProject}\r\n                />\r\n                {!canLeave && <Text style={styles.explanationText}>You are the only owner, you can't leave until appointing a new owner</Text>}\r\n                <Button\r\n                    disabled={currentGroupNum > 0}\r\n                    containerStyle={{ marginTop: 20, }}\r\n                    title=\"Delete Project\"\r\n                    buttonStyle={styles.deleteButton}\r\n                    onPress={deleteProject}\r\n                />\r\n            </ScrollView>\r\n        </>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        //flex: 1,\r\n        // justifyContent: 'center',\r\n        paddingBottom:20,\r\n        alignItems: \"center\"\r\n    },\r\n    deleteButton: {\r\n        backgroundColor: \"red\"\r\n    },\r\n    leaveButton: {\r\n        backgroundColor: \"blue\"\r\n    },\r\n    listItem: {\r\n        width: \"100%\",\r\n        //zIndex:-1\r\n    },\r\n    descContainer: {\r\n        flexGrow: 1,\r\n        flexDirection: \"row\",\r\n        padding: 10,\r\n        zIndex: -99\r\n    },\r\n    groupTitle: {\r\n        marginRight: 10,\r\n        flexBasis: 100,\r\n    },\r\n    groupText: {\r\n        fontSize: 15,\r\n    },\r\n    groupDesc: {\r\n        flexShrink: 1,\r\n        flexWrap: 'wrap'\r\n    },\r\n    explanationText: {\r\n        textAlign: \"center\",\r\n        marginHorizontal: 20\r\n    },\r\n    textInputBox: {\r\n        borderBottomColor: \"white\",\r\n        borderBottomWidth: 1,\r\n        marginBottom: 20,\r\n        alignSelf: 'stretch',\r\n    },\r\n    textInput: {\r\n        fontSize: 24,\r\n        height: 40,\r\n        fontWeight: '200',\r\n        marginBottom: 0,\r\n        color: \"white\",\r\n        textAlign: 'center'\r\n    }\r\n})","import React, {useEffect, useRef} from 'react';\nimport { Button, Text, TextInput, View, useWindowDimensions, Dimensions, Platform, Alert } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator,   DrawerContentScrollView,  DrawerItemList, } from '@react-navigation/drawer';\nimport { ProjectsContext, DeepLinkContext, MainStackLoadedContext } from './utils/contexts'\nimport FlashMessage from \"react-native-flash-message\";\nimport { showMessage, hideMessage } from \"react-native-flash-message\";\nimport * as Linking from 'expo-linking';\nimport { useLinkTo  } from '@react-navigation/native';\nimport Constants from 'expo-constants';\nimport useRootNavigation from './utils/useRootNavigation'\nimport * as SplashScreen from 'expo-splash-screen';\n\nimport Loading from './screens/Loading'\nimport Login from './screens/Login'\nimport SignUp from './screens/SignUp'\nimport Home from './screens/Home'\nimport Settings from './screens/Settings'\nimport Project from './screens/Project'\nimport Notification from './screens/Notification'\nimport ProjectOptions from './screens/ProjectOptions'\n\nimport * as Notifications from 'expo-notifications'\n\n// import 'expo-firestore-offline-persistence'\nimport firebase from \"firebase\";\n// import 'firebase/firestore'\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBc_AtukKnVqdNYRefB-NtZLy5otD8KMvA\",\n  authDomain: \"notibotapp.firebaseapp.com\",\n  databaseURL: \"https://notibotapp.firebaseio.com\",\n  projectId: \"notibotapp\",\n  storageBucket: \"notibotapp.appspot.com\",\n};\n\ntry {\n  firebase.initializeApp(firebaseConfig);\n} catch (err) {\n    // ignore app already initialized error in stack\n}\n// firebase.firestore().enablePersistence()\n\nconst Stack = createStackNavigator();\nconst Drawer = createDrawerNavigator();\nconst db = firebase.firestore();\n\nconst prefix = Linking.createURL('/');\n\nexport default function App() {\n  const projectsData = React.useRef({});\n  const userData = React.useRef({});\n  const callbacks = React.useRef({});\n  const listeners = React.useRef({});\n  const notificationListener = useRef();\n  const responseListener = useRef();\n  const mainStackLoadedRef = useRef({\n    mainStackLoaded: () =>{\n      setTimeout(()=>SplashScreen.hideAsync(),500)\n      mainStackLoadedRef.current.loaded = true\n      if(mainStackLoadedRef.current.queue)\n        mainStackLoadedRef.current.queue()\n    },\n    loaded:false,\n    queue:null\n  });\n  const [initialDeepLink, setInitialDeepLink] = React.useState(null);\n  // don't use hook on web because resizing is a common action and the site shouldn't reload on every resize\n  const dimensionWidth = Platform.OS === 'web'?Dimensions.get('window').width:useWindowDimensions().width; \n  const isLargeScreen = dimensionWidth >= 768;\n  // const linkTo = useLinkTo();\n  const navigation = useRootNavigation();\n\n  const openLinkInApp = (appUrl)=>{\n    if(mainStackLoadedRef.current.loaded)\n      navigation.linkTo(appUrl)\n    else\n      mainStackLoadedRef.current.queue = ()=> navigation.linkTo(appUrl)\n  }\n  \n  // Set up notifications\n  React.useLayoutEffect(() => {\n    // setTimeout(()=>navigation.linkTo(`Main/Projects/Notification?projTitle=testt&timestamp=1621574434297`),5*1000)\n\n    if (Constants.isDevice && Platform.OS !== 'web') { //Expo's support for web push is \"pending\"\n      notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\n        const notifContent = notification.request.content\n        // console.log(notification)\n        showMessage({\n          message: notifContent.title,\n          description: notifContent.body,\n          type: \"info\",\n          hideStatusBar:true,\n          onPress: ()=>{\n            navigation.linkTo(`/Main/Projects/Notification?projTitle=${notifContent.data?.project}&timestamp=${notifContent.data?.firebaseData?.timestamp}`)\n          }\n        });\n      });\n\n      responseListener.current = Notifications.addNotificationResponseReceivedListener(async response => {\n        const notifMetaData = response.notification.request.content.data\n        if (response.actionIdentifier == \"deleteNotif\"){\n          // Alert.alert(\"delete\")\n          return db.collection('Projects').doc(notifMetaData?.project).set({\n            'Notifications':firebase.firestore.FieldValue.arrayRemove(notifMetaData?.firebaseData)\n          }, { merge: true })\n        }\n        let url = \"\"\n        if(response.actionIdentifier == \"webhookAction\"){\n          url = notifMetaData?.firebaseData?.webhook\n        }else if(response.actionIdentifier == \"webhookReply\"){\n          url = notifMetaData?.firebaseData?.webhook + response?.userText\n        }else{ // response.actionIdentifier == Notifications.DEFAULT_ACTION_IDENTIFIER\n          return openLinkInApp(encodeURI(`Main/Projects/Notification?projTitle=${notifMetaData?.project}&timestamp=${notifMetaData?.firebaseData?.timestamp}`))\n        }\n        const fetchCallback = (resStr, errored) =>{\n          showMessage({\n            message: errored?\"Webhook call failed!\":\"Webhook called!\",\n            type: errored?\"danger\":\"success\",\n            hideStatusBar:true,\n          });\n          openLinkInApp(encodeURI(`Main/Projects/Notification?projTitle=${notifMetaData?.project}&timestamp=${notifMetaData?.firebaseData?.timestamp}&resValue=${resStr}`))\n        }\n        fetch(url).then(res=>res.text())\n        .then(fetchCallback)\n        .catch((e)=>fetchCallback(e.toString(), true))\n      });\n    }\n       //else {\n      //alert('Must use physical device for Push Notifications');\n      //}\n    return () => {\n      Notifications.removeNotificationSubscription(notificationListener.current);\n      Notifications.removeNotificationSubscription(responseListener.current);\n    };\n  }, [true])\n\n  const [state, dispatch] = React.useReducer(\n    (prevState, action) => {\n      switch (action.type) {\n        case 'SIGN_IN':\n          return {\n            ...prevState,\n            isLoading: false,\n            isSignedIn: action.isSignedIn,\n          };\n        case 'SIGN_OUT':\n          return {\n            ...prevState,\n            isLoading: false,\n            isSignedIn: false,\n          };\n      }\n    },\n    {\n      isLoading: true,\n      isSignedIn: false,\n    }\n  );\n\n  React.useLayoutEffect(()=>{\n    Linking.getInitialURL().then((url) => {\n      setInitialDeepLink(url)\n    });\n  },[true])\n\n\n  React.useLayoutEffect(() => {\n    try{\n      firebase.auth().onAuthStateChanged((user) => {\n        console.log(`Auth: ${!!user}`)\n        dispatch({ type: 'SIGN_IN', isSignedIn: !!user });\n        if(user){\n          setTimeout(()=>SplashScreen.hideAsync(),3000)\n        }\n      })\n    }catch(e){\n      SplashScreen.hideAsync()\n    }\n  }, []);\n\n  React.useLayoutEffect(()=>{\n    SplashScreen.preventAutoHideAsync();\n  },[true])\n\n  //const projectsData = {}\n\n  const projContext = {\n    projectsData: projectsData.current,\n    listenToProject: (projectName, callback, callOnInit)=>{\n      // console.log(JSON.stringify(callbacks.current))\n      if(callbacks.current[projectName]){\n        console.log(`listener already exists for ${projectName}`)\n        callbacks.current[projectName].push(callback)\n        if(callOnInit && projectName in projectsData.current)\n          callback(projectsData.current[projectName])\n      }else{\n        console.log(`creating listener for ${projectName}`)\n        callbacks.current[projectName] = [callback]\n        listeners.current[projectName] = db.collection('Projects').doc(projectName).onSnapshot({\n          includeMetadataChanges: true\n        },(doc) => {\n          const source = doc.metadata.hasPendingWrites ? \"Local\" : \"Server\";\n          // console.log(source)\n          if(source == \"Server\"){\n            // console.log(`Snapshot: ${projectName} - ${doc.data()}`)\n            projectsData.current[projectName] = doc.data()\n            for(let invCallback of callbacks.current[projectName])\n              invCallback(doc.data())\n          }\n        },\n        error=>{\n          // console.warn(error)\n          projectsData.current[projectName] = null\n          for(let invCallback of callbacks.current[projectName])\n            invCallback(null)\n        }\n        )\n      }\n    },\n    stopListeningToProject: (projectName, callback)=>{\n      // console.log(`Stopping listener - ${projectName}:${callback}\\n${callbacks.current[projectName]}`)\n      if(!callbacks.current[projectName]){\n        console.warn(\"Listener doesn't exist. How did this happen?\")\n      }\n      const index = callbacks.current[projectName].indexOf(callback)\n      console.log(`Index of callback in array: ${index}`)\n      callbacks.current[projectName].splice(index,1)\n      if(callbacks.current[projectName].length == 0){\n        callbacks.current[projectName] = null\n        listeners.current[projectName]();\n      }\n    }\n  }\n\n  const ProjectStack = () => {\n    return (<Stack.Navigator \n      screenOptions={{\n        headerStyle: {\n          backgroundColor: 'red',\n        },\n        headerTintColor: '#fff',\n        headerTitleStyle: {\n          fontWeight: 'bold',\n        },\n      }}\n    >\n      <Stack.Screen name=\"Project\" component={Project}/>\n      <Stack.Screen name=\"ProjectOptions\" component={ProjectOptions} />\n      <Stack.Screen name=\"Notification\" component={Notification} />\n    </Stack.Navigator>)\n  }\n\n  const DrawerNav = ()=> {\n    return(<Drawer.Navigator\n      // openByDefault\n      drawerType={isLargeScreen ? 'permanent' : 'back'}\n      drawerStyle={isLargeScreen ? null : { width: '100%' }}\n      overlayColor=\"transparent\"\n      drawerContent={(props) => {\n        return (<Home {...props} />)\n      }}\n      screenOptions={{\n        gestureEnabled:true\n      }}\n    >\n      <Drawer.Screen name=\"Projects\" component={ProjectStack}/>\n    </Drawer.Navigator>)\n  }\n\n  return (<NavigationContainer ref={navigation.navigationRef} linking={{\n    prefixes: [prefix, 'http://localhost:19006', 'https://notibot.kihtrak.com'],\n    screens: {\n      ProjectsDrawerScreen:{\n        path: '',\n        screens: {\n          Projects:{\n            path: '',\n            screens: {\n              Project: 'project/:title',\n              Notification: 'notification/:projTitle/:timestamp/:resValue?/:index?',\n            }\n          }\n        },\n      },\n    },\n    subscribe(listener) {\n      const onReceiveURL = ({ url }) => {\n        listener(url)\n        console.log(`setInitialDeepLink(${url})`)\n        if(url!=initialDeepLink)\n          setInitialDeepLink(url)\n      };\n\n      // Linking.getInitialURL().then((url) => {\n      //   console.log(`setInitialDeepLinkbyutnotreally(${url})`)\n      // });\n\n      // Listen to incoming links from deep linking\n      Linking.addEventListener('url', onReceiveURL);\n\n      return () => {\n        // Clean up the event listeners\n        Linking.removeEventListener('url', onReceiveURL);\n      };\n    },\n  }}>\n    <MainStackLoadedContext.Provider value={mainStackLoadedRef}>\n      <DeepLinkContext.Provider value={initialDeepLink}>\n        <ProjectsContext.Provider value={projContext}>\n            <Stack.Navigator \n              screenOptions={{\n                headerStyle: {\n                  backgroundColor: 'red',\n                },\n                headerTintColor: '#fff',\n                headerTitleStyle: {\n                  fontWeight: 'bold',\n                },\n              }}\n            >\n              {state.isLoading ? ( \n                <Stack.Screen name=\"Splash\" component={Loading} options={{ headerShown:false }}/>\n              ) : state.isSignedIn == false ? <>\n                 <Stack.Screen\n                  name=\"SignIn\"\n                  component={Login}\n                  options={{\n                    headerShown:false,\n                // When logging out, a pop animation feels intuitive\n                    animationTypeForReplace: !state.isSignedIn ? 'pop' : 'push',\n                  }}\n                />\n                <Stack.Screen\n                  name=\"SignUp\"\n                  component={SignUp}\n                  options={{\n                    headerShown:false,\n                // When logging out, a pop animation feels intuitive\n                    animationTypeForReplace: !state.isSignedIn ? 'pop' : 'push',\n                  }}\n                />\n                </> : <><Stack.Screen name=\"Main\" component={DrawerNav} options={{ headerShown:false }}/>\n                  <Stack.Screen name=\"Settings\" component={Settings} />\n                {/* <Stack.Screen name=\"Projects\" component={Home} /> */}\n              \n                {/* <Stack.Screen name=\"ProjectOptions\" component={ProjectOptions} />\n                <Stack.Screen name=\"Notification\" component={Notification} />\n                <Stack.Screen name=\"Settings\" component={Settings} /> */}\n              </>}\n            </Stack.Navigator>\n          </ProjectsContext.Provider>\n        </DeepLinkContext.Provider>\n      </MainStackLoadedContext.Provider>\n      <FlashMessage position=\"top\" />\n    </NavigationContainer>\n  );\n}\n"],"sourceRoot":""}