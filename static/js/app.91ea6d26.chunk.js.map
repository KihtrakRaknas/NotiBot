{"version":3,"sources":["utils/contexts.js","utils/useRootNavigation.js","screens/Loading.js","screens/Login.js","screens/SignUp.js","utils/hashStringToColor.js","screens/Home.js","screens/Settings.js","screens/Project.js","utils/constants.js","screens/Notification.js","screens/ProjectOptions.js","App.js"],"names":["ProjectsContext","React","createContext","DeepLinkContext","MainStackLoadedContext","navigationRef","createRef","dispatch","action","current","linkTo","path","config","state","getStateFromPath","getActionFromState","undefined","useRootNavigation","Loading","View","style","styles","container","Text","loadingText","ActivityIndicator","size","color","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","marginBottom","Login","navigation","useState","email","setEmail","password","setPassword","errorMessage","setErrorMessage","useEffect","SplashScreen","Platform","OS","WebBrowser","Constants","appOwnership","GoogleSignIn","catch","message","Alert","alert","Google","expoClientId","webClientId","androidClientId","iosClientId","request","response","promptAsync","console","log","type","id_token","params","credential","firebase","auth","GoogleAuthProvider","signInWithCredential","error","KeyboardAvoidingView","behavior","SafeAreaView","margin","title","textInputBox","TextInput","placeholder","placeholderTextColor","autoCapitalize","textInput","onChangeText","value","secureTextEntry","TouchableOpacity","submitButton","onPress","signInWithEmailAndPassword","then","user","includes","substring","indexOf","fontSize","disabled","button","light","a","async","idToken","titleStyle","navigate","borderBottomColor","borderBottomWidth","alignSelf","height","fontWeight","padding","borderRadius","SignUp","route","createUserWithEmailAndPassword","string","total","charCodeAt","firstPartOfString","toString","substr","prefix","Linking","Home","useContext","listenToProject","projectsData","stopListeningToProject","loading","setLoading","projects","setProjects","numberOfProjects","setNumberOfProjects","visible","setVisible","projectName","setProjectName","initialDeepLink","mainStackLoadedRef","useLinkTo","currentUserUid","currentUser","uid","db","firestore","setNotificationCategories","Notifications","identifier","buttonTitle","options","opensAppToForeground","isAuthenticationRequired","isDestructive","previewPlaceholder","submitButtonTitle","isDevice","name","importance","MAX","vibrationPattern","lightColor","existingStatus","status","finalStatus","token","data","collection","doc","set","FieldValue","arrayUnion","merge","registerForPushNotificationsAsync","useLayoutEffect","parsedDeepLink","length","queue","projectsLoaded","openDrawer","mainStackLoaded","encodeURI","subscriptionFunctions","unsub","onSnapshot","includeMetadataChanges","metadata","hasPendingWrites","some","projectObj","subFunc","filter","subtitle","timestamp","sort","b","JSON","stringify","push","toggleOverlay","isVisible","onBackdropPress","ModalComponent","WebModal","Modal","overlayStyle","width","maxWidth","bottom","toUpperCase","match","code","leftComponent","icon","centerComponent","text","rightComponent","LinearGradient","colors","start","x","y","end","FlatList","renderItem","item","marginVertical","bottomDivider","topDivider","linearGradientProps","hashStringToColor","ViewComponent","containerStyle","rounded","Content","Title","listItemTitle","adjustsFontSizeToFit","numberOfLines","Subtitle","listItemSubtitle","Chevron","keyExtractor","ListFooterComponent","textDecorationLine","controlsColor","showTitle","ListEmptyComponent","flexGrow","marginTop","paddingTop","paddingHorizontal","textAlign","Settings","buttonStyle","dangerButton","signOut","getIdToken","fetch","body","method","headers","res","json","resJSON","err","e","Project","projTitle","notifications","updateNotifications","isLargeScreen","useWindowDimensions","handleProjUpdate","newData","setOptions","headerRight","headerLeft","reverse","index","listItem","getSubtitle","left","Date","toLocaleString","groups","Notification","resValue","notification","updateNotification","webhookParamValue","setWebhookParamValue","webhookRes","setWebhookRes","checkCanDelete","canDelete","setCanDelete","oldState","dangerouslyGetState","routes","prevRoute","reset","newIndex","setParams","goBack","deleteNotification","arrayRemove","headerButtonTitle","ScrollView","headerView","h1","subheaderView","textMargin","h4","right","dataView","webhook","webhookParam","url","flexDirection","groupDescriptions","users","setUsers","currentGroupNum","setCurrentGroupNum","canLeave","setCanLeave","profileInfoMap","useRef","tempCurrentGroupNum","tempUsers","groupName","group","profile","removeUser","project","contentContainerStyle","userElements","itemIndex","controller","key","zIndex","source","uri","photoURL","displayName","items","map","el","label","defaultValue","itemStyle","overflow","instance","onChangeItem","newValue","selectItem","cancelable","onDismiss","updateObj","forEach","update","arr","groupIndex","descContainer","groupTitle","groupText","groupDesc","deleteButton","delete","leaveButton","explanationText","paddingBottom","marginRight","flexBasis","flexShrink","flexWrap","marginHorizontal","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","Stack","createStackNavigator","Drawer","createDrawerNavigator","App","callbacks","listeners","notificationListener","responseListener","setTimeout","loaded","setInitialDeepLink","Dimensions","get","openLinkInApp","appUrl","notifContent","content","showMessage","description","hideStatusBar","firebaseData","notifMetaData","actionIdentifier","userText","fetchCallback","resStr","errored","useReducer","prevState","isLoading","isSignedIn","onAuthStateChanged","projContext","callback","callOnInit","invCallback","warn","splice","ProjectStack","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","Screen","component","ProjectOptions","NavigationContainer","ref","linking","prefixes","screens","ProjectsDrawerScreen","Projects","subscribe","listener","onReceiveURL","Provider","headerShown","animationTypeForReplace","drawerType","drawerStyle","overlayColor","drawerContent","props","gestureEnabled","position"],"mappings":"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","file":"static/js/app.91ea6d26.chunk.js","sourcesContent":["import React from 'react';\r\nexport const ProjectsContext = React.createContext();\r\nexport const DeepLinkContext = React.createContext();\r\nexport const MainStackLoadedContext = React.createContext();","import { createRef } from 'react';\r\nimport { getActionFromState, getStateFromPath } from '@react-navigation/native';\r\n\r\nexport const navigationRef = createRef();\r\n\r\nexport function dispatch(action) {\r\n    navigationRef.current?.dispatch(action);\r\n}\r\n\r\nexport function linkTo(path, config = null) {\r\n  var state = getStateFromPath(path, config);\r\n  var action = getActionFromState(state);\r\n  if (action !== undefined) {\r\n    dispatch(action);\r\n  }\r\n}\r\n\r\nconst useRootNavigation = () => ({\r\n    navigationRef,\r\n  linkTo\r\n});\r\n\r\nexport default useRootNavigation","import React from 'react';\r\nimport { View, Text, ActivityIndicator, StyleSheet } from 'react-native'\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.loadingText}>Loading</Text>\r\n      <ActivityIndicator size=\"large\" color=\"white\"/>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor:\"red\"\r\n  },\r\n  loadingText:{\r\n    marginBottom:20,\r\n    color:\"white\"\r\n  }\r\n})","import React from 'react';\r\nimport { StyleSheet, Text, TextInput, View, Alert, KeyboardAvoidingView, TouchableOpacity, SafeAreaView, Platform} from 'react-native'\r\nimport firebase from 'firebase';\r\nimport * as Google from 'expo-auth-session/providers/google';\r\nimport * as GoogleSignIn from 'expo-google-sign-in';\r\nimport { SocialIcon } from 'react-native-elements';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport { Button } from 'react-native-elements';\r\nimport Constants from 'expo-constants';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nWebBrowser.maybeCompleteAuthSession();\r\n\r\nexport default function Login({ navigation }) {\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState(null);\r\n  \r\n  React.useEffect(()=>{SplashScreen.hideAsync()},[true])\r\n\r\n  function handleLogin() {\r\n    firebase\r\n    .auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((user) => {\r\n      //if(checkUserFeilds(doc.data()))\r\n        //navigation.navigate('LoggedIn')\r\n      // else\r\n      //   navigation.navigate('SetUp')\r\n    })\r\n    .catch(error => {\r\n      if(error.message.includes(\"The user may have been deleted\"))\r\n        error.message = error.message.substring(0,error.message.indexOf(\"The user may have been deleted\"))\r\n      // if(error.message.includes(\"the user does not have a password\"))\r\n      //   error.message =\r\n      Alert.alert(error.message)\r\n      setErrorMessage(error.message)\r\n    })\r\n  }  \r\n\r\n  React.useEffect(() => {\r\n    if(Platform.OS == 'android'){\r\n      WebBrowser.warmUpAsync();\r\n      \r\n      return () => {\r\n        WebBrowser.coolDownAsync();\r\n      };\r\n    }\r\n    if(Constants.appOwnership == \"standalone\"){ // init native sign in with google logic\r\n\r\n      GoogleSignIn.initAsync({\r\n        // You may ommit the clientId when the firebase `googleServicesFile` is configured\r\n        // clientId: '<YOUR_IOS_CLIENT_ID>',\r\n        // Provide other custom options...\r\n      }).catch (({ message }) => {\r\n        Alert.alert('GoogleSignIn.initAsync(): ' + message);\r\n      })\r\n    }\r\n\r\n  }, []);\r\n\r\n  const [request, response, promptAsync] = Google.useIdTokenAuthRequest(\r\n    {\r\n      expoClientId: '896187396809-tn4obhk9l23t5u8uhmrspmn89iph7lr0.apps.googleusercontent.com',\r\n      webClientId: '896187396809-5tbhq093deljombkbflt9c5mrfu7qvum.apps.googleusercontent.com',\r\n      // clientId: '896187396809-89ltb58u1or8fnetjgn90btpmb4ghmaq.apps.googleusercontent.com',\r\n      androidClientId: '896187396809-i55h6jach0jrja5studqj9dr2iiuhf8a.apps.googleusercontent.com',\r\n      iosClientId: \"896187396809-2ks3dj1dogegfsc8a9jr32s33tt4rben.apps.googleusercontent.com\",\r\n    },\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    console.log(\"response: \")\r\n    console.log(response)\r\n    if (response?.type === 'success') {\r\n      const { id_token } = response.params;\r\n      console.log(id_token)\r\n      const credential = firebase.auth.GoogleAuthProvider.credential(id_token);\r\n      firebase.auth().signInWithCredential(credential).catch((error) => {\r\n        console.log(error)\r\n        Alert.alert(error.message)\r\n      });\r\n    }\r\n  }, [response]);\r\n\r\n  return (\r\n    <KeyboardAvoidingView behavior={Platform.OS==\"ios\"?\"padding\":\"height\"} style={styles.container}>\r\n      <SafeAreaView style={{ flex: 1, justifyContent: 'center', alignItems: 'center', margin:20 }}>\r\n        <Text style={styles.title}>Login</Text>\r\n        {errorMessage &&\r\n        <Text style={styles.errorMessage}>\r\n            {errorMessage}\r\n        </Text>} \r\n        <View style={styles.textInputBox}>\r\n          <TextInput\r\n            placeholder=\"Email\"\r\n            placeholderTextColor=\"white\"\r\n            autoCapitalize=\"none\"\r\n            style={styles.textInput}\r\n            onChangeText={setEmail}\r\n            value={email}\r\n          />\r\n        </View>\r\n        <View style={styles.textInputBox}>\r\n          <TextInput\r\n            secureTextEntry\r\n            placeholder=\"Password\"\r\n            placeholderTextColor=\"white\"\r\n            autoCapitalize=\"none\"\r\n            style={styles.textInput}\r\n            onChangeText={setPassword}\r\n            value={password}\r\n          />\r\n        </View>\r\n        <TouchableOpacity \r\n          style={[styles.submitButton,{backgroundColor:\"blue\"}]}\r\n          onPress={handleLogin}\r\n        >\r\n          <Text style={{color:\"white\",fontSize:20,}}>Sign In</Text>\r\n        </TouchableOpacity>\r\n        {(Platform.OS != 'ios' || Constants.appOwnership != \"standalone\" || errorMessage == \"The password is invalid or the user does not have a password.\") && <SocialIcon\r\n          title={\"Sign In With Google\"}\r\n          disabled={(Constants.appOwnership != \"standalone\" || Platform.OS == 'web') && !request}\r\n          button={true}\r\n          light\r\n          style={styles.submitButton}\r\n          type={\"google\"}\r\n          onPress={async ()=>{\r\n            if(Constants.appOwnership != \"standalone\" || Platform.OS == 'web') {\r\n              console.log(\"promting async\")\r\n              promptAsync()\r\n            } else {\r\n              try {\r\n                await GoogleSignIn.askForPlayServicesAsync();\r\n                const { type, user } = await GoogleSignIn.signInAsync();\r\n                if (type === 'success') {\r\n                  const idToken = user.auth.idToken\r\n                  console.log(idToken)\r\n                  const credential = firebase.auth.GoogleAuthProvider.credential(idToken);\r\n                  firebase.auth().signInWithCredential(credential).catch((error) => {\r\n                    console.log(error)\r\n                    Alert.alert(error.message)\r\n                  });\r\n                }\r\n              } catch ({ message }) {\r\n                //Alert.alert('login: Error:' + message);\r\n              }\r\n            }\r\n          }}\r\n        />}\r\n        <Button\r\n          titleStyle={{color:\"white\"}}//\"#d1faff\"\r\n          title=\"Don't have an account? Sign Up\"\r\n          disabled={(Constants.appOwnership != \"standalone\" || Platform.OS != 'web') && !request}\r\n          onPress={() => navigation.navigate('SignUp',{email})}\r\n          type=\"clear\"\r\n        />\r\n      </SafeAreaView>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor:\"red\",\r\n  },\r\n  textInputBox: {\r\n    borderBottomColor:\"white\",\r\n    borderBottomWidth: 1,\r\n    marginBottom: 40,\r\n    alignSelf: 'stretch',\r\n  },\r\n  textInput: {\r\n    fontSize: 24,\r\n    height: 40,\r\n    fontWeight: '200',\r\n    marginBottom: 0,\r\n    color:\"white\",\r\n  },\r\n  title: {\r\n    fontSize:50,\r\n    marginBottom:30,\r\n    color:\"white\"\r\n  },\r\n  submitButton:{\r\n    alignItems: 'center',\r\n    padding:15,\r\n    borderRadius:7,\r\n    marginBottom:10,\r\n    margin:7,\r\n    alignSelf: 'stretch',\r\n  },\r\n  errorMessage:{\r\n    color: 'blue', marginBottom:20\r\n  }\r\n})","import React from 'react'\r\nimport { StyleSheet, Text, TextInput, View,  Alert, KeyboardAvoidingView, TouchableOpacity, SafeAreaView } from 'react-native'\r\nimport firebase from 'firebase';\r\nimport { Button } from 'react-native-elements';\r\n\r\nexport default function SignUp({ navigation, route}) {\r\n    const [email, setEmail] = React.useState(route.params.email)\r\n    const [password, setPassword] = React.useState(null)\r\n    const [errorMessage, setErrorMessage] = React.useState(null)\r\n    const handleSignUp = () => {\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(() => {\r\n          // firebase.firestore().collection('Users').doc(currentUser.uid).onSnapshot((doc) => {\r\n          //   console.log(\"Current data: \", doc.data());\r\n          //   if(checkUserFeilds(doc.data()))\r\n          //     this.props.navigation.navigate('LoggedIn')\r\n          //   else\r\n          //     this.props.navigation.navigate('SetUp')\r\n          // });\r\n        })\r\n        .catch(error => {\r\n          setErrorMessage(error.message)\r\n          Alert.alert(error.message)\r\n        })\r\n    }\r\n    return (\r\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n        <SafeAreaView style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>{/*  SafeAreaView makes it nice looking on iPad */}\r\n          <Text style={styles.title}>Sign Up</Text>\r\n          {errorMessage &&\r\n          <Text style={{ color: 'blue', marginBottom:20 }}>\r\n              {errorMessage}\r\n          </Text>} \r\n          <View style={styles.textInputBox}>\r\n            <TextInput\r\n              placeholder=\"Email\"\r\n              placeholderTextColor=\"white\"\r\n              autoCapitalize=\"none\"\r\n              style={styles.textInput}\r\n              onChangeText={setEmail}\r\n              value={email}\r\n            />\r\n          </View>\r\n          <View style={styles.textInputBox}>\r\n            <TextInput\r\n              secureTextEntry\r\n              placeholder=\"Password\"\r\n              placeholderTextColor=\"white\"\r\n              autoCapitalize=\"none\"\r\n              style={styles.textInput}\r\n              onChangeText={setPassword}\r\n              value={password}\r\n            />\r\n          </View>\r\n          <TouchableOpacity \r\n            style={styles.submitButton}\r\n            onPress={handleSignUp}\r\n          >\r\n            <Text style={{color:\"white\",fontSize:20,}}>Create Account</Text>\r\n          </TouchableOpacity>\r\n          <Button\r\n            titleStyle={{color:\"white\"}}//\"#d1faff\"\r\n            title=\"Already have an account? Login\"\r\n            onPress={() => navigation.navigate('SignIn')}\r\n            type=\"clear\"\r\n          />\r\n        </SafeAreaView>\r\n      </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor:\"red\",\r\n    \r\n  },\r\n  textInputBox: {\r\n    borderBottomColor:\"white\",\r\n    borderBottomWidth: 1,\r\n    marginBottom: 40,\r\n    alignSelf: 'stretch',\r\n  },\r\n  textInput: {\r\n    alignSelf: 'stretch',\r\n    fontSize: 24,\r\n    height: 40,\r\n    fontWeight: '200',\r\n    marginBottom: 0,\r\n    color:\"white\",\r\n  },\r\n  title: {\r\n    fontSize:50,\r\n    marginBottom:30,\r\n    color:\"white\"\r\n  },\r\n  submitButton:{\r\n    alignItems: 'center',\r\n    backgroundColor:\"blue\",\r\n    alignSelf: 'stretch',\r\n    padding:15,\r\n    borderRadius:7,\r\n    marginBottom:10\r\n  },\r\n})","export default (string)=>{\r\n    let total = 0;\r\n    for(let char of string)\r\n        total += char.charCodeAt(0)\r\n    // '}' is 125\r\n    // ' ' is 32\r\n    total%=126\r\n    // total-=32\r\n    total/=(126)\r\n    const firstPartOfString = '#' + total.toString(16).substr(2, 6)\r\n    console.log(firstPartOfString)\r\n    return [ firstPartOfString + \"00\", firstPartOfString + \"30\"]\r\n}","import React, { useRef, useContext, useLayoutEffect, useEffect } from 'react'\r\nimport { StyleSheet, Platform, Image, Text, View, FlatList, ActivityIndicator, Modal, SafeAreaView, TextInput, KeyboardAvoidingView, ScrollView } from 'react-native'\r\nimport { ListItem, Button, Overlay, Avatar, Header } from 'react-native-elements'\r\nimport firebase from 'firebase';\r\nimport * as Notifications from 'expo-notifications'\r\nimport Constants from 'expo-constants';\r\nimport WebModal from 'modal-react-native-web';\r\nimport hashStringToColor from '../utils/hashStringToColor'\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { ProjectsContext, DeepLinkContext, MainStackLoadedContext } from '../utils/contexts'\r\nimport { showMessage, hideMessage } from \"react-native-flash-message\";\r\nimport * as Linking from 'expo-linking';\r\nimport { useFocusEffect, useLinkTo } from '@react-navigation/native';\r\nimport { Alert } from 'react-native';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\n\r\nconst prefix = Linking.createURL('/');\r\n\r\nexport default function Home({ navigation }) {\r\n  const { projectsData, listenToProject, stopListeningToProject } = React.useContext(ProjectsContext);\r\n  // const notificationListener = useRef();\r\n  // const responseListener = useRef();\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [projects, setProjects] = React.useState([]);\r\n  const [numberOfProjects, setNumberOfProjects] = React.useState(null);\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [projectName, setProjectName] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const initialDeepLink = useContext(DeepLinkContext)\r\n  const mainStackLoadedRef = useContext(MainStackLoadedContext)\r\n  const linkTo = useLinkTo();\r\n\r\n  const currentUserUid = firebase.auth().currentUser.uid;\r\n  const db = firebase.firestore();\r\n\r\n  const resetModalState = () => {\r\n    setProjectName('')\r\n    setErrorMessage('')\r\n  }\r\n\r\n  async function createNewProject() {\r\n    const valid = await checkProjName()\r\n    if (valid) {\r\n      try{\r\n        await db.collection('Projects').doc(projectName.toUpperCase()).set({\r\n          'Owner': firebase.firestore.FieldValue.arrayUnion(currentUserUid)\r\n        })\r\n        await db.collection('Users').doc(currentUserUid).set({\r\n          'Projects': firebase.firestore.FieldValue.arrayUnion(projectName.toUpperCase())\r\n        }, { merge: true })\r\n        setVisible(false)\r\n      } catch(e) {\r\n        if(e.code == \"permission-denied\" || e.code == \"already-exists\"){\r\n          setErrorMessage(`Name already taken: ${projectName}`)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async function checkProjName() {\r\n    if (projectName.toUpperCase().length < 2) {\r\n      setErrorMessage(`Your name must be at least 2 characters. You only have: ${projectName.length}`)\r\n      return false\r\n    }\r\n    if (!projectName.toUpperCase().match(\"^[A-Z0-9]+$\")){\r\n      setErrorMessage(`Your name must only have letters and numbers (no spaces or special characters)`)\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  async function registerForPushNotificationsAsync() {\r\n      if (Platform.OS === 'android') {\r\n        Notifications.setNotificationChannelAsync('default', {\r\n          name: 'default',\r\n          importance: Notifications.AndroidImportance.MAX,\r\n          vibrationPattern: [0, 250, 250, 250],\r\n          lightColor: '#FF00007C',\r\n        });\r\n      }\r\n\r\n      const { status: existingStatus } = await Notifications.getPermissionsAsync();\r\n      let finalStatus = existingStatus;\r\n      if (existingStatus !== 'granted') {\r\n        const { status } = await Notifications.requestPermissionsAsync();\r\n        finalStatus = status;\r\n      }\r\n      if (finalStatus !== 'granted') {\r\n        alert('Failed to get push token for push notification!');\r\n        return;\r\n      }\r\n      const token = (await Notifications.getExpoPushTokenAsync()).data;\r\n      console.log(token);\r\n      firebase.firestore().collection('Users').doc(currentUserUid).set({\r\n        'Push Tokens': firebase.firestore.FieldValue.arrayUnion(token)\r\n      }, { merge: true })\r\n  };\r\n\r\n  async function setNotificationCategories() {\r\n    await Notifications.setNotificationCategoryAsync(\"standard\",[\r\n      {\r\n        identifier:\"deleteNotif\", \r\n        buttonTitle: \"Delete\",\r\n        options: {\r\n          opensAppToForeground:false,\r\n          isAuthenticationRequired:true,\r\n          isDestructive:true\r\n        }\r\n      }\r\n    ],{previewPlaceholder:\"NotiBot Notification\"})\r\n    await Notifications.setNotificationCategoryAsync(\"webhookbutton\",[\r\n      {\r\n        identifier:\"webhookAction\", \r\n        buttonTitle: \"Trigger Webhook Action\",\r\n        options: {\r\n          opensAppToForeground:true,\r\n          isAuthenticationRequired:true,\r\n          isDestructive:false\r\n        }\r\n      },\r\n      {\r\n        identifier:\"deleteNotif\", \r\n        buttonTitle: \"Delete\",\r\n        options: {\r\n          opensAppToForeground:true,\r\n          isAuthenticationRequired:true,\r\n          isDestructive:true\r\n        }\r\n      }\r\n    ],{previewPlaceholder:\"NotiBot Notification With Webhook Action\"})\r\n    await Notifications.setNotificationCategoryAsync(\"webhooktext\",[\r\n      {\r\n        identifier:\"webhookReply\", \r\n        buttonTitle: \"Send Text to Webhook\",\r\n        textInput:{\r\n          submitButtonTitle:\"SEND\",\r\n          placeholder:\"\"\r\n        },\r\n        options: {\r\n          opensAppToForeground:true,\r\n          isAuthenticationRequired:true,\r\n          isDestructive:false\r\n        }\r\n      },\r\n      {\r\n        identifier:\"deleteNotif\", \r\n        buttonTitle: \"Delete\",\r\n        options: {\r\n          opensAppToForeground:true,\r\n          isAuthenticationRequired:true,\r\n          isDestructive:true\r\n        }\r\n      }\r\n    ],{previewPlaceholder:\"NotiBot Notification With Webhook Reply\"})\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (Constants.isDevice && Platform.OS !== 'web') { //Expo's support for web push is \"pending\"\r\n     registerForPushNotificationsAsync().then(setNotificationCategories)\r\n    }\r\n      \r\n  }, [true])\r\n\r\n\r\n  React.useLayoutEffect(()=>{\r\n    const parsedDeepLink = initialDeepLink?.substring(prefix.length-1)\r\n    if(parsedDeepLink && parsedDeepLink.length>1 && parsedDeepLink[0]=='/') {\r\n      // Moved to a separate effect so it wont get triggers everytime projects changes\r\n      // linkTo(parsedDeepLink)\r\n    }else if(numberOfProjects === projects.length && !mainStackLoadedRef.current.queue && mainStackLoadedRef.current.projectsLoaded == false) { // projects have finished downloading\r\n      mainStackLoadedRef.current.projectsLoaded = true\r\n      if(projects.length>0){\r\n        console.log(\"opening most recent project!\")\r\n        navigation.navigate(\"Project\", { title: projects[0].title })\r\n      }\r\n      navigation.openDrawer()\r\n    }\r\n    mainStackLoadedRef.current.mainStackLoaded()\r\n  },[projects, numberOfProjects])\r\n\r\n  React.useEffect(()=>{ // handle deep links\r\n    const parsedDeepLink = initialDeepLink?.substring(prefix.length-1)\r\n    if(parsedDeepLink && parsedDeepLink.length>1 && parsedDeepLink[0]=='/')\r\n      linkTo(encodeURI(parsedDeepLink))\r\n  },[true])\r\n\r\n  React.useLayoutEffect(() => {\r\n    const subscriptionFunctions = []\r\n    const unsub = firebase.firestore().collection('Users').doc(currentUserUid).onSnapshot({\r\n      includeMetadataChanges: true\r\n    }, (doc) => {\r\n      const source = doc.metadata.hasPendingWrites ? \"Local\" : \"Server\";\r\n      if (source == \"Server\") {\r\n        let data = (doc.data() && doc.data()[\"Projects\"]) ? doc.data()[\"Projects\"] : []\r\n        console.log(doc.data());\r\n        console.log(\"Current data: \" + data);\r\n        for (let projectName of data) {\r\n          if (!projects.some(projectObj=>projectObj.title == projectName)) {\r\n            const subFunc = (data) => {\r\n              setProjects(projects => {\r\n                projects = projects.filter(projectObj=>projectObj.title!=projectName)\r\n                if (data) {\r\n                  projects = [{\r\n                    title: projectName,\r\n                    subtitle: data?.Notifications && data.Notifications.length > 0 ? data.Notifications[data.Notifications.length - 1].title : `No notifications yet!`,\r\n                    timestamp: data?.Notifications && data.Notifications.length > 0 ? data.Notifications[data.Notifications.length - 1].timestamp : 0\r\n                  }, ...projects]\r\n                  console.log(`adding project to array: ${projectName}`)\r\n                }\r\n                projects.sort((a, b) => b?.timestamp - a?.timestamp)\r\n                setLoading(false)\r\n                console.log(`new projects: ${JSON.stringify(projects)}`)\r\n                return projects\r\n              })\r\n\r\n            }\r\n            listenToProject(projectName, subFunc, true)\r\n            subscriptionFunctions.push({ projectName, subFunc })\r\n          }\r\n        }\r\n        setNumberOfProjects(data.length)\r\n        if (data.length == 0) {\r\n          setLoading(false)\r\n        }\r\n      }\r\n    });\r\n    return () => {\r\n      for (let { projectName, subFunc } of subscriptionFunctions)\r\n        stopListeningToProject(projectName, subFunc)\r\n      unsub()\r\n    }\r\n  }, []);\r\n\r\n  const toggleOverlay = () => {\r\n    resetModalState()\r\n    setVisible(!visible);\r\n  };\r\n\r\n  //console.log(`projectsData: ${JSON.stringify(projectsData)}`)\r\n  return (\r\n    <>\r\n      <Overlay isVisible={visible} onBackdropPress={toggleOverlay} ModalComponent={Platform.OS === 'web' ? WebModal : Modal} overlayStyle={[Platform.OS != 'web' ? { width: \"80%\", margin: \"30%\", maxWidth: 400 /*,flexGrow:1,flex:1,*/ } : {}, { backgroundColor: \"red\", borderRadius: 10, bottom: \"20%\" }]}>\r\n        <View>\r\n          <View style={styles.textInputBox}>\r\n            <TextInput\r\n              placeholder=\"Project Name\"\r\n              placeholderTextColor=\"white\"\r\n              autoCapitalize=\"none\"\r\n              style={styles.textInput}\r\n              onChangeText={setProjectName}\r\n              value={projectName}\r\n            />\r\n          </View>\r\n          {errorMessage != '' &&\r\n            <Text style={styles.errorMessage}>\r\n              {errorMessage}\r\n            </Text>}\r\n          <Button\r\n            title=\"Create Project\"\r\n            onPress={createNewProject}\r\n          />\r\n        </View>\r\n      </Overlay>\r\n      <Header\r\n        backgroundColor=\"red\"\r\n        leftComponent={{ icon: 'plus', type: 'ant-design', color: 'white', onPress: toggleOverlay, size: 23 }}\r\n        centerComponent={{ text: 'Projects', style: { color: 'white', fontSize: 18, fontWeight: \"bold\" } }}\r\n        rightComponent={{ icon: \"settings\", type: 'feather', color: 'white', onPress: () => navigation.navigate('Settings'), size: 23 }}\r\n      />\r\n      <LinearGradient colors={[\"#ff000090\", \"red\"]} start={{ x: 0, y: .6 }} end={{ x: 0, y: 0 }} style={styles.container}>\r\n        {loading && <ActivityIndicator size=\"large\" />}\r\n        {!loading && <>\r\n          <FlatList\r\n            style={{ height: \"100%\", width: \"100%\" }}\r\n            data={projects}\r\n            renderItem={({ item }) => {\r\n              console.log(`item: ${JSON.stringify(item)}`)\r\n              return (<ListItem style={{ borderRadius: 20, marginVertical: 5 }} bottomDivider topDivider onPress={() => {\r\n                // navigation.closeDrawer()\r\n                navigation.navigate(\"Project\", { title: item.title })\r\n              }}\r\n                linearGradientProps={{\r\n                  colors: hashStringToColor(item.title),\r\n                  start: { x: 1, y: 0 },\r\n                  end: { x: 0, y: 0 },\r\n                }}\r\n                ViewComponent={LinearGradient}\r\n                containerStyle={{ borderRadius: 20 }}\r\n                >\r\n                <Avatar size=\"large\" rounded title={item.title.substring(0, 2)} />\r\n                <ListItem.Content>\r\n                  <ListItem.Title style={styles.listItemTitle} adjustsFontSizeToFit numberOfLines={1}>{item.title}</ListItem.Title>\r\n                  <ListItem.Subtitle style={styles.listItemSubtitle}>{item.subtitle}</ListItem.Subtitle>\r\n                </ListItem.Content>\r\n                <ListItem.Chevron />\r\n              </ListItem>)\r\n            }}\r\n            keyExtractor={item => item.title}\r\n            ListFooterComponent={Platform.OS == 'web' && <Button title=\"Open Docs\" titleStyle={{textDecorationLine:\"underline\",color:\"white\"}} onPress={()=>WebBrowser.openBrowserAsync('https://notibotdocs.kihtrak.com',{controlsColor:'#FF0000',showTitle:true})} type=\"clear\"/>}\r\n            ListEmptyComponent={<View style={{ flex: 1, flexGrow: 1, justifyContent: 'center', alignItems: 'center', padding: 20 }}><Text style={{color:\"white\"}}>You currently have no projects</Text><Button style={{ marginTop: 10 }} title=\"Create a new project\" onPress={toggleOverlay} /></View>}\r\n          />\r\n        </>}\r\n      </LinearGradient>\r\n    </>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: \"center\",\r\n    paddingTop: 5,\r\n    paddingHorizontal: 5,\r\n  },\r\n  textInputBox: {\r\n    borderBottomColor: \"white\",\r\n    borderBottomWidth: 1,\r\n    marginBottom: 20,\r\n    alignSelf: 'stretch',\r\n  },\r\n  textInput: {\r\n    fontSize: 24,\r\n    height: 40,\r\n    fontWeight: '200',\r\n    marginBottom: 0,\r\n    color: \"white\",\r\n    textAlign: 'center'\r\n  },\r\n  errorMessage: {\r\n    color: 'blue', marginBottom: 20\r\n  },\r\n  listItemTitle: {\r\n    fontSize: Platform.OS!=\"web\"?30:20, // auto font scaling doesn't work on web\r\n    fontWeight: \"bold\",\r\n  },\r\n  listItemSubtitle: {\r\n    //fontSize:20\r\n  }\r\n})","import React from 'react'\r\nimport { StyleSheet, Platform, Image, Text, View, FlatList, ActivityIndicator, Alert} from 'react-native'\r\nimport { ListItem, Button } from 'react-native-elements'\r\nimport firebase from 'firebase';\r\nimport '@firebase/firestore';\r\nimport { Notifications } from 'expo';\r\n\r\nexport default function Settings({navigation}) {\r\n  function signOut(){\r\n    firebase.auth().signOut().then(/*()=>navigation.navigate('Loading')*/).catch((error) => console.error('Sign Out Error', error))\r\n  }\r\n\r\n  function deleteAccount(){\r\n    firebase.auth().currentUser.getIdToken(true)\r\n      .then((idToken) => fetch(\"https://noti.kihtrak.com/deleteProfile\", { \r\n        body: JSON.stringify({ idToken }), \r\n        method: 'POST', \r\n        headers: { \"Content-Type\": \"application/json\" } \r\n      }))\r\n      .then((res) => res.json())\r\n      .then((resJSON) => {\r\n        const err = resJSON?.error\r\n        if(err)\r\n          Alert.alert(err)\r\n      })\r\n      .catch(e => Alert.alert(`An error occurred while attempting delete your account`))\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* <Button title=\"test\" onPress={()=>firebase.auth().currentUser.updateProfile({displayName: \"Demo\",photoURL: \"https://images-na.ssl-images-amazon.com/images/I/51zLZbEVSTL._AC_SL1200_.jpg\"})} /> */}\r\n      <Button \r\n        buttonStyle={styles.dangerButton} \r\n        title=\"Sign Out\" \r\n        onPress={signOut}\r\n      />\r\n      <Button \r\n        buttonStyle={styles.dangerButton}\r\n        title=\"Delete Account\" \r\n        onPress={deleteAccount}\r\n        containerStyle={{ marginTop: 20, }}\r\n      />\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  dangerButton: {\r\n    backgroundColor: \"red\"\r\n  },\r\n})","import React, {useContext, useState} from 'react'\r\nimport { StyleSheet, Platform, Image, Text, View, FlatList, ActivityIndicator, Modal, SafeAreaView, TextInput, KeyboardAvoidingView, ScrollView, useWindowDimensions } from 'react-native'\r\nimport { ListItem, Button, Overlay, Avatar } from 'react-native-elements'\r\nimport WebModal from 'modal-react-native-web';\r\nimport * as Linking from 'expo-linking';\r\nimport { useLinkTo  } from '@react-navigation/native';\r\n\r\nimport { ProjectsContext, DeepLinkContext } from '../utils/contexts'\r\nimport { Alert } from 'react-native';\r\nimport Loading from './Loading';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nconst prefix = Linking.createURL('/');\r\n\r\nexport default function Project({ navigation, route }){\r\n    const {projectsData, listenToProject, stopListeningToProject} = useContext(ProjectsContext);\r\n    const projTitle = route.params?.title\r\n    const [notifications,updateNotifications] = useState(projectsData?.[projTitle]?.Notifications) //projectsData[projTitle] is guaranteed to exist due to previous screen\r\n    const dimensions = useWindowDimensions();\r\n    const isLargeScreen = dimensions.width >= 768;\r\n    \r\n    React.useEffect(()=>{\r\n      if(projTitle){\r\n        //updateNotifications(projectsData[projTitle].Notifications)\r\n        const handleProjUpdate = (newData)=>{\r\n          if(newData)\r\n            updateNotifications(newData.Notifications)\r\n          else\r\n            // navigation.goBack()\r\n            navigation.openDrawer()\r\n        }\r\n        listenToProject(projTitle,handleProjUpdate, true)\r\n        return ()=>stopListeningToProject(projTitle, handleProjUpdate)\r\n      }\r\n    },[projTitle])\r\n\r\n    // React.useEffect(()=>{\r\n    //   if(!projTitle)\r\n    //   navigation.openDrawer()\r\n    // },[navigation, projTitle])\r\n\r\n    React.useLayoutEffect(() => {\r\n          navigation.setOptions({...(projTitle?{\r\n            title: projTitle,\r\n            headerRight: () => (\r\n              <Button\r\n                icon={{\r\n                  name: \"ios-options-outline\",\r\n                  type:'ionicon',\r\n                  size: 25,\r\n                  color: \"white\"\r\n                }}\r\n                type=\"clear\"\r\n                onPress={()=>navigation.navigate(\"ProjectOptions\",{title:projTitle})}\r\n              />\r\n            ),\r\n          }:{title:\"\"}),\r\n          headerLeft:()=>{\r\n            if(isLargeScreen)\r\n              return null\r\n            return(\r\n              <Button\r\n                icon={{\r\n                  name: \"menu\",\r\n                  type:'entypo',\r\n                  size: 25,\r\n                  color: \"white\"\r\n                }}\r\n                type=\"clear\"\r\n                onPress={()=>navigation.openDrawer()}\r\n              />\r\n            )\r\n          }\r\n        });\r\n    }, [navigation, projTitle]);\r\n\r\n\r\n    // console.log(`projectsData: ${JSON.stringify(projectsData)}`)\r\n\r\n    const getSubtitle = (item) =>{\r\n        if(item.subtitle)\r\n            return item.subtitle\r\n        if(item.body)\r\n            return item.body\r\n        return \"\"\r\n    }\r\n\r\n\r\n    if(!projTitle){\r\n      // if(!isLargeScreen){\r\n      //   navigation.openDrawer()\r\n      //   return(<Loading/>)\r\n      // }\r\n      return(<View style={styles.container}>\r\n        <Text style={{fontSize:15, textAlign:\"center\"}}>Select a project</Text>\r\n      </View>)\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <FlatList\r\n            style={{height:\"100%\",width:\"100%\"}}\r\n            data={notifications?[...notifications].reverse():[]}\r\n            renderItem={({ item, index }) => <ListItem style={styles.listItem} bottomDivider topDivider onPress={\r\n              ()=>navigation.navigate(\"Notification\",{index: (notifications.length-1-index), timestamp: item.timestamp, projTitle})\r\n            }>\r\n                <ListItem.Content>\r\n                <ListItem.Title>{item.title.substring(0,30)}</ListItem.Title>\r\n                <ListItem.Subtitle>{getSubtitle(item).substring(0,40)}</ListItem.Subtitle>\r\n                <ListItem.Subtitle left>{new Date(item.timestamp).toLocaleString()}</ListItem.Subtitle>\r\n                </ListItem.Content>\r\n                <ListItem.Chevron/>\r\n            </ListItem>}\r\n            keyExtractor={item => item.title+item.timestamp}\r\n            ListEmptyComponent = {\r\n              <View style={{flex:1,flexGrow:1,height:\"100%\",justifyContent: 'center',alignItems: 'center', padding:20 }}>\r\n                <Text style={{fontSize:15, textAlign:\"center\",marginVertical:20}}>The project currently has no notifications</Text>\r\n\r\n                <Button title=\"Learn how to send yourself a notification\" titleStyle={{textDecorationLine:\"underline\"}} onPress={()=>WebBrowser.openBrowserAsync('https://notibotdocs.kihtrak.com',{controlsColor:'#FF0000',showTitle:true})} type=\"clear\"/>\r\n              </View>\r\n            }\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: \"center\"\r\n  }\r\n})","export const groups = [\"Owner\", \"Manager\", \"Subscriber\"]","import React from 'react'\r\nimport { StyleSheet, Platform, Image, ScrollView, FlatList, ActivityIndicator, Modal, SafeAreaView, TextInput, View, TouchableOpacity } from 'react-native'\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\r\nimport { ListItem, Button, Overlay, Avatar, Text } from 'react-native-elements'\r\nimport WebModal from 'modal-react-native-web';\r\nimport firebase from 'firebase';\r\nimport JSONTree from 'react-native-json-tree'\r\nimport Loading from './Loading'\r\n\r\nimport { ProjectsContext } from '../utils/contexts'\r\nimport { groups } from '../utils/constants'\r\n\r\nexport default function Notification({ navigation, route }){\r\n    const {projectsData, listenToProject, stopListeningToProject} = React.useContext(ProjectsContext);\r\n    const { index, timestamp, projTitle, resValue } = route.params\r\n    const [notification,updateNotification] = React.useState(projectsData?.[projTitle]?.Notifications?.[index]) //projectsData[projTitle].Notifications[index] is guaranteed to exist due to previous screen\r\n    const [webhookParamValue,setWebhookParamValue] = React.useState('')\r\n    const [webhookRes,setWebhookRes] = React.useState(resValue?resValue:'')\r\n\r\n    const checkCanDelete = () =>{\r\n        const currentUserUid = firebase.auth().currentUser.uid;\r\n        for(let index of [0,1])\r\n            if(projectsData?.[projTitle]?.[groups[index]]?.includes(currentUserUid))\r\n                return true\r\n        return false\r\n    }\r\n\r\n    const [canDelete,setCanDelete] = React.useState(checkCanDelete())\r\n\r\n    const db = firebase.firestore();\r\n\r\n    React.useLayoutEffect(()=>{\r\n        // Handle populating the previous state if the notification was opened with deep linking\r\n        const oldState = navigation.dangerouslyGetState()\r\n        console.log(\"oldState\")\r\n        console.log(JSON.stringify(oldState))\r\n        const {routes, index} = oldState\r\n        const prevRoute = routes?.[routes.length-2]\r\n        if(prevRoute?.name == \"Project\") // ensure that the correct screen came before\r\n            if(!prevRoute.params){ // only manually set params if they don't exist\r\n                prevRoute.params = {title: projTitle}\r\n                console.log(\"oldState\")\r\n                console.log(JSON.stringify(oldState))\r\n                navigation.reset({index, routes})\r\n            }\r\n    },[navigation])\r\n\r\n    React.useEffect(()=>{\r\n        const handleProjUpdate = (newData)=>{\r\n            if(newData && newData.Notifications){\r\n                let newIndex = /*index?index:*/newData.Notifications.length\r\n                while(newIndex>-1 && (!newData.Notifications[newIndex] || newData.Notifications[newIndex].timestamp > timestamp))\r\n                    newIndex--\r\n                if(newData.Notifications[newIndex] && newData.Notifications[newIndex].timestamp == timestamp){\r\n                    setCanDelete(checkCanDelete())\r\n                    updateNotification(newData.Notifications[newIndex])\r\n                    navigation.setParams({index: newIndex})\r\n                }else\r\n                    navigation.goBack()\r\n            }else\r\n                navigation.goBack()\r\n        }\r\n        listenToProject(projTitle,handleProjUpdate, true)\r\n        return ()=>stopListeningToProject(projTitle, handleProjUpdate)\r\n    },[projTitle,timestamp])\r\n\r\n    const deleteNotification=async ()=>{\r\n        await db.collection('Projects').doc(projTitle).set({\r\n            'Notifications':firebase.firestore.FieldValue.arrayRemove(notification)\r\n        }, { merge: true })\r\n    }\r\n\r\n    React.useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: notification?.title,\r\n            headerRight: () => canDelete\r\n                && <Button\r\n                    disabled={!canDelete}\r\n                    icon={{\r\n                        name: \"trash-outline\",\r\n                        type:'ionicon',\r\n                        size: 25,\r\n                        color: \"white\"\r\n                    }}\r\n                    type=\"clear\"\r\n                    titleStyle={styles.headerButtonTitle}\r\n                    onPress={deleteNotification}\r\n                />\r\n            ,\r\n        });\r\n    }, [navigation, canDelete, notification]);\r\n\r\n    const makeRequest = () => {\r\n        const url = notification.webhook+webhookParamValue\r\n        fetch(url).then(res=>res.text()).then(setWebhookRes).catch(e=>setWebhookRes(e.toString()))\r\n    }\r\n\r\n    if(!notification)\r\n        return(<Loading/>)\r\n\r\n    return (\r\n        <KeyboardAwareScrollView>\r\n            <ScrollView /*contentContainerStyle={styles.container}*/>\r\n                <SafeAreaView>\r\n                    <View style={styles.headerView}>\r\n                        <Text h1 style={{textAlign:\"center\"}}>{notification.title}</Text>\r\n                    </View>\r\n                    <View style={{alignItems: \"center\"}}>\r\n                        <View style={styles.subheaderView}>\r\n                            {notification.subtitle&&<Text style={styles.textMargin} h4 left>{notification.subtitle}</Text>}{notification.timestamp && <Text style={styles.textMargin} right>{`${new Date(notification.timestamp).toLocaleString()}\\nEpoch: ${notification.timestamp}`}</Text>}\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.dataView}>\r\n                        <Text style={[styles.textMargin,{fontSize:25}]}>{notification.body}</Text>\r\n                        {notification.webhook && <Text style={styles.textMargin}>Webhook: {notification.webhook}</Text>}\r\n                    </View>\r\n                    {notification.webhook && <View style={{alignItems: \"center\"}}>\r\n                        {notification.webhookParam && \r\n                        <View style={styles.textInputBox}>\r\n                            <TextInput\r\n                                placeholder=\"URL parameter value\"\r\n                                autoCapitalize=\"none\"\r\n                                style={styles.textInput}\r\n                                onChangeText={setWebhookParamValue}\r\n                                value={webhookParamValue}\r\n                            />\r\n                        </View>}\r\n                        <TouchableOpacity \r\n                            style={[styles.submitButton,{backgroundColor:\"green\"}]}\r\n                            onPress={makeRequest}\r\n                        >\r\n                            <Text style={{color:\"white\",fontSize:20,}}>Call {notification.webhook+webhookParamValue} {webhookRes && \"Again\"}</Text>\r\n                        </TouchableOpacity>\r\n                    </View>}\r\n                    <View style={styles.dataView}>\r\n                        {!!webhookRes && <Text style={styles.textMargin}>Response: {webhookRes}</Text>}\r\n                    </View>\r\n                </SafeAreaView>\r\n            </ScrollView>\r\n        </KeyboardAwareScrollView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    //justifyContent: 'center',\r\n  },\r\n  headerView:{\r\n    alignItems: \"center\",\r\n    margin:10\r\n  },\r\n  subheaderView: {\r\n    flex: 1,\r\n    flexDirection:'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  textMargin:{\r\n      margin:10,\r\n  },\r\n  headerButtonTitle:{\r\n      color:'white'\r\n  },\r\n  dataView:{\r\n      flex:1,\r\n      flexDirection:'column',\r\n      justifyContent:\"flex-start\"\r\n  },\r\n  textInputBox: {\r\n    borderBottomColor:\"black\",\r\n    borderBottomWidth: 1,\r\n    margin:10,\r\n    marginBottom: 40,\r\n    alignSelf: 'stretch',\r\n  },\r\n  textInput: {\r\n    fontSize: 24,\r\n    height: 40,\r\n    fontWeight: '200',\r\n    marginBottom: 0,\r\n    color:\"black\",\r\n  },\r\n  submitButton:{\r\n    alignItems: 'center',\r\n    padding:15,\r\n    borderRadius:7,\r\n    marginBottom:10,\r\n    margin:7,\r\n    alignSelf: 'stretch',\r\n  },\r\n})","import React from 'react'\r\nimport { StyleSheet, Platform, Image, Text, View, FlatList, ActivityIndicator, Modal, SafeAreaView, TextInput, KeyboardAvoidingView, ScrollView, Alert } from 'react-native'\r\nimport { ListItem, Button, Overlay, Avatar, Icon } from 'react-native-elements'\r\nimport WebModal from 'modal-react-native-web';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport firebase from 'firebase';\r\nimport { ProjectsContext } from '../utils/contexts'\r\nimport { groups } from '../utils/constants'\r\n\r\nconst groupDescriptions = [\"Full Access\", \"Can't delete project or edit team members\", \"Can only view data, can't delete notifications\"]\r\n\r\nexport default function Home({ navigation, route }) {\r\n    const { projectsData, listenToProject, stopListeningToProject } = React.useContext(ProjectsContext);\r\n    const projTitle = route.params.title\r\n    const [users, setUsers] = React.useState([])\r\n    const [currentGroupNum, setCurrentGroupNum] = React.useState(groups.length)\r\n    const [canLeave, setCanLeave] = React.useState(false)\r\n    const [visible, setVisible] = React.useState(false);\r\n    const [email, setEmail] = React.useState('');\r\n    const [errorMessage, setErrorMessage] = React.useState('');\r\n    const profileInfoMap = React.useRef({});\r\n\r\n    const db = firebase.firestore();\r\n\r\n    const projectInfo = projectsData[projTitle]\r\n\r\n    const currentUserUid = firebase.auth().currentUser.uid;\r\n\r\n    React.useLayoutEffect(() => {\r\n        const handleProjUpdate = (newData) => {\r\n            console.log(\"triggered\")\r\n            if (newData) {\r\n                let tempUsers = []\r\n                let tempCurrentGroupNum\r\n                for (let groupName of groups){\r\n                    console.log(groupName)\r\n                    if (newData[groupName])\r\n                        for (let uid of newData[groupName]) {\r\n                            console.log(uid)\r\n                            if (uid == currentUserUid)\r\n                                tempCurrentGroupNum = groups.indexOf(groupName)\r\n                            if (!profileInfoMap.current[uid])\r\n                                fetch(\"https://noti.kihtrak.com/getProfileInfo\", { body: JSON.stringify({ uid }), method: 'POST', headers: { \"Content-Type\": \"application/json\" } }).then((res) => res.json()).then((profile) => {\r\n                                    profileInfoMap.current[uid] = profile\r\n                                    //console.log(profile)\r\n                                    setUsers((users)=>[...users, { group: groupName, profile: profileInfoMap.current[uid] }])\r\n                                })\r\n                            else {\r\n                                tempUsers.push({ group: groupName, profile: profileInfoMap.current[uid] }) // Don't re-render until finished\r\n                            }\r\n                        }\r\n                }\r\n                setCurrentGroupNum(tempCurrentGroupNum)\r\n                if (tempUsers.length > 0)\r\n                    setUsers(tempUsers)\r\n                if (tempCurrentGroupNum != 0 || newData[groups[0]].length > 1)\r\n                    setCanLeave(true)\r\n                else\r\n                    setCanLeave(false)\r\n            } else\r\n                navigation.goBack()\r\n        }\r\n        listenToProject(projTitle, handleProjUpdate, true)\r\n        return () => stopListeningToProject(projTitle, handleProjUpdate)\r\n    }, [])\r\n\r\n\r\n    React.useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: `${projTitle} Options`,\r\n        });\r\n    }, [navigation]);\r\n\r\n    const resetModalState = () => {\r\n        setEmail('')\r\n        setErrorMessage('')\r\n    }\r\n\r\n    const toggleOverlay = () => {\r\n        resetModalState()\r\n        setVisible(!visible);\r\n    };\r\n\r\n    const deleteProject = () => {\r\n        Alert.alert(`Delete ${projTitle}`, `Are you sure you want to delete ${projTitle}?`,\r\n            [{\r\n                text: 'Delete',\r\n                onPress: async () => {\r\n                    firebase.auth().currentUser.getIdToken(true)\r\n                        .then((idToken) => fetch(\"https://noti.kihtrak.com/deleteProject\", { body: JSON.stringify({ idToken, project: projTitle }), method: 'POST', headers: { \"Content-Type\": \"application/json\" } }))\r\n                        .catch(e => Alert.alert(\"An error occurred while attempting to delete the project\"))\r\n                },\r\n                style: \"destructive\"\r\n            }, { text: 'Cancel', style: 'cancel' },],\r\n            { cancelable: true }\r\n        );\r\n    }\r\n\r\n    const deleteNotifications = () => {\r\n        Alert.alert(`Delete ${projTitle}`, `Are you sure you want to delete all of ${projTitle}'s notifications?`,\r\n            [{\r\n                text: 'Delete',\r\n                onPress: async () => {\r\n                    await db.collection('Projects').doc(projTitle).update({\r\n                        Notifications: firebase.firestore.FieldValue.delete()\r\n                    }).then(() => navigation.goBack()).catch(e => Alert.alert(\"An error occurred while attempting to delete the notifications\"))\r\n                },\r\n                style: \"destructive\"\r\n            }, { text: 'Cancel', style: 'cancel' },],\r\n            { cancelable: true }\r\n        );\r\n    }\r\n\r\n    const addUser = () => {\r\n        fetch(\"https://noti.kihtrak.com/getProfileByEmail\", { body: JSON.stringify({ email }), method: 'POST', headers: { \"Content-Type\": \"application/json\" } })\r\n            .then((res) => res.json()).then((profile) => {\r\n                console.log(profile)\r\n                return firebase.auth().currentUser.getIdToken(true)\r\n                    .then((idToken) => fetch(\"https://noti.kihtrak.com/addUserToProject\", { \r\n                        body: JSON.stringify({ idToken, project: projTitle, uid:profile.uid }), \r\n                        method: 'POST', \r\n                        headers: { \"Content-Type\": \"application/json\" } \r\n                    }))\r\n            }).then(()=>setVisible(false)).catch(e => Alert.alert(`An error occurred while attempting to add ${email} to the project`))\r\n    }\r\n\r\n    const removeUser = (email) => {\r\n        fetch(\"https://noti.kihtrak.com/getProfileByEmail\", { body: JSON.stringify({ email }), method: 'POST', headers: { \"Content-Type\": \"application/json\" } })\r\n            .then((res) => res.json()).then((profile) => {\r\n                console.log(profile)\r\n                return firebase.auth().currentUser.getIdToken(true)\r\n                    .then((idToken) => fetch(\"https://noti.kihtrak.com/removeUserFromProject\", { \r\n                        body: JSON.stringify({ idToken, project: projTitle, uid:profile.uid }), \r\n                        method: 'POST', \r\n                        headers: { \"Content-Type\": \"application/json\" } \r\n                    }))\r\n            }).catch(e => Alert.alert(`An error occurred while attempting to remove ${email} from the project`))\r\n    }\r\n\r\n    const leaveProject = async () => {\r\n        await db.collection('Projects').doc(projTitle).update({\r\n            [groups[currentGroupNum]]: firebase.firestore.FieldValue.arrayRemove(currentUserUid)\r\n        })\r\n        await db.collection('Users').doc(currentUserUid).update({\r\n            'Projects': firebase.firestore.FieldValue.arrayRemove(projTitle)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Overlay isVisible={visible} onBackdropPress={toggleOverlay} ModalComponent={Platform.OS === 'web' ? WebModal : Modal} overlayStyle={[Platform.OS != 'web' ? { width: \"80%\", margin: \"30%\", maxWidth: 400 /*,flexGrow:1,flex:1,*/ } : {}, { backgroundColor: \"red\", borderRadius: 10, bottom: \"20%\" }]}>\r\n                <View>\r\n                    <View style={styles.textInputBox}>\r\n                        <TextInput\r\n                            placeholder=\"Email\"\r\n                            placeholderTextColor=\"white\"\r\n                            autoCapitalize=\"none\"\r\n                            style={styles.textInput}\r\n                            onChangeText={setEmail}\r\n                            value={email}\r\n                        />\r\n                    </View>\r\n                    {errorMessage != '' &&\r\n                        <Text style={styles.errorMessage}>\r\n                            {errorMessage}\r\n                        </Text>}\r\n                    <Button\r\n                        title=\"Add User\"\r\n                        onPress={addUser}\r\n                    />\r\n                </View>\r\n            </Overlay>\r\n            <ScrollView contentContainerStyle={styles.container}>\r\n                <View style={{width:\"100%\"}}>\r\n                    {(() => {\r\n                        let userElements = []\r\n                        for(let itemIndex in users){\r\n                            let item = users[itemIndex]\r\n                            let controller\r\n                            userElements.push(<ListItem key={item.profile.email} style={[styles.listItem, {zIndex: -1*itemIndex}]} bottomDivider topDivider>\r\n                                <Avatar source={{ uri: item.profile.photoURL }} title={item.profile.email.substring(0,2)} rounded />\r\n                                <ListItem.Content>\r\n                                    <ListItem.Title>{item.profile.displayName}</ListItem.Title>\r\n                                    <ListItem.Subtitle adjustsFontSizeToFit numberOfLines={1}>{item.profile.email}</ListItem.Subtitle>\r\n                                </ListItem.Content>\r\n                                <DropDownPicker disabled={currentGroupNum > 0 || (currentUserUid == item.profile.uid && !canLeave)} items={[...groups, \"Remove\"].map(el => ({ label: el, value: el }))} defaultValue={item.group} containerStyle={{ flexGrow: .5 }} itemStyle={{overflow: \"visible\"}} controller={instance => controller = instance} onChangeItem={(el)=>{\r\n                                    const {value:newValue} = el\r\n                                    console.log(newValue)\r\n                                    if(newValue == \"Remove\"){\r\n                                        Alert.alert(`Remove ${item.profile.email}`, `Are you sure you want remove ${item.profile.email} from this project?`,\r\n                                            [{\r\n                                                text: 'Remove',\r\n                                                onPress: async () => {\r\n                                                    removeUser(item.profile.email)\r\n                                                },\r\n                                                style: \"destructive\"\r\n                                            }, \r\n                                            { text: 'Cancel', style: 'cancel',\r\n                                                onPress: ()=>{\r\n                                                    controller.selectItem(item.group)\r\n                                                }\r\n                                            }],\r\n                                            { cancelable: true, onDismiss:()=>{\r\n                                                controller.selectItem(item.group)\r\n                                            }}\r\n                                        );\r\n                                    }else{\r\n                                        const updateObj = {}\r\n                                        groups.forEach(el => { updateObj[el] = firebase.firestore.FieldValue.arrayRemove(item.profile.uid) })\r\n                                        updateObj[newValue] = firebase.firestore.FieldValue.arrayUnion(item.profile.uid)\r\n                                        db.collection('Projects').doc(projTitle).update(updateObj)\r\n                                    }\r\n                                }}/>\r\n                            </ListItem>)\r\n                        }\r\n                        if(userElements.length==0){\r\n                            return <ActivityIndicator size=\"large\" style={{padding:10}}/>\r\n                        }\r\n                        return userElements\r\n                    })()}\r\n                </View>\r\n                {/* <FlatList\r\n                    style={{ width: \"100%\", maxHeight: \"60%\" }}\r\n                    data={users}\r\n                    renderItem={({ item, index }) => {\r\n                        //console.log(item)\r\n                        return (<View style={{zIndex:-999999*index}}><ListItem style={styles.listItem} bottomDivider topDivider>\r\n                            <Avatar source={{ uri: item.profile.photoURL }} rounded />\r\n                            <ListItem.Content>\r\n                                <ListItem.Title>{item.profile.displayName}</ListItem.Title>\r\n                                <ListItem.Subtitle adjustsFontSizeToFit numberOfLines={1}>{item.profile.email}</ListItem.Subtitle>\r\n                            </ListItem.Content>\r\n                            <DropDownPicker disabled={currentGroupNum < 0} items={groups.map(el => ({ label: el, value: el }))} defaultValue={item.group} containerStyle={{ flexGrow: .5 }} style={{zIndex:999999*index}}/>\r\n                        </ListItem></View>)\r\n                    }}\r\n                    keyExtractor={item => item.profile.uid}\r\n                    ListEmptyComponent={<View style={{ flex: 1, flexGrow: 1, justifyContent: 'center', alignItems: 'center', padding: 20 }}><ActivityIndicator size=\"large\" /><Text>Populating with members...</Text></View>}\r\n                /> */}\r\n                <ListItem style={[{ zIndex: -9 }, styles.listItem]} bottomDivider topDivider disabled={currentGroupNum > 0} onPress={toggleOverlay}>\r\n                    <Icon name='plus' type='ant-design' color='blue' />\r\n                    <ListItem.Content>\r\n                        <ListItem.Title>Add User</ListItem.Title>\r\n                    </ListItem.Content>\r\n                </ListItem>\r\n                {(() => {\r\n                    const arr = []\r\n                    for (let groupIndex in groups) {\r\n                        // console.log(`${groupIndex} - ${currentGroupNum}`)\r\n                        arr.push(<View key={groupIndex} style={[styles.listItem, styles.descContainer]}>\r\n                            <Text style={[groupIndex == currentGroupNum ? { color: 'blue' } : {}, styles.groupTitle, styles.groupText]}>{groups[groupIndex]}</Text>\r\n                            <Text style={[styles.groupDesc, styles.groupText]}>{groupDescriptions[groupIndex]}</Text>\r\n                        </View>)\r\n                    }\r\n                    return arr\r\n                })()}\r\n                <Button\r\n                    disabled={currentGroupNum > 1}\r\n                    containerStyle={{ marginTop: 20, }}\r\n                    title=\"Delete Notifications\"\r\n                    buttonStyle={styles.deleteButton}\r\n                    onPress={deleteNotifications}\r\n                />\r\n                <Button\r\n                    disabled={!canLeave}\r\n                    containerStyle={{ marginTop: 20, }}\r\n                    title={`Leave Project`}\r\n                    buttonStyle={styles.leaveButton}\r\n                    onPress={leaveProject}\r\n                />\r\n                {!canLeave && <Text style={styles.explanationText}>You are the only owner, you can't leave until appointing a new owner</Text>}\r\n                <Button\r\n                    disabled={currentGroupNum > 0}\r\n                    containerStyle={{ marginTop: 20, }}\r\n                    title=\"Delete Project\"\r\n                    buttonStyle={styles.deleteButton}\r\n                    onPress={deleteProject}\r\n                />\r\n            </ScrollView>\r\n        </>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        //flex: 1,\r\n        // justifyContent: 'center',\r\n        paddingBottom:20,\r\n        alignItems: \"center\"\r\n    },\r\n    deleteButton: {\r\n        backgroundColor: \"red\"\r\n    },\r\n    leaveButton: {\r\n        backgroundColor: \"blue\"\r\n    },\r\n    listItem: {\r\n        width: \"100%\",\r\n        //zIndex:-1\r\n    },\r\n    descContainer: {\r\n        flexGrow: 1,\r\n        flexDirection: \"row\",\r\n        padding: 10,\r\n        zIndex: -99\r\n    },\r\n    groupTitle: {\r\n        marginRight: 10,\r\n        flexBasis: 100,\r\n    },\r\n    groupText: {\r\n        fontSize: 15,\r\n    },\r\n    groupDesc: {\r\n        flexShrink: 1,\r\n        flexWrap: 'wrap'\r\n    },\r\n    explanationText: {\r\n        textAlign: \"center\",\r\n        marginHorizontal: 20\r\n    },\r\n    textInputBox: {\r\n        borderBottomColor: \"white\",\r\n        borderBottomWidth: 1,\r\n        marginBottom: 20,\r\n        alignSelf: 'stretch',\r\n    },\r\n    textInput: {\r\n        fontSize: 24,\r\n        height: 40,\r\n        fontWeight: '200',\r\n        marginBottom: 0,\r\n        color: \"white\",\r\n        textAlign: 'center'\r\n    }\r\n})","import React, {useEffect, useRef} from 'react';\r\nimport { Button, Text, TextInput, View, useWindowDimensions, Dimensions, Platform, Alert } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createDrawerNavigator,   DrawerContentScrollView,  DrawerItemList, } from '@react-navigation/drawer';\r\nimport { ProjectsContext, DeepLinkContext, MainStackLoadedContext } from './utils/contexts'\r\nimport FlashMessage from \"react-native-flash-message\";\r\nimport { showMessage, hideMessage } from \"react-native-flash-message\";\r\nimport * as Linking from 'expo-linking';\r\nimport { useLinkTo  } from '@react-navigation/native';\r\nimport Constants from 'expo-constants';\r\nimport useRootNavigation from './utils/useRootNavigation'\r\nimport * as SplashScreen from 'expo-splash-screen';\r\n\r\nimport Loading from './screens/Loading'\r\nimport Login from './screens/Login'\r\nimport SignUp from './screens/SignUp'\r\nimport Home from './screens/Home'\r\nimport Settings from './screens/Settings'\r\nimport Project from './screens/Project'\r\nimport Notification from './screens/Notification'\r\nimport ProjectOptions from './screens/ProjectOptions'\r\n\r\nimport * as Notifications from 'expo-notifications'\r\n\r\n// import 'expo-firestore-offline-persistence'\r\nimport firebase from \"firebase\";\r\n// import 'firebase/firestore'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBc_AtukKnVqdNYRefB-NtZLy5otD8KMvA\",\r\n  authDomain: \"notibotapp.firebaseapp.com\",\r\n  databaseURL: \"https://notibotapp.firebaseio.com\",\r\n  projectId: \"notibotapp\",\r\n  storageBucket: \"notibotapp.appspot.com\",\r\n};\r\n\r\ntry {\r\n  firebase.initializeApp(firebaseConfig);\r\n} catch (err) {\r\n    // ignore app already initialized error in stack\r\n}\r\n// firebase.firestore().enablePersistence()\r\n\r\nconst Stack = createStackNavigator();\r\nconst Drawer = createDrawerNavigator();\r\nconst db = firebase.firestore();\r\n\r\nconst prefix = Linking.createURL('/');\r\n\r\nexport default function App() {\r\n  const projectsData = React.useRef({});\r\n  const userData = React.useRef({});\r\n  const callbacks = React.useRef({});\r\n  const listeners = React.useRef({});\r\n  const notificationListener = useRef();\r\n  const responseListener = useRef();\r\n  const mainStackLoadedRef = useRef({\r\n    mainStackLoaded: () =>{\r\n      setTimeout(()=>SplashScreen.hideAsync().catch(),500)\r\n      mainStackLoadedRef.current.loaded = true\r\n      if(mainStackLoadedRef.current.queue)\r\n        mainStackLoadedRef.current.queue()\r\n    },\r\n    loaded:false,\r\n    projectsLoaded:false,\r\n    queue:null\r\n  });\r\n  const [initialDeepLink, setInitialDeepLink] = React.useState(null);\r\n  // don't use hook on web because resizing is a common action and the site shouldn't reload on every resize\r\n  const dimensionWidth = Platform.OS === 'web'?Dimensions.get('window').width:useWindowDimensions().width; \r\n  const isLargeScreen = dimensionWidth >= 768;\r\n  // const linkTo = useLinkTo();\r\n  const navigation = useRootNavigation();\r\n\r\n  const openLinkInApp = (appUrl)=>{\r\n    if(mainStackLoadedRef.current.loaded)\r\n      navigation.linkTo(appUrl)\r\n    else\r\n      mainStackLoadedRef.current.queue = ()=> navigation.linkTo(appUrl)\r\n  }\r\n  \r\n  // Set up notifications\r\n  React.useLayoutEffect(() => {\r\n    // setTimeout(()=>navigation.linkTo(`Main/Projects/Notification?projTitle=testt&timestamp=1621574434297`),5*1000)\r\n\r\n    if (Constants.isDevice && Platform.OS !== 'web') { //Expo's support for web push is \"pending\"\r\n      notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\r\n        const notifContent = notification.request.content\r\n        // console.log(notification)\r\n        showMessage({\r\n          message: notifContent.title,\r\n          description: notifContent.body,\r\n          type: \"info\",\r\n          hideStatusBar:true,\r\n          onPress: ()=>{\r\n            navigation.linkTo(`/Main/Projects/Notification?projTitle=${notifContent.data?.project}&timestamp=${notifContent.data?.firebaseData?.timestamp}`)\r\n          }\r\n        });\r\n      });\r\n\r\n      responseListener.current = Notifications.addNotificationResponseReceivedListener(async response => {\r\n        const notifMetaData = response.notification.request.content.data\r\n        if (response.actionIdentifier == \"deleteNotif\"){\r\n          // Alert.alert(\"delete\")\r\n          return db.collection('Projects').doc(notifMetaData?.project).set({\r\n            'Notifications':firebase.firestore.FieldValue.arrayRemove(notifMetaData?.firebaseData)\r\n          }, { merge: true })\r\n        }\r\n        let url = \"\"\r\n        if(response.actionIdentifier == \"webhookAction\"){\r\n          url = notifMetaData?.firebaseData?.webhook\r\n        }else if(response.actionIdentifier == \"webhookReply\"){\r\n          url = notifMetaData?.firebaseData?.webhook + response?.userText\r\n        }else{ // response.actionIdentifier == Notifications.DEFAULT_ACTION_IDENTIFIER\r\n          return openLinkInApp(encodeURI(`Main/Projects/Notification?projTitle=${notifMetaData?.project}&timestamp=${notifMetaData?.firebaseData?.timestamp}`))\r\n        }\r\n        const fetchCallback = (resStr, errored) =>{\r\n          showMessage({\r\n            message: errored?\"Webhook call failed!\":\"Webhook called!\",\r\n            type: errored?\"danger\":\"success\",\r\n            hideStatusBar:true,\r\n          });\r\n          openLinkInApp(encodeURI(`Main/Projects/Notification?projTitle=${notifMetaData?.project}&timestamp=${notifMetaData?.firebaseData?.timestamp}&resValue=${resStr}`))\r\n        }\r\n        fetch(url).then(res=>res.text())\r\n        .then(fetchCallback)\r\n        .catch((e)=>fetchCallback(e.toString(), true))\r\n      });\r\n\r\n      return () => {\r\n        Notifications.removeNotificationSubscription(notificationListener.current);\r\n        Notifications.removeNotificationSubscription(responseListener.current);\r\n      };\r\n    }\r\n  }, [true])\r\n\r\n  const [state, dispatch] = React.useReducer(\r\n    (prevState, action) => {\r\n      switch (action.type) {\r\n        case 'SIGN_IN':\r\n          return {\r\n            ...prevState,\r\n            isLoading: false,\r\n            isSignedIn: action.isSignedIn,\r\n          };\r\n        case 'SIGN_OUT':\r\n          return {\r\n            ...prevState,\r\n            isLoading: false,\r\n            isSignedIn: false,\r\n          };\r\n      }\r\n    },\r\n    {\r\n      isLoading: true,\r\n      isSignedIn: false,\r\n    }\r\n  );\r\n\r\n  React.useLayoutEffect(()=>{\r\n    Linking.getInitialURL().then((url) => {\r\n      setInitialDeepLink(url)\r\n    });\r\n  },[true])\r\n\r\n\r\n  React.useLayoutEffect(() => {\r\n    try{\r\n      firebase.auth().onAuthStateChanged((user) => {\r\n        console.log(`Auth: ${!!user}`)\r\n        dispatch({ type: 'SIGN_IN', isSignedIn: !!user });\r\n        if(user){\r\n          setTimeout(()=>SplashScreen.hideAsync().catch(),3000)\r\n        }\r\n      })\r\n    }catch(e){\r\n      SplashScreen.hideAsync().catch()\r\n    }\r\n  }, []);\r\n\r\n  React.useLayoutEffect(()=>{\r\n    SplashScreen.preventAutoHideAsync();\r\n  },[true])\r\n\r\n  //const projectsData = {}\r\n\r\n  const projContext = {\r\n    projectsData: projectsData.current,\r\n    listenToProject: (projectName, callback, callOnInit)=>{\r\n      // console.log(JSON.stringify(callbacks.current))\r\n      if(callbacks.current[projectName]){\r\n        console.log(`listener already exists for ${projectName}`)\r\n        callbacks.current[projectName].push(callback)\r\n        if(callOnInit && projectName in projectsData.current)\r\n          callback(projectsData.current[projectName])\r\n      }else{\r\n        console.log(`creating listener for ${projectName}`)\r\n        callbacks.current[projectName] = [callback]\r\n        listeners.current[projectName] = db.collection('Projects').doc(projectName).onSnapshot({\r\n          includeMetadataChanges: true\r\n        },(doc) => {\r\n          const source = doc.metadata.hasPendingWrites ? \"Local\" : \"Server\";\r\n          // console.log(source)\r\n          if(source == \"Server\"){\r\n            // console.log(`Snapshot: ${projectName} - ${doc.data()}`)\r\n            projectsData.current[projectName] = doc.data()\r\n            for(let invCallback of callbacks.current[projectName])\r\n              invCallback(doc.data())\r\n          }\r\n        },\r\n        error=>{\r\n          // console.warn(error)\r\n          projectsData.current[projectName] = null\r\n          for(let invCallback of callbacks.current[projectName])\r\n            invCallback(null)\r\n        }\r\n        )\r\n      }\r\n    },\r\n    stopListeningToProject: (projectName, callback)=>{\r\n      // console.log(`Stopping listener - ${projectName}:${callback}\\n${callbacks.current[projectName]}`)\r\n      if(!callbacks.current[projectName]){\r\n        console.warn(\"Listener doesn't exist. How did this happen?\")\r\n      }\r\n      const index = callbacks.current[projectName].indexOf(callback)\r\n      console.log(`Index of callback in array: ${index}`)\r\n      callbacks.current[projectName].splice(index,1)\r\n      if(callbacks.current[projectName].length == 0){\r\n        callbacks.current[projectName] = null\r\n        listeners.current[projectName]();\r\n      }\r\n    }\r\n  }\r\n\r\n  const ProjectStack = () => {\r\n    return (<Stack.Navigator \r\n      screenOptions={{\r\n        headerStyle: {\r\n          backgroundColor: 'red',\r\n        },\r\n        headerTintColor: '#fff',\r\n        headerTitleStyle: {\r\n          fontWeight: 'bold',\r\n        },\r\n      }}\r\n    >\r\n      <Stack.Screen name=\"Project\" component={Project}/>\r\n      <Stack.Screen name=\"ProjectOptions\" component={ProjectOptions} />\r\n      <Stack.Screen name=\"Notification\" component={Notification} />\r\n    </Stack.Navigator>)\r\n  }\r\n\r\n  const DrawerNav = ()=> {\r\n    return(<Drawer.Navigator\r\n      // openByDefault\r\n      drawerType={isLargeScreen ? 'permanent' : 'back'}\r\n      drawerStyle={isLargeScreen ? null : { width: '100%' }}\r\n      overlayColor=\"transparent\"\r\n      drawerContent={(props) => {\r\n        return (<Home {...props} />)\r\n      }}\r\n      screenOptions={{\r\n        gestureEnabled:true\r\n      }}\r\n    >\r\n      <Drawer.Screen name=\"Projects\" component={ProjectStack}/>\r\n    </Drawer.Navigator>)\r\n  }\r\n\r\n  return (<NavigationContainer ref={navigation.navigationRef} linking={{\r\n    prefixes: [prefix, 'http://localhost:19006', 'https://notibot.kihtrak.com'],\r\n    screens: {\r\n      ProjectsDrawerScreen:{\r\n        path: '',\r\n        screens: {\r\n          Projects:{\r\n            path: '',\r\n            screens: {\r\n              Project: 'project/:title',\r\n              Notification: 'notification/:projTitle/:timestamp/:resValue?/:index?',\r\n            }\r\n          }\r\n        },\r\n      },\r\n    },\r\n    subscribe(listener) {\r\n      const onReceiveURL = ({ url }) => {\r\n        listener(url)\r\n        console.log(`setInitialDeepLink(${url})`)\r\n        if(url!=initialDeepLink)\r\n          setInitialDeepLink(url)\r\n      };\r\n\r\n      // Linking.getInitialURL().then((url) => {\r\n      //   console.log(`setInitialDeepLinkbyutnotreally(${url})`)\r\n      // });\r\n\r\n      // Listen to incoming links from deep linking\r\n      Linking.addEventListener('url', onReceiveURL);\r\n\r\n      return () => {\r\n        // Clean up the event listeners\r\n        Linking.removeEventListener('url', onReceiveURL);\r\n      };\r\n    },\r\n  }}>\r\n    <MainStackLoadedContext.Provider value={mainStackLoadedRef}>\r\n      <DeepLinkContext.Provider value={initialDeepLink}>\r\n        <ProjectsContext.Provider value={projContext}>\r\n            <Stack.Navigator \r\n              screenOptions={{\r\n                headerStyle: {\r\n                  backgroundColor: 'red',\r\n                },\r\n                headerTintColor: '#fff',\r\n                headerTitleStyle: {\r\n                  fontWeight: 'bold',\r\n                },\r\n              }}\r\n            >\r\n              {state.isLoading ? ( \r\n                <Stack.Screen name=\"Splash\" component={Loading} options={{ headerShown:false }}/>\r\n              ) : state.isSignedIn == false ? <>\r\n                 <Stack.Screen\r\n                  name=\"SignIn\"\r\n                  component={Login}\r\n                  options={{\r\n                    headerShown:false,\r\n                // When logging out, a pop animation feels intuitive\r\n                    animationTypeForReplace: !state.isSignedIn ? 'pop' : 'push',\r\n                  }}\r\n                />\r\n                <Stack.Screen\r\n                  name=\"SignUp\"\r\n                  component={SignUp}\r\n                  options={{\r\n                    headerShown:false,\r\n                // When logging out, a pop animation feels intuitive\r\n                    animationTypeForReplace: !state.isSignedIn ? 'pop' : 'push',\r\n                  }}\r\n                />\r\n                </> : <><Stack.Screen name=\"Main\" component={DrawerNav} options={{ headerShown:false }}/>\r\n                  <Stack.Screen name=\"Settings\" component={Settings} />\r\n                {/* <Stack.Screen name=\"Projects\" component={Home} /> */}\r\n              \r\n                {/* <Stack.Screen name=\"ProjectOptions\" component={ProjectOptions} />\r\n                <Stack.Screen name=\"Notification\" component={Notification} />\r\n                <Stack.Screen name=\"Settings\" component={Settings} /> */}\r\n              </>}\r\n            </Stack.Navigator>\r\n          </ProjectsContext.Provider>\r\n        </DeepLinkContext.Provider>\r\n      </MainStackLoadedContext.Provider>\r\n      <FlashMessage position=\"top\" />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"],"sourceRoot":""}