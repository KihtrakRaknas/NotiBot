{"version":3,"sources":["utils/contexts.js","utils/useRootNavigation.js","screens/Loading.js","screens/Login.js","screens/SignUp.js","utils/hashStringToColor.js","screens/Home.js","screens/Settings.js","screens/Project.js","utils/constants.js","screens/Notification.js","utils/alert.js","screens/ProjectOptions.js","App.js"],"names":["ProjectsContext","React","createContext","DeepLinkContext","MainStackLoadedContext","navigationRef","createRef","dispatch","action","current","linkTo","path","config","state","getStateFromPath","getActionFromState","undefined","useRootNavigation","Loading","View","style","styles","container","Text","loadingText","ActivityIndicator","size","color","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","marginBottom","Login","navigation","useState","email","setEmail","password","setPassword","errorMessage","setErrorMessage","useEffect","SplashScreen","Platform","OS","WebBrowser","Constants","appOwnership","GoogleSignIn","catch","message","Alert","alert","Google","expoClientId","webClientId","androidClientId","iosClientId","request","response","promptAsync","console","log","type","id_token","params","credential","firebase","auth","GoogleAuthProvider","signInWithCredential","error","KeyboardAvoidingView","behavior","SafeAreaView","margin","title","textInputBox","TextInput","placeholder","placeholderTextColor","autoCapitalize","textInput","onChangeText","value","secureTextEntry","TouchableOpacity","submitButton","onPress","signInWithEmailAndPassword","then","user","includes","substring","indexOf","fontSize","disabled","button","light","a","async","idToken","titleStyle","navigate","borderBottomColor","borderBottomWidth","alignSelf","height","fontWeight","padding","borderRadius","SignUp","route","createUserWithEmailAndPassword","string","total","charCodeAt","firstPartOfString","toString","prefix","Linking","Home","useContext","listenToProject","projectsData","stopListeningToProject","loading","setLoading","projects","setProjects","numberOfProjects","setNumberOfProjects","visible","setVisible","projectName","setProjectName","initialDeepLink","mainStackLoadedRef","useLinkTo","currentUserUid","currentUser","uid","db","firestore","setNotificationCategories","Notifications","identifier","buttonTitle","options","opensAppToForeground","isAuthenticationRequired","isDestructive","previewPlaceholder","submitButtonTitle","isDevice","name","importance","MAX","vibrationPattern","lightColor","existingStatus","status","finalStatus","token","data","collection","doc","set","FieldValue","arrayUnion","merge","registerForPushNotificationsAsync","useLayoutEffect","parsedDeepLink","length","queue","projectsLoaded","openDrawer","mainStackLoaded","encodeURI","subscriptionFunctions","unsub","onSnapshot","includeMetadataChanges","metadata","hasPendingWrites","some","projectObj","subFunc","filter","subtitle","timestamp","sort","b","JSON","stringify","push","toggleOverlay","isVisible","onBackdropPress","ModalComponent","WebModal","Modal","overlayStyle","width","maxWidth","bottom","toUpperCase","match","code","leftComponent","icon","centerComponent","text","rightComponent","LinearGradient","colors","start","x","y","end","FlatList","renderItem","item","marginVertical","bottomDivider","topDivider","linearGradientProps","hashStringToColor","ViewComponent","containerStyle","rounded","Content","Title","listItemTitle","adjustsFontSizeToFit","numberOfLines","Subtitle","listItemSubtitle","Chevron","keyExtractor","ListFooterComponent","textDecorationLine","controlsColor","showTitle","ListEmptyComponent","flexGrow","marginTop","paddingTop","paddingHorizontal","textAlign","Settings","setToken","showToken","setShowToken","signOut","res","e","buttonStyle","dangerButton","btnContainer","getIdToken","fetch","body","method","headers","json","resJSON","err","infoButton","Project","projTitle","notifications","updateNotifications","isLargeScreen","useWindowDimensions","handleProjUpdate","newData","setOptions","headerRight","headerLeft","getSubtitle","reverse","index","listItem","left","Date","toLocaleString","groups","Notification","resValue","notification","updateNotification","webhookParamValue","setWebhookParamValue","webhookRes","setWebhookRes","checkCanDelete","canDelete","setCanDelete","oldState","dangerouslyGetState","routes","prevRoute","reset","newIndex","setParams","goBack","deleteNotification","arrayRemove","headerButtonTitle","ScrollView","headerView","h1","subheaderView","textMargin","h4","right","dataView","webhook","webhookParam","url","flexDirection","description","extra","window","confirm","Boolean","join","confirmOption","find","cancelOption","groupDescriptions","users","setUsers","currentGroupNum","setCurrentGroupNum","canLeave","setCanLeave","APIKey","setAPIKey","showAPIKey","setShowAPIKey","profileInfoMap","useRef","tempCurrentGroupNum","tempUsers","groupName","group","profile","removeUser","project","contentContainerStyle","userElements","itemIndex","controller","zIndex","source","uri","photoURL","displayName","items","map","el","label","defaultValue","itemStyle","overflow","instance","onChangeItem","newValue","selectItem","cancelable","onDismiss","updateObj","forEach","update","arr","groupIndex","descContainer","groupTitle","groupText","groupDesc","Clipboard","setString","Share","share","codeContainer","leaveButton","keyButton","delete","deleteButton","explanationText","paddingBottom","marginRight","flexBasis","flexShrink","flexWrap","marginHorizontal","fontFamily","lineHeight","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","Stack","createStackNavigator","Drawer","createDrawerNavigator","App","callbacks","listeners","notificationListener","responseListener","setTimeout","loaded","setInitialDeepLink","Dimensions","get","openLinkInApp","appUrl","notifContent","content","showMessage","hideStatusBar","firebaseData","notifMetaData","actionIdentifier","userText","fetchCallback","resStr","errored","useReducer","prevState","isLoading","isSignedIn","onAuthStateChanged","projContext","callback","callOnInit","invCallback","warn","splice","ProjectStack","Navigator","screenOptions","headerStyle","headerTintColor","headerTitleStyle","Screen","component","ProjectOptions","NavigationContainer","ref","linking","prefixes","screens","ProjectsDrawerScreen","Projects","subscribe","listener","onReceiveURL","Provider","headerShown","animationTypeForReplace","drawerType","drawerStyle","overlayColor","drawerContent","props","gestureEnabled","position"],"mappings":"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","file":"static/js/app.a5ebb4f6.chunk.js","sourcesContent":["import React from 'react';\r\nexport const ProjectsContext = React.createContext();\r\nexport const DeepLinkContext = React.createContext();\r\nexport const MainStackLoadedContext = React.createContext();","import { createRef } from 'react';\r\nimport { getActionFromState, getStateFromPath } from '@react-navigation/native';\r\n\r\nexport const navigationRef = createRef();\r\n\r\nexport function dispatch(action) {\r\n    navigationRef.current?.dispatch(action);\r\n}\r\n\r\nexport function linkTo(path, config = null) {\r\n  var state = getStateFromPath(path, config);\r\n  var action = getActionFromState(state);\r\n  if (action !== undefined) {\r\n    dispatch(action);\r\n  }\r\n}\r\n\r\nconst useRootNavigation = () => ({\r\n    navigationRef,\r\n  linkTo\r\n});\r\n\r\nexport default useRootNavigation","import React from 'react';\r\nimport { View, Text, ActivityIndicator, StyleSheet } from 'react-native'\r\n\r\nexport default function Loading() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.loadingText}>Loading</Text>\r\n      <ActivityIndicator size=\"large\" color=\"white\"/>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor:\"red\"\r\n  },\r\n  loadingText:{\r\n    marginBottom:20,\r\n    color:\"white\"\r\n  }\r\n})","import React from 'react';\r\nimport { StyleSheet, Text, TextInput, View, Alert, KeyboardAvoidingView, TouchableOpacity, SafeAreaView, Platform} from 'react-native'\r\nimport firebase from 'firebase';\r\nimport * as Google from 'expo-auth-session/providers/google';\r\nimport * as GoogleSignIn from 'expo-google-sign-in';\r\nimport { SocialIcon } from 'react-native-elements';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport { Button } from 'react-native-elements';\r\nimport Constants from 'expo-constants';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\nWebBrowser.maybeCompleteAuthSession();\r\n\r\nexport default function Login({ navigation }) {\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState(null);\r\n  \r\n  React.useEffect(()=>{SplashScreen.hideAsync()},[true])\r\n\r\n  function handleLogin() {\r\n    firebase\r\n    .auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then((user) => {\r\n      //if(checkUserFeilds(doc.data()))\r\n        //navigation.navigate('LoggedIn')\r\n      // else\r\n      //   navigation.navigate('SetUp')\r\n    })\r\n    .catch(error => {\r\n      if(error.message.includes(\"The user may have been deleted\"))\r\n        error.message = error.message.substring(0,error.message.indexOf(\"The user may have been deleted\"))\r\n      // if(error.message.includes(\"the user does not have a password\"))\r\n      //   error.message =\r\n      Alert.alert(error.message)\r\n      setErrorMessage(error.message)\r\n    })\r\n  }  \r\n\r\n  React.useEffect(() => {\r\n    if(Platform.OS == 'android'){\r\n      WebBrowser.warmUpAsync();\r\n      \r\n      return () => {\r\n        WebBrowser.coolDownAsync();\r\n      };\r\n    }\r\n    if(Constants.appOwnership == \"standalone\"){ // init native sign in with google logic\r\n\r\n      GoogleSignIn.initAsync({\r\n        // You may ommit the clientId when the firebase `googleServicesFile` is configured\r\n        // clientId: '<YOUR_IOS_CLIENT_ID>',\r\n        // Provide other custom options...\r\n      }).catch (({ message }) => {\r\n        Alert.alert('GoogleSignIn.initAsync(): ' + message);\r\n      })\r\n    }\r\n\r\n  }, []);\r\n\r\n  const [request, response, promptAsync] = Google.useIdTokenAuthRequest(\r\n    {\r\n      expoClientId: '896187396809-tn4obhk9l23t5u8uhmrspmn89iph7lr0.apps.googleusercontent.com',\r\n      webClientId: '896187396809-5tbhq093deljombkbflt9c5mrfu7qvum.apps.googleusercontent.com',\r\n      // clientId: '896187396809-89ltb58u1or8fnetjgn90btpmb4ghmaq.apps.googleusercontent.com',\r\n      androidClientId: '896187396809-i55h6jach0jrja5studqj9dr2iiuhf8a.apps.googleusercontent.com',\r\n      iosClientId: \"896187396809-2ks3dj1dogegfsc8a9jr32s33tt4rben.apps.googleusercontent.com\",\r\n    },\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    console.log(\"response: \")\r\n    console.log(response)\r\n    if (response?.type === 'success') {\r\n      const { id_token } = response.params;\r\n      console.log(id_token)\r\n      const credential = firebase.auth.GoogleAuthProvider.credential(id_token);\r\n      firebase.auth().signInWithCredential(credential).catch((error) => {\r\n        console.log(error)\r\n        Alert.alert(error.message)\r\n      });\r\n    }\r\n  }, [response]);\r\n\r\n  return (\r\n    <KeyboardAvoidingView behavior={Platform.OS==\"ios\"?\"padding\":\"height\"} style={styles.container}>\r\n      <SafeAreaView style={{ flex: 1, justifyContent: 'center', alignItems: 'center', margin:20 }}>\r\n        <Text style={styles.title}>Login</Text>\r\n        {errorMessage &&\r\n        <Text style={styles.errorMessage}>\r\n            {errorMessage}\r\n        </Text>} \r\n        <View style={styles.textInputBox}>\r\n          <TextInput\r\n            placeholder=\"Email\"\r\n            placeholderTextColor=\"white\"\r\n            autoCapitalize=\"none\"\r\n            style={styles.textInput}\r\n            onChangeText={setEmail}\r\n            value={email}\r\n          />\r\n        </View>\r\n        <View style={styles.textInputBox}>\r\n          <TextInput\r\n            secureTextEntry\r\n            placeholder=\"Password\"\r\n            placeholderTextColor=\"white\"\r\n            autoCapitalize=\"none\"\r\n            style={styles.textInput}\r\n            onChangeText={setPassword}\r\n            value={password}\r\n          />\r\n        </View>\r\n        <TouchableOpacity \r\n          style={[styles.submitButton,{backgroundColor:\"blue\"}]}\r\n          onPress={handleLogin}\r\n        >\r\n          <Text style={{color:\"white\",fontSize:20,}}>Sign In</Text>\r\n        </TouchableOpacity>\r\n        {(Platform.OS != 'ios' || Constants.appOwnership != \"standalone\" || errorMessage == \"The password is invalid or the user does not have a password.\") && <SocialIcon\r\n          title={\"Sign In With Google\"}\r\n          disabled={(Constants.appOwnership != \"standalone\" || Platform.OS == 'web') && !request}\r\n          button={true}\r\n          light\r\n          style={styles.submitButton}\r\n          type={\"google\"}\r\n          onPress={async ()=>{\r\n            if(Constants.appOwnership != \"standalone\" || Platform.OS == 'web') {\r\n              console.log(\"promting async\")\r\n              promptAsync()\r\n            } else {\r\n              try {\r\n                await GoogleSignIn.askForPlayServicesAsync();\r\n                const { type, user } = await GoogleSignIn.signInAsync();\r\n                if (type === 'success') {\r\n                  const idToken = user.auth.idToken\r\n                  console.log(idToken)\r\n                  const credential = firebase.auth.GoogleAuthProvider.credential(idToken);\r\n                  firebase.auth().signInWithCredential(credential).catch((error) => {\r\n                    console.log(error)\r\n                    Alert.alert(error.message)\r\n                  });\r\n                }\r\n              } catch ({ message }) {\r\n                //Alert.alert('login: Error:' + message);\r\n              }\r\n            }\r\n          }}\r\n        />}\r\n        <Button\r\n          titleStyle={{color:\"white\"}}//\"#d1faff\"\r\n          title=\"Don't have an account? Sign Up\"\r\n          disabled={(Constants.appOwnership != \"standalone\" || Platform.OS != 'web') && !request}\r\n          onPress={() => navigation.navigate('SignUp',{email})}\r\n          type=\"clear\"\r\n        />\r\n      </SafeAreaView>\r\n    </KeyboardAvoidingView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor:\"red\",\r\n  },\r\n  textInputBox: {\r\n    borderBottomColor:\"white\",\r\n    borderBottomWidth: 1,\r\n    marginBottom: 40,\r\n    alignSelf: 'stretch',\r\n  },\r\n  textInput: {\r\n    fontSize: 24,\r\n    height: 40,\r\n    fontWeight: '200',\r\n    marginBottom: 0,\r\n    color:\"white\",\r\n  },\r\n  title: {\r\n    fontSize:50,\r\n    marginBottom:30,\r\n    color:\"white\"\r\n  },\r\n  submitButton:{\r\n    alignItems: 'center',\r\n    padding:15,\r\n    borderRadius:7,\r\n    marginBottom:10,\r\n    margin:7,\r\n    alignSelf: 'stretch',\r\n  },\r\n  errorMessage:{\r\n    color: 'blue', marginBottom:20\r\n  }\r\n})","import React from 'react'\r\nimport { StyleSheet, Text, TextInput, View,  Alert, KeyboardAvoidingView, TouchableOpacity, SafeAreaView } from 'react-native'\r\nimport firebase from 'firebase';\r\nimport { Button } from 'react-native-elements';\r\n\r\nexport default function SignUp({ navigation, route}) {\r\n    const [email, setEmail] = React.useState(route.params.email)\r\n    const [password, setPassword] = React.useState(null)\r\n    const [errorMessage, setErrorMessage] = React.useState(null)\r\n    const handleSignUp = () => {\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(() => {\r\n          // firebase.firestore().collection('Users').doc(currentUser.uid).onSnapshot((doc) => {\r\n          //   console.log(\"Current data: \", doc.data());\r\n          //   if(checkUserFeilds(doc.data()))\r\n          //     this.props.navigation.navigate('LoggedIn')\r\n          //   else\r\n          //     this.props.navigation.navigate('SetUp')\r\n          // });\r\n        })\r\n        .catch(error => {\r\n          setErrorMessage(error.message)\r\n          Alert.alert(error.message)\r\n        })\r\n    }\r\n    return (\r\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n        <SafeAreaView style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>{/*  SafeAreaView makes it nice looking on iPad */}\r\n          <Text style={styles.title}>Sign Up</Text>\r\n          {errorMessage &&\r\n          <Text style={{ color: 'blue', marginBottom:20 }}>\r\n              {errorMessage}\r\n          </Text>} \r\n          <View style={styles.textInputBox}>\r\n            <TextInput\r\n              placeholder=\"Email\"\r\n              placeholderTextColor=\"white\"\r\n              autoCapitalize=\"none\"\r\n              style={styles.textInput}\r\n              onChangeText={setEmail}\r\n              value={email}\r\n            />\r\n          </View>\r\n          <View style={styles.textInputBox}>\r\n            <TextInput\r\n              secureTextEntry\r\n              placeholder=\"Password\"\r\n              placeholderTextColor=\"white\"\r\n              autoCapitalize=\"none\"\r\n              style={styles.textInput}\r\n              onChangeText={setPassword}\r\n              value={password}\r\n            />\r\n          </View>\r\n          <TouchableOpacity \r\n            style={styles.submitButton}\r\n            onPress={handleSignUp}\r\n          >\r\n            <Text style={{color:\"white\",fontSize:20,}}>Create Account</Text>\r\n          </TouchableOpacity>\r\n          <Button\r\n            titleStyle={{color:\"white\"}}//\"#d1faff\"\r\n            title=\"Already have an account? Login\"\r\n            onPress={() => navigation.navigate('SignIn')}\r\n            type=\"clear\"\r\n          />\r\n        </SafeAreaView>\r\n      </KeyboardAvoidingView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor:\"red\",\r\n    \r\n  },\r\n  textInputBox: {\r\n    borderBottomColor:\"white\",\r\n    borderBottomWidth: 1,\r\n    marginBottom: 40,\r\n    alignSelf: 'stretch',\r\n  },\r\n  textInput: {\r\n    alignSelf: 'stretch',\r\n    fontSize: 24,\r\n    height: 40,\r\n    fontWeight: '200',\r\n    marginBottom: 0,\r\n    color:\"white\",\r\n  },\r\n  title: {\r\n    fontSize:50,\r\n    marginBottom:30,\r\n    color:\"white\"\r\n  },\r\n  submitButton:{\r\n    alignItems: 'center',\r\n    backgroundColor:\"blue\",\r\n    alignSelf: 'stretch',\r\n    padding:15,\r\n    borderRadius:7,\r\n    marginBottom:10\r\n  },\r\n})","export default (string)=>{\r\n    let total = 0;\r\n    for(let char of string)\r\n        total += char.charCodeAt(0)\r\n    // '}' is 125\r\n    // ' ' is 32\r\n    total%=126\r\n    // total-=32\r\n    total/=(126)\r\n    const firstPartOfString = '#' + total.toString(16).substring(2,8)\r\n    return [ firstPartOfString + \"00\", firstPartOfString + \"30\"]\r\n}","import React, { useRef, useContext, useLayoutEffect, useEffect } from 'react'\r\nimport { StyleSheet, Platform, Image, Text, View, FlatList, ActivityIndicator, Modal, SafeAreaView, TextInput, KeyboardAvoidingView, ScrollView } from 'react-native'\r\nimport { ListItem, Button, Overlay, Avatar, Header } from 'react-native-elements'\r\nimport firebase from 'firebase';\r\nimport * as Notifications from 'expo-notifications'\r\nimport Constants from 'expo-constants';\r\nimport WebModal from 'modal-react-native-web';\r\nimport hashStringToColor from '../utils/hashStringToColor'\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { ProjectsContext, DeepLinkContext, MainStackLoadedContext } from '../utils/contexts'\r\nimport { showMessage, hideMessage } from \"react-native-flash-message\";\r\nimport * as Linking from 'expo-linking';\r\nimport { useFocusEffect, useLinkTo } from '@react-navigation/native';\r\nimport { Alert } from 'react-native';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nimport * as SplashScreen from 'expo-splash-screen';\r\n\r\nconst prefix = Linking.createURL('/');\r\n\r\nexport default function Home({ navigation }) {\r\n  const { projectsData, listenToProject, stopListeningToProject } = React.useContext(ProjectsContext);\r\n  // const notificationListener = useRef();\r\n  // const responseListener = useRef();\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [projects, setProjects] = React.useState([]);\r\n  const [numberOfProjects, setNumberOfProjects] = React.useState(null);\r\n  const [visible, setVisible] = React.useState(false);\r\n  const [projectName, setProjectName] = React.useState('');\r\n  const [errorMessage, setErrorMessage] = React.useState('');\r\n  const initialDeepLink = useContext(DeepLinkContext)\r\n  const mainStackLoadedRef = useContext(MainStackLoadedContext)\r\n  const linkTo = useLinkTo();\r\n\r\n  const currentUserUid = firebase.auth().currentUser.uid;\r\n  const db = firebase.firestore();\r\n\r\n  const resetModalState = () => {\r\n    setProjectName('')\r\n    setErrorMessage('')\r\n  }\r\n\r\n  async function createNewProject() {\r\n    const valid = await checkProjName()\r\n    if (valid) {\r\n      try{\r\n        await db.collection('Projects').doc(projectName.toUpperCase()).set({\r\n          'Owner': firebase.firestore.FieldValue.arrayUnion(currentUserUid)\r\n        })\r\n        await db.collection('Users').doc(currentUserUid).set({\r\n          'Projects': firebase.firestore.FieldValue.arrayUnion(projectName.toUpperCase())\r\n        }, { merge: true })\r\n        setVisible(false)\r\n      } catch(e) {\r\n        if(e.code == \"permission-denied\" || e.code == \"already-exists\"){\r\n          setErrorMessage(`Name already taken: ${projectName}`)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async function checkProjName() {\r\n    if (projectName.toUpperCase().length < 2) {\r\n      setErrorMessage(`Your name must be at least 2 characters. You only have: ${projectName.length}`)\r\n      return false\r\n    }\r\n    if (!projectName.toUpperCase().match(\"^[A-Z0-9]+$\")){\r\n      setErrorMessage(`Your name must only have letters and numbers (no spaces or special characters)`)\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  async function registerForPushNotificationsAsync() {\r\n      if (Platform.OS === 'android') {\r\n        Notifications.setNotificationChannelAsync('default', {\r\n          name: 'default',\r\n          importance: Notifications.AndroidImportance.MAX,\r\n          vibrationPattern: [0, 250, 250, 250],\r\n          lightColor: '#FF00007C',\r\n        });\r\n      }\r\n\r\n      const { status: existingStatus } = await Notifications.getPermissionsAsync();\r\n      let finalStatus = existingStatus;\r\n      if (existingStatus !== 'granted') {\r\n        const { status } = await Notifications.requestPermissionsAsync();\r\n        finalStatus = status;\r\n      }\r\n      if (finalStatus !== 'granted') {\r\n        alert('Failed to get push token for push notification!');\r\n        return;\r\n      }\r\n      const token = (await Notifications.getExpoPushTokenAsync()).data;\r\n      console.log(token);\r\n      firebase.firestore().collection('Users').doc(currentUserUid).set({\r\n        'Push Tokens': firebase.firestore.FieldValue.arrayUnion(token)\r\n      }, { merge: true })\r\n  };\r\n\r\n  async function setNotificationCategories() {\r\n    await Notifications.setNotificationCategoryAsync(\"standard\",[\r\n      {\r\n        identifier:\"deleteNotif\", \r\n        buttonTitle: \"Delete\",\r\n        options: {\r\n          opensAppToForeground:false,\r\n          isAuthenticationRequired:true,\r\n          isDestructive:true\r\n        }\r\n      }\r\n    ],{previewPlaceholder:\"NotiBot Notification\"})\r\n    await Notifications.setNotificationCategoryAsync(\"webhookbutton\",[\r\n      {\r\n        identifier:\"webhookAction\", \r\n        buttonTitle: \"Trigger Webhook Action\",\r\n        options: {\r\n          opensAppToForeground:true,\r\n          isAuthenticationRequired:true,\r\n          isDestructive:false\r\n        }\r\n      },\r\n      {\r\n        identifier:\"deleteNotif\", \r\n        buttonTitle: \"Delete\",\r\n        options: {\r\n          opensAppToForeground:true,\r\n          isAuthenticationRequired:true,\r\n          isDestructive:true\r\n        }\r\n      }\r\n    ],{previewPlaceholder:\"NotiBot Notification With Webhook Action\"})\r\n    await Notifications.setNotificationCategoryAsync(\"webhooktext\",[\r\n      {\r\n        identifier:\"webhookReply\", \r\n        buttonTitle: \"Send Text to Webhook\",\r\n        textInput:{\r\n          submitButtonTitle:\"SEND\",\r\n          placeholder:\"\"\r\n        },\r\n        options: {\r\n          opensAppToForeground:true,\r\n          isAuthenticationRequired:true,\r\n          isDestructive:false\r\n        }\r\n      },\r\n      {\r\n        identifier:\"deleteNotif\", \r\n        buttonTitle: \"Delete\",\r\n        options: {\r\n          opensAppToForeground:true,\r\n          isAuthenticationRequired:true,\r\n          isDestructive:true\r\n        }\r\n      }\r\n    ],{previewPlaceholder:\"NotiBot Notification With Webhook Reply\"})\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (Constants.isDevice && Platform.OS !== 'web') { //Expo's support for web push is \"pending\"\r\n     registerForPushNotificationsAsync().then(setNotificationCategories)\r\n    }\r\n      \r\n  }, [true])\r\n\r\n\r\n  React.useLayoutEffect(()=>{\r\n    const parsedDeepLink = initialDeepLink?.substring(prefix.length-1)\r\n    if(parsedDeepLink && parsedDeepLink.length>1 && parsedDeepLink[0]=='/') {\r\n      // Moved to a separate effect so it wont get triggers everytime projects changes\r\n      // linkTo(parsedDeepLink)\r\n    }else if(numberOfProjects === projects.length && !mainStackLoadedRef.current.queue && mainStackLoadedRef.current.projectsLoaded == false) { // projects have finished downloading\r\n      mainStackLoadedRef.current.projectsLoaded = true\r\n      if(projects.length>0){\r\n        console.log(\"opening most recent project!\")\r\n        navigation.navigate(\"Project\", { title: projects[0].title })\r\n      }\r\n      navigation.openDrawer()\r\n    }\r\n    mainStackLoadedRef.current.mainStackLoaded()\r\n  },[projects, numberOfProjects])\r\n\r\n  React.useEffect(()=>{ // handle deep links\r\n    const parsedDeepLink = initialDeepLink?.substring(prefix.length-1)\r\n    if(parsedDeepLink && parsedDeepLink.length>1 && parsedDeepLink[0]=='/')\r\n      linkTo(encodeURI(parsedDeepLink))\r\n  },[true])\r\n\r\n  React.useLayoutEffect(() => {\r\n    const subscriptionFunctions = []\r\n    const unsub = firebase.firestore().collection('Users').doc(currentUserUid).onSnapshot({\r\n      includeMetadataChanges: true\r\n    }, (doc) => {\r\n      const source = doc.metadata.hasPendingWrites ? \"Local\" : \"Server\";\r\n      if (source == \"Server\") {\r\n        let data = (doc.data() && doc.data()[\"Projects\"]) ? doc.data()[\"Projects\"] : []\r\n        console.log(doc.data());\r\n        console.log(\"Current data: \" + data);\r\n        for (let projectName of data) {\r\n          if (!projects.some(projectObj=>projectObj.title == projectName)) {\r\n            const subFunc = (data) => {\r\n              setProjects(projects => {\r\n                projects = projects.filter(projectObj=>projectObj.title!=projectName)\r\n                if (data) {\r\n                  projects = [{\r\n                    title: projectName,\r\n                    subtitle: data?.Notifications && data.Notifications.length > 0 ? data.Notifications[data.Notifications.length - 1].title : `No notifications yet!`,\r\n                    timestamp: data?.Notifications && data.Notifications.length > 0 ? data.Notifications[data.Notifications.length - 1].timestamp : 0\r\n                  }, ...projects]\r\n                  console.log(`adding project to array: ${projectName}`)\r\n                }\r\n                projects.sort((a, b) => b?.timestamp - a?.timestamp)\r\n                setLoading(false)\r\n                console.log(`new projects: ${JSON.stringify(projects)}`)\r\n                return projects\r\n              })\r\n\r\n            }\r\n            listenToProject(projectName, subFunc, true)\r\n            subscriptionFunctions.push({ projectName, subFunc })\r\n          }\r\n        }\r\n        setNumberOfProjects(data.length)\r\n        if (data.length == 0) {\r\n          setLoading(false)\r\n        }\r\n      }\r\n    });\r\n    return () => {\r\n      for (let { projectName, subFunc } of subscriptionFunctions)\r\n        stopListeningToProject(projectName, subFunc)\r\n      unsub()\r\n    }\r\n  }, []);\r\n\r\n  const toggleOverlay = () => {\r\n    resetModalState()\r\n    setVisible(!visible);\r\n  };\r\n\r\n  //console.log(`projectsData: ${JSON.stringify(projectsData)}`)\r\n  return (\r\n    <>\r\n      <Overlay isVisible={visible} onBackdropPress={toggleOverlay} ModalComponent={Platform.OS === 'web' ? WebModal : Modal} overlayStyle={[Platform.OS != 'web' ? { width: \"80%\", margin: \"30%\", maxWidth: 400 /*,flexGrow:1,flex:1,*/ } : {}, { backgroundColor: \"red\", borderRadius: 10, bottom: \"20%\" }]}>\r\n        <View>\r\n          <View style={styles.textInputBox}>\r\n            <TextInput\r\n              placeholder=\"Project Name\"\r\n              placeholderTextColor=\"white\"\r\n              autoCapitalize=\"none\"\r\n              style={styles.textInput}\r\n              onChangeText={setProjectName}\r\n              value={projectName}\r\n            />\r\n          </View>\r\n          {errorMessage != '' &&\r\n            <Text style={styles.errorMessage}>\r\n              {errorMessage}\r\n            </Text>}\r\n          <Button\r\n            title=\"Create Project\"\r\n            onPress={createNewProject}\r\n          />\r\n        </View>\r\n      </Overlay>\r\n      <Header\r\n        backgroundColor=\"red\"\r\n        leftComponent={{ icon: 'plus', type: 'ant-design', color: 'white', onPress: toggleOverlay, size: 23 }}\r\n        centerComponent={{ text: 'Projects', style: { color: 'white', fontSize: 18, fontWeight: \"bold\" } }}\r\n        rightComponent={{ icon: \"settings\", type: 'feather', color: 'white', onPress: () => navigation.navigate('Settings'), size: 23 }}\r\n      />\r\n      <LinearGradient colors={[\"#ff000090\", \"red\"]} start={{ x: 0, y: .6 }} end={{ x: 0, y: 0 }} style={styles.container}>\r\n        {loading && <ActivityIndicator size=\"large\" />}\r\n        {!loading && <>\r\n          <FlatList\r\n            style={{ height: \"100%\", width: \"100%\" }}\r\n            data={projects}\r\n            renderItem={({ item }) => {\r\n              console.log(`item: ${JSON.stringify(item)}`)\r\n              return (<ListItem style={{ borderRadius: 20, marginVertical: 5, backgroundColor:\"white\" }} bottomDivider topDivider onPress={() => {\r\n                // navigation.closeDrawer()\r\n                navigation.navigate(\"Project\", { title: item.title })\r\n              }}\r\n                linearGradientProps={{\r\n                  colors: hashStringToColor(item.title),\r\n                  start: { x: 1, y: 0 },\r\n                  end: { x: 0, y: 0 },\r\n                }}\r\n                ViewComponent={LinearGradient}\r\n                containerStyle={{ borderRadius: 20 }}\r\n                >\r\n                <Avatar size=\"large\" rounded title={item.title.substring(0, 2)} />\r\n                <ListItem.Content>\r\n                  <ListItem.Title style={styles.listItemTitle} adjustsFontSizeToFit numberOfLines={1}>{item.title}</ListItem.Title>\r\n                  <ListItem.Subtitle style={styles.listItemSubtitle}>{item.subtitle}</ListItem.Subtitle>\r\n                </ListItem.Content>\r\n                <ListItem.Chevron />\r\n              </ListItem>)\r\n            }}\r\n            keyExtractor={item => item.title}\r\n            ListFooterComponent={<Button title=\"Open Docs\" titleStyle={{textDecorationLine:\"underline\",color:\"white\"}} onPress={()=>WebBrowser.openBrowserAsync('https://notibotdocs.kihtrak.com',{controlsColor:'#FF0000',showTitle:true})} type=\"clear\"/>}\r\n            ListEmptyComponent={<View style={{ flex: 1, flexGrow: 1, justifyContent: 'center', alignItems: 'center', padding: 20 }}><Text style={{color:\"white\"}}>You currently have no projects</Text><Button style={{ marginTop: 10 }} title=\"Create a new project\" onPress={toggleOverlay} /></View>}\r\n          />\r\n        </>}\r\n      </LinearGradient>\r\n    </>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: \"center\",\r\n    paddingTop: 5,\r\n    paddingHorizontal: 5,\r\n  },\r\n  textInputBox: {\r\n    borderBottomColor: \"white\",\r\n    borderBottomWidth: 1,\r\n    marginBottom: 20,\r\n    alignSelf: 'stretch',\r\n  },\r\n  textInput: {\r\n    fontSize: 24,\r\n    height: 40,\r\n    fontWeight: '200',\r\n    marginBottom: 0,\r\n    color: \"white\",\r\n    textAlign: 'center'\r\n  },\r\n  errorMessage: {\r\n    color: 'blue', marginBottom: 20\r\n  },\r\n  listItemTitle: {\r\n    fontSize: Platform.OS!=\"web\"?30:20, // auto font scaling doesn't work on web\r\n    fontWeight: \"bold\",\r\n  },\r\n  listItemSubtitle: {\r\n    //fontSize:20\r\n  }\r\n})","import React from 'react'\r\nimport { StyleSheet, Platform, Image, Text, View, FlatList, ActivityIndicator, Alert} from 'react-native'\r\nimport { ListItem, Button } from 'react-native-elements'\r\nimport firebase from 'firebase';\r\nimport '@firebase/firestore';\r\nimport * as Notifications from 'expo-notifications'\r\n\r\nexport default function Settings({navigation}) {\r\n  const [token, setToken] = React.useState(\"No token\");\r\n  const [showToken, setShowToken] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    Notifications.getExpoPushTokenAsync().then(res=>{setToken(res.data)}).catch(e=>setToken(e.message))\r\n  }, []);\r\n\r\n  function signOut(){\r\n    firebase.auth().signOut().then().catch((error) => console.error('Sign Out Error', error))\r\n  }\r\n\r\n  function deleteAccount(){\r\n    firebase.auth().currentUser.getIdToken(true)\r\n      .then((idToken) => fetch(\"https://noti.kihtrak.com/deleteProfile\", { \r\n        body: JSON.stringify({ idToken }), \r\n        method: 'POST', \r\n        headers: { \"Content-Type\": \"application/json\" } \r\n      }))\r\n      .then((res) => res.json())\r\n      .then((resJSON) => {\r\n        const err = resJSON?.error\r\n        if(err)\r\n          Alert.alert(err)\r\n        if(resJSON?.status == 'success')\r\n            signOut()\r\n      })\r\n      .catch(e => Alert.alert(`An error occurred while attempting delete your account`))\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* <Button title=\"test\" onPress={()=>firebase.auth().currentUser.updateProfile({displayName: \"Demo\",photoURL: \"https://images-na.ssl-images-amazon.com/images/I/51zLZbEVSTL._AC_SL1200_.jpg\"})} /> */}\r\n      <Button \r\n        buttonStyle={styles.dangerButton} \r\n        title=\"Sign Out\" \r\n        onPress={signOut}\r\n        containerStyle={styles.btnContainer}\r\n      />\r\n      <Button \r\n        buttonStyle={styles.dangerButton}\r\n        title=\"Delete Account\" \r\n        onPress={deleteAccount}\r\n        containerStyle={styles.btnContainer}\r\n      />\r\n      {!showToken && <Button \r\n        buttonStyle={styles.infoButton}\r\n        title=\"Show Debug info\" \r\n        onPress={()=>setShowToken(true)}\r\n        containerStyle={styles.btnContainer}\r\n      />}\r\n      {showToken && <Text style={{ marginTop: 40 }}>You token for debugging is: {token}</Text>}\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  dangerButton: {\r\n    backgroundColor: \"red\"\r\n  },\r\n  infoButton: {\r\n    backgroundColor: \"teal\"\r\n  },\r\n  btnContainer: { \r\n    marginTop: 20, \r\n    width: \"90%\", \r\n    maxWidth: 500 \r\n  },\r\n})","import React, {useContext, useState} from 'react'\r\nimport { StyleSheet, Platform, Image, Text, View, FlatList, ActivityIndicator, Modal, SafeAreaView, TextInput, KeyboardAvoidingView, ScrollView, useWindowDimensions } from 'react-native'\r\nimport { ListItem, Button, Overlay, Avatar } from 'react-native-elements'\r\nimport WebModal from 'modal-react-native-web';\r\nimport * as Linking from 'expo-linking';\r\nimport { useLinkTo  } from '@react-navigation/native';\r\n\r\nimport { ProjectsContext, DeepLinkContext } from '../utils/contexts'\r\nimport { Alert } from 'react-native';\r\nimport Loading from './Loading';\r\nimport * as WebBrowser from 'expo-web-browser';\r\nconst prefix = Linking.createURL('/');\r\n\r\nexport default function Project({ navigation, route }){\r\n    const {projectsData, listenToProject, stopListeningToProject} = useContext(ProjectsContext);\r\n    const projTitle = route.params?.title\r\n    const [notifications,updateNotifications] = useState(projectsData?.[projTitle]?.Notifications) //projectsData[projTitle] is guaranteed to exist due to previous screen\r\n    const dimensions = useWindowDimensions();\r\n    const isLargeScreen = dimensions.width >= 768;\r\n    \r\n    React.useEffect(()=>{\r\n      if(projTitle){\r\n        //updateNotifications(projectsData[projTitle].Notifications)\r\n        const handleProjUpdate = (newData)=>{\r\n          if(newData)\r\n            updateNotifications(newData.Notifications)\r\n          else\r\n            // navigation.goBack()\r\n            navigation.openDrawer()\r\n        }\r\n        listenToProject(projTitle,handleProjUpdate, true)\r\n        return ()=>stopListeningToProject(projTitle, handleProjUpdate)\r\n      }\r\n    },[projTitle])\r\n\r\n    // React.useEffect(()=>{\r\n    //   if(!projTitle)\r\n    //   navigation.openDrawer()\r\n    // },[navigation, projTitle])\r\n\r\n    React.useLayoutEffect(() => {\r\n          navigation.setOptions({...(projTitle?{\r\n            title: projTitle,\r\n            headerRight: () => (\r\n              <Button\r\n                icon={{\r\n                  name: \"ios-options-outline\",\r\n                  type:'ionicon',\r\n                  size: 25,\r\n                  color: \"white\"\r\n                }}\r\n                type=\"clear\"\r\n                onPress={()=>navigation.navigate(\"ProjectOptions\",{title:projTitle})}\r\n              />\r\n            ),\r\n          }:{title:\"\"}),\r\n          headerLeft:()=>{\r\n            if(isLargeScreen)\r\n              return null\r\n            return(\r\n              <Button\r\n                icon={{\r\n                  name: \"menu\",\r\n                  type:'entypo',\r\n                  size: 25,\r\n                  color: \"white\"\r\n                }}\r\n                type=\"clear\"\r\n                onPress={()=>navigation.openDrawer()}\r\n              />\r\n            )\r\n          }\r\n        });\r\n    }, [navigation, projTitle]);\r\n\r\n\r\n    // console.log(`projectsData: ${JSON.stringify(projectsData)}`)\r\n\r\n    const getSubtitle = (item) =>{\r\n        if(item.subtitle)\r\n            return item.subtitle\r\n        if(item.body)\r\n            return item.body\r\n        return \"\"\r\n    }\r\n\r\n\r\n    if(!projTitle){\r\n      // if(!isLargeScreen){\r\n      //   navigation.openDrawer()\r\n      //   return(<Loading/>)\r\n      // }\r\n      return(<View style={styles.container}>\r\n        <Text style={{fontSize:15, textAlign:\"center\"}}>Select a project</Text>\r\n      </View>)\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <FlatList\r\n            style={{height:\"100%\",width:\"100%\"}}\r\n            data={notifications?[...notifications].reverse():[]}\r\n            renderItem={({ item, index }) => <ListItem style={styles.listItem} bottomDivider topDivider onPress={\r\n              ()=>navigation.navigate(\"Notification\",{index: (notifications.length-1-index), timestamp: item.timestamp, projTitle})\r\n            }>\r\n                <ListItem.Content>\r\n                <ListItem.Title>{item.title.substring(0,30)}</ListItem.Title>\r\n                <ListItem.Subtitle>{getSubtitle(item).substring(0,40)}</ListItem.Subtitle>\r\n                <ListItem.Subtitle left>{new Date(item.timestamp).toLocaleString()}</ListItem.Subtitle>\r\n                </ListItem.Content>\r\n                <ListItem.Chevron/>\r\n            </ListItem>}\r\n            keyExtractor={item => item.title+item.timestamp}\r\n            ListEmptyComponent = {\r\n              <View style={{flex:1,flexGrow:1,height:\"100%\",justifyContent: 'center',alignItems: 'center', padding:20 }}>\r\n                <Text style={{fontSize:15, textAlign:\"center\",marginVertical:20}}>The project currently has no notifications</Text>\r\n\r\n                <Button title=\"Learn how to send yourself a notification\" titleStyle={{textDecorationLine:\"underline\"}} onPress={()=>WebBrowser.openBrowserAsync('https://notibotdocs.kihtrak.com',{controlsColor:'#FF0000',showTitle:true})} type=\"clear\"/>\r\n              </View>\r\n            }\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: \"center\"\r\n  }\r\n})","export const groups = [\"Owner\", \"Manager\", \"Subscriber\"]","import React from 'react'\r\nimport { StyleSheet, Platform, Image, ScrollView, FlatList, ActivityIndicator, Modal, SafeAreaView, TextInput, View, TouchableOpacity } from 'react-native'\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\r\nimport { ListItem, Button, Overlay, Avatar, Text } from 'react-native-elements'\r\nimport WebModal from 'modal-react-native-web';\r\nimport firebase from 'firebase';\r\nimport JSONTree from 'react-native-json-tree'\r\nimport Loading from './Loading'\r\n\r\nimport { ProjectsContext } from '../utils/contexts'\r\nimport { groups } from '../utils/constants'\r\n\r\nexport default function Notification({ navigation, route }){\r\n    const {projectsData, listenToProject, stopListeningToProject} = React.useContext(ProjectsContext);\r\n    const { index, timestamp, projTitle, resValue } = route.params\r\n    const [notification,updateNotification] = React.useState(projectsData?.[projTitle]?.Notifications?.[index]) //projectsData[projTitle].Notifications[index] is guaranteed to exist due to previous screen\r\n    const [webhookParamValue,setWebhookParamValue] = React.useState('')\r\n    const [webhookRes,setWebhookRes] = React.useState(resValue?resValue:'')\r\n\r\n    const checkCanDelete = () =>{\r\n        const currentUserUid = firebase.auth().currentUser.uid;\r\n        for(let index of [0,1])\r\n            if(projectsData?.[projTitle]?.[groups[index]]?.includes(currentUserUid))\r\n                return true\r\n        return false\r\n    }\r\n\r\n    const [canDelete,setCanDelete] = React.useState(checkCanDelete())\r\n\r\n    const db = firebase.firestore();\r\n\r\n    React.useLayoutEffect(()=>{\r\n        // Handle populating the previous state if the notification was opened with deep linking\r\n        const oldState = navigation.dangerouslyGetState()\r\n        console.log(\"oldState\")\r\n        console.log(JSON.stringify(oldState))\r\n        const {routes, index} = oldState\r\n        const prevRoute = routes?.[routes.length-2]\r\n        if(prevRoute?.name == \"Project\") // ensure that the correct screen came before\r\n            if(!prevRoute.params){ // only manually set params if they don't exist\r\n                prevRoute.params = {title: projTitle}\r\n                console.log(\"oldState\")\r\n                console.log(JSON.stringify(oldState))\r\n                navigation.reset({index, routes})\r\n            }\r\n    },[navigation])\r\n\r\n    React.useEffect(()=>{\r\n        const handleProjUpdate = (newData)=>{\r\n            if(newData && newData.Notifications){\r\n                let newIndex = /*index?index:*/newData.Notifications.length\r\n                while(newIndex>-1 && (!newData.Notifications[newIndex] || newData.Notifications[newIndex].timestamp > timestamp))\r\n                    newIndex--\r\n                if(newData.Notifications[newIndex] && newData.Notifications[newIndex].timestamp == timestamp){\r\n                    setCanDelete(checkCanDelete())\r\n                    updateNotification(newData.Notifications[newIndex])\r\n                    navigation.setParams({index: newIndex})\r\n                }else\r\n                    navigation.goBack()\r\n            }else\r\n                navigation.goBack()\r\n        }\r\n        listenToProject(projTitle,handleProjUpdate, true)\r\n        return ()=>stopListeningToProject(projTitle, handleProjUpdate)\r\n    },[projTitle,timestamp])\r\n\r\n    const deleteNotification=async ()=>{\r\n        await db.collection('Projects').doc(projTitle).set({\r\n            'Notifications':firebase.firestore.FieldValue.arrayRemove(notification)\r\n        }, { merge: true })\r\n    }\r\n\r\n    React.useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: notification?.title,\r\n            headerRight: () => canDelete\r\n                && <Button\r\n                    disabled={!canDelete}\r\n                    icon={{\r\n                        name: \"trash-outline\",\r\n                        type:'ionicon',\r\n                        size: 25,\r\n                        color: \"white\"\r\n                    }}\r\n                    type=\"clear\"\r\n                    titleStyle={styles.headerButtonTitle}\r\n                    onPress={deleteNotification}\r\n                />\r\n            ,\r\n        });\r\n    }, [navigation, canDelete, notification]);\r\n\r\n    const makeRequest = () => {\r\n        const url = notification.webhook+webhookParamValue\r\n        fetch(url).then(res=>res.text()).then(setWebhookRes).catch(e=>setWebhookRes(e.toString()))\r\n    }\r\n\r\n    if(!notification)\r\n        return(<Loading/>)\r\n\r\n    return (\r\n        <KeyboardAwareScrollView>\r\n            <ScrollView /*contentContainerStyle={styles.container}*/>\r\n                <SafeAreaView>\r\n                    <View style={styles.headerView}>\r\n                        <Text h1 style={{textAlign:\"center\"}}>{notification.title}</Text>\r\n                    </View>\r\n                    <View style={{alignItems: \"center\"}}>\r\n                        <View style={styles.subheaderView}>\r\n                            {notification.subtitle&&<Text style={styles.textMargin} h4 left>{notification.subtitle}</Text>}{notification.timestamp && <Text style={styles.textMargin} right>{`${new Date(notification.timestamp).toLocaleString()}\\nEpoch: ${notification.timestamp}`}</Text>}\r\n                        </View>\r\n                    </View>\r\n                    <View style={styles.dataView}>\r\n                        <Text style={[styles.textMargin,{fontSize:25}]}>{notification.body}</Text>\r\n                        {notification.webhook && <Text style={styles.textMargin}>Webhook: {notification.webhook}</Text>}\r\n                    </View>\r\n                    {notification.webhook && <View style={{alignItems: \"center\"}}>\r\n                        {notification.webhookParam && \r\n                        <View style={styles.textInputBox}>\r\n                            <TextInput\r\n                                placeholder=\"URL parameter value\"\r\n                                autoCapitalize=\"none\"\r\n                                style={styles.textInput}\r\n                                onChangeText={setWebhookParamValue}\r\n                                value={webhookParamValue}\r\n                            />\r\n                        </View>}\r\n                        <TouchableOpacity \r\n                            style={[styles.submitButton,{backgroundColor:\"green\"}]}\r\n                            onPress={makeRequest}\r\n                        >\r\n                            <Text style={{color:\"white\",fontSize:20,}}>Call {notification.webhook+webhookParamValue} {webhookRes && \"Again\"}</Text>\r\n                        </TouchableOpacity>\r\n                    </View>}\r\n                    <View style={styles.dataView}>\r\n                        {!!webhookRes && <Text style={styles.textMargin}>Response: {webhookRes}</Text>}\r\n                    </View>\r\n                </SafeAreaView>\r\n            </ScrollView>\r\n        </KeyboardAwareScrollView>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    //justifyContent: 'center',\r\n  },\r\n  headerView:{\r\n    alignItems: \"center\",\r\n    margin:10\r\n  },\r\n  subheaderView: {\r\n    flex: 1,\r\n    flexDirection:'row',\r\n    justifyContent: 'space-between'\r\n  },\r\n  textMargin:{\r\n      margin:10,\r\n  },\r\n  headerButtonTitle:{\r\n      color:'white'\r\n  },\r\n  dataView:{\r\n      flex:1,\r\n      flexDirection:'column',\r\n      justifyContent:\"flex-start\"\r\n  },\r\n  textInputBox: {\r\n    borderBottomColor:\"black\",\r\n    borderBottomWidth: 1,\r\n    margin:10,\r\n    marginBottom: 40,\r\n    alignSelf: 'stretch',\r\n  },\r\n  textInput: {\r\n    fontSize: 24,\r\n    height: 40,\r\n    fontWeight: '200',\r\n    marginBottom: 0,\r\n    color:\"black\",\r\n  },\r\n  submitButton:{\r\n    alignItems: 'center',\r\n    padding:15,\r\n    borderRadius:7,\r\n    marginBottom:10,\r\n    margin:7,\r\n    alignSelf: 'stretch',\r\n  },\r\n})","import { Alert, Platform } from 'react-native'\r\n\r\nconst alertPolyfill = (title, description, options, extra) => {\r\n    const result = window.confirm([title, description].filter(Boolean).join('\\n'))\r\n\r\n    if (result) {\r\n        const confirmOption = options.find(({ style }) => style !== 'cancel')\r\n        confirmOption?.onPress && confirmOption?.onPress()\r\n    } else {\r\n        console.log(options)\r\n        const cancelOption = options.find(({ style }) => style === 'cancel')\r\n        cancelOption?.onPress && cancelOption?.onPress()\r\n    }\r\n}\r\n\r\nconst alert = Platform.OS === 'web' ? alertPolyfill : Alert.alert\r\n\r\nexport default alert","import React from 'react'\r\nimport { StyleSheet, Platform, Image, Text, View, FlatList, ActivityIndicator, Modal, SafeAreaView, TextInput, KeyboardAvoidingView, ScrollView, TouchableOpacity, Clipboard, Share } from 'react-native'\r\nimport { ListItem, Button, Overlay, Avatar, Icon } from 'react-native-elements'\r\nimport WebModal from 'modal-react-native-web';\r\nimport DropDownPicker from 'react-native-dropdown-picker';\r\nimport firebase from 'firebase';\r\nimport { ProjectsContext } from '../utils/contexts'\r\nimport { groups } from '../utils/constants'\r\nimport alert from '../utils/alert'\r\n\r\nconst groupDescriptions = [\"Full Access\", \"Can't delete project, edit team members, or toggle API key\", \"Can only view data, can't delete notifications\"]\r\n\r\nexport default function Home({ navigation, route }) {\r\n    const { projectsData, listenToProject, stopListeningToProject } = React.useContext(ProjectsContext);\r\n    const projTitle = route.params.title\r\n    const [users, setUsers] = React.useState([])\r\n    const [currentGroupNum, setCurrentGroupNum] = React.useState(groups.length)\r\n    const [canLeave, setCanLeave] = React.useState(false)\r\n    const [visible, setVisible] = React.useState(false);\r\n    const [email, setEmail] = React.useState('');\r\n    const [errorMessage, setErrorMessage] = React.useState('');\r\n    const [APIKey, setAPIKey] = React.useState(null);\r\n    const [showAPIKey, setShowAPIKey] = React.useState(false);\r\n    const profileInfoMap = React.useRef({});\r\n\r\n    const db = firebase.firestore();\r\n\r\n    const projectInfo = projectsData[projTitle]\r\n\r\n    const currentUserUid = firebase.auth().currentUser.uid;\r\n\r\n    React.useLayoutEffect(() => {\r\n        const handleProjUpdate = (newData) => {\r\n            console.log(\"triggered\")\r\n            if (newData) {\r\n                setAPIKey(newData.APIKey)\r\n                let tempUsers = []\r\n                let tempCurrentGroupNum\r\n                for (let groupName of groups){\r\n                    console.log(groupName)\r\n                    if (newData[groupName])\r\n                        for (let uid of newData[groupName]) {\r\n                            console.log(uid)\r\n                            if (uid == currentUserUid)\r\n                                tempCurrentGroupNum = groups.indexOf(groupName)\r\n                            if (!profileInfoMap.current[uid])\r\n                                fetch(\"https://noti.kihtrak.com/getProfileInfo\", { body: JSON.stringify({ uid }), method: 'POST', headers: { \"Content-Type\": \"application/json\" } }).then((res) => res.json()).then((profile) => {\r\n                                    profileInfoMap.current[uid] = profile\r\n                                    //console.log(profile)\r\n                                    setUsers((users)=>[...users, { group: groupName, profile: profileInfoMap.current[uid] }])\r\n                                })\r\n                            else {\r\n                                tempUsers.push({ group: groupName, profile: profileInfoMap.current[uid] }) // Don't re-render until finished\r\n                            }\r\n                        }\r\n                }\r\n                setCurrentGroupNum(tempCurrentGroupNum)\r\n                if (tempUsers.length > 0)\r\n                    setUsers(tempUsers)\r\n                if (tempCurrentGroupNum != 0 || newData[groups[0]].length > 1)\r\n                    setCanLeave(true)\r\n                else\r\n                    setCanLeave(false)\r\n            } else\r\n                navigation.goBack()\r\n        }\r\n        listenToProject(projTitle, handleProjUpdate, true)\r\n        return () => stopListeningToProject(projTitle, handleProjUpdate)\r\n    }, [])\r\n\r\n\r\n    React.useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            title: `${projTitle} Options`,\r\n        });\r\n    }, [navigation]);\r\n\r\n    const resetModalState = () => {\r\n        setEmail('')\r\n        setErrorMessage('')\r\n    }\r\n\r\n    const toggleOverlay = () => {\r\n        resetModalState()\r\n        setVisible(!visible);\r\n    };\r\n\r\n    const APIKeyToggle = () => {\r\n        if(APIKey){\r\n            alert(`Delete API Key`, `Are you sure you want to delete the API Key for ${projTitle}?`,\r\n                [{\r\n                    text: 'Delete',\r\n                    onPress: () => {\r\n                        db.collection('Projects').doc(projTitle).update({\r\n                            APIKey: firebase.firestore.FieldValue.delete()\r\n                        })\r\n                    },\r\n                    style: \"destructive\"\r\n                }, { text: 'Cancel', style: 'cancel' },],\r\n                { cancelable: true }\r\n            );\r\n        }else{\r\n            alert(`Enable API Key`, `Any future request will require this key.`,\r\n                [{\r\n                    text: 'Enable',\r\n                    onPress: () => {\r\n                        firebase.auth().currentUser.getIdToken(true)\r\n                        .then((idToken) => fetch(\"https://noti.kihtrak.com/addAPIKey\", { \r\n                            body: JSON.stringify({ idToken, project: projTitle }), \r\n                            method: 'POST', \r\n                            headers: { \"Content-Type\": \"application/json\" } \r\n                        }))\r\n                        .catch(e => alert(\"An error occurred while attempting to enable the API Key\"))\r\n                    },\r\n                    style: \"destructive\"\r\n                }, { text: 'Cancel', style: 'cancel' },],\r\n                { cancelable: true }\r\n            );\r\n        }\r\n    }\r\n\r\n    const deleteProject = () => {\r\n        alert(`Delete ${projTitle}`, `Are you sure you want to delete ${projTitle}?`,\r\n            [{\r\n                text: 'Delete',\r\n                onPress: async () => {\r\n                    firebase.auth().currentUser.getIdToken(true)\r\n                        .then((idToken) => fetch(\"https://noti.kihtrak.com/deleteProject\", { body: JSON.stringify({ idToken, project: projTitle }), method: 'POST', headers: { \"Content-Type\": \"application/json\" } }))\r\n                        .catch(e => alert(\"An error occurred while attempting to delete the project\"))\r\n                },\r\n                style: \"destructive\"\r\n            }, { text: 'Cancel', style: 'cancel' },],\r\n            { cancelable: true }\r\n        );\r\n    }\r\n\r\n    const deleteNotifications = () => {\r\n        alert(`Delete ${projTitle}`, `Are you sure you want to delete all of ${projTitle}'s notifications?`,\r\n            [{\r\n                text: 'Delete',\r\n                onPress: async () => {\r\n                    await db.collection('Projects').doc(projTitle).update({\r\n                        Notifications: firebase.firestore.FieldValue.delete()\r\n                    }).then(() => navigation.goBack()).catch(e => alert(\"An error occurred while attempting to delete the notifications\"))\r\n                },\r\n                style: \"destructive\"\r\n            }, { text: 'Cancel', style: 'cancel' },],\r\n            { cancelable: true }\r\n        );\r\n    }\r\n\r\n    const addUser = () => {\r\n        fetch(\"https://noti.kihtrak.com/getProfileByEmail\", { body: JSON.stringify({ email }), method: 'POST', headers: { \"Content-Type\": \"application/json\" } })\r\n            .then((res) => res.json()).then((profile) => {\r\n                console.log(profile)\r\n                return firebase.auth().currentUser.getIdToken(true)\r\n                    .then((idToken) => fetch(\"https://noti.kihtrak.com/addUserToProject\", { \r\n                        body: JSON.stringify({ idToken, project: projTitle, uid:profile.uid }), \r\n                        method: 'POST', \r\n                        headers: { \"Content-Type\": \"application/json\" } \r\n                    }))\r\n            }).then(()=>setVisible(false)).catch(e => alert(`An error occurred while attempting to add ${email} to the project`))\r\n    }\r\n\r\n    const removeUser = (email) => {\r\n        fetch(\"https://noti.kihtrak.com/getProfileByEmail\", { body: JSON.stringify({ email }), method: 'POST', headers: { \"Content-Type\": \"application/json\" } })\r\n            .then((res) => res.json()).then((profile) => {\r\n                console.log(profile)\r\n                return firebase.auth().currentUser.getIdToken(true)\r\n                    .then((idToken) => fetch(\"https://noti.kihtrak.com/removeUserFromProject\", { \r\n                        body: JSON.stringify({ idToken, project: projTitle, uid:profile.uid }), \r\n                        method: 'POST', \r\n                        headers: { \"Content-Type\": \"application/json\" } \r\n                    }))\r\n            }).catch(e => alert(`An error occurred while attempting to remove ${email} from the project`))\r\n    }\r\n\r\n    const leaveProject = async () => {\r\n        await db.collection('Projects').doc(projTitle).update({\r\n            [groups[currentGroupNum]]: firebase.firestore.FieldValue.arrayRemove(currentUserUid)\r\n        })\r\n        await db.collection('Users').doc(currentUserUid).update({\r\n            'Projects': firebase.firestore.FieldValue.arrayRemove(projTitle)\r\n        })\r\n    }\r\n\r\n    const copyToClipboard = () => {\r\n        Platform.OS === 'web' ? Clipboard.setString(APIKey) : Share.share({message: APIKey});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Overlay isVisible={visible} onBackdropPress={toggleOverlay} ModalComponent={Platform.OS === 'web' ? WebModal : Modal} overlayStyle={[Platform.OS != 'web' ? { width: \"80%\", margin: \"30%\", maxWidth: 400 /*,flexGrow:1,flex:1,*/ } : {}, { backgroundColor: \"red\", borderRadius: 10, bottom: \"20%\" }]}>\r\n                <View>\r\n                    <View style={styles.textInputBox}>\r\n                        <TextInput\r\n                            placeholder=\"Email\"\r\n                            placeholderTextColor=\"white\"\r\n                            autoCapitalize=\"none\"\r\n                            style={styles.textInput}\r\n                            onChangeText={setEmail}\r\n                            value={email}\r\n                        />\r\n                    </View>\r\n                    {errorMessage != '' &&\r\n                        <Text style={styles.errorMessage}>\r\n                            {errorMessage}\r\n                        </Text>}\r\n                    <Button\r\n                        title=\"Add User\"\r\n                        onPress={addUser}\r\n                    />\r\n                </View>\r\n            </Overlay>\r\n            <ScrollView contentContainerStyle={styles.container}>\r\n                <View style={{width:\"100%\"}}>\r\n                    {(() => {\r\n                        let userElements = []\r\n                        for(let itemIndex in users){\r\n                            let item = users[itemIndex]\r\n                            let controller\r\n                            userElements.push(<ListItem key={item.profile.email} style={[styles.listItem, {zIndex: -1*itemIndex}]} bottomDivider topDivider>\r\n                                <Avatar source={{ uri: item.profile.photoURL }} title={item.profile.email.substring(0,2)} rounded />\r\n                                <ListItem.Content>\r\n                                    <ListItem.Title>{item.profile.displayName}</ListItem.Title>\r\n                                    <ListItem.Subtitle adjustsFontSizeToFit numberOfLines={1}>{item.profile.email}</ListItem.Subtitle>\r\n                                </ListItem.Content>\r\n                                <DropDownPicker disabled={currentGroupNum > 0 || (currentUserUid == item.profile.uid && !canLeave)} items={[...groups, \"Remove\"].map(el => ({ label: el, value: el }))} defaultValue={item.group} containerStyle={{ flexGrow: .5 }} itemStyle={{overflow: \"visible\"}} controller={instance => controller = instance} onChangeItem={(el)=>{\r\n                                    const {value:newValue} = el\r\n                                    console.log(newValue)\r\n                                    if(newValue == \"Remove\"){\r\n                                        alert(`Remove ${item.profile.email}`, `Are you sure you want remove ${item.profile.email} from this project?`,\r\n                                            [{\r\n                                                text: 'Remove',\r\n                                                onPress: async () => {\r\n                                                    removeUser(item.profile.email)\r\n                                                },\r\n                                                style: \"destructive\"\r\n                                            }, \r\n                                            { text: 'Cancel', style: 'cancel',\r\n                                                onPress: ()=>{\r\n                                                    controller.selectItem(item.group)\r\n                                                }\r\n                                            }],\r\n                                            { cancelable: true, onDismiss:()=>{\r\n                                                controller.selectItem(item.group)\r\n                                            }}\r\n                                        );\r\n                                    }else{\r\n                                        const updateObj = {}\r\n                                        groups.forEach(el => { updateObj[el] = firebase.firestore.FieldValue.arrayRemove(item.profile.uid) })\r\n                                        updateObj[newValue] = firebase.firestore.FieldValue.arrayUnion(item.profile.uid)\r\n                                        db.collection('Projects').doc(projTitle).update(updateObj)\r\n                                    }\r\n                                }}/>\r\n                            </ListItem>)\r\n                        }\r\n                        if(userElements.length==0){\r\n                            return <ActivityIndicator size=\"large\" style={{padding:10}}/>\r\n                        }\r\n                        return userElements\r\n                    })()}\r\n                </View>\r\n                {/* <FlatList\r\n                    style={{ width: \"100%\", maxHeight: \"60%\" }}\r\n                    data={users}\r\n                    renderItem={({ item, index }) => {\r\n                        //console.log(item)\r\n                        return (<View style={{zIndex:-999999*index}}><ListItem style={styles.listItem} bottomDivider topDivider>\r\n                            <Avatar source={{ uri: item.profile.photoURL }} rounded />\r\n                            <ListItem.Content>\r\n                                <ListItem.Title>{item.profile.displayName}</ListItem.Title>\r\n                                <ListItem.Subtitle adjustsFontSizeToFit numberOfLines={1}>{item.profile.email}</ListItem.Subtitle>\r\n                            </ListItem.Content>\r\n                            <DropDownPicker disabled={currentGroupNum < 0} items={groups.map(el => ({ label: el, value: el }))} defaultValue={item.group} containerStyle={{ flexGrow: .5 }} style={{zIndex:999999*index}}/>\r\n                        </ListItem></View>)\r\n                    }}\r\n                    keyExtractor={item => item.profile.uid}\r\n                    ListEmptyComponent={<View style={{ flex: 1, flexGrow: 1, justifyContent: 'center', alignItems: 'center', padding: 20 }}><ActivityIndicator size=\"large\" /><Text>Populating with members...</Text></View>}\r\n                /> */}\r\n                <ListItem style={[{ zIndex: -9 }, styles.listItem]} bottomDivider topDivider disabled={currentGroupNum > 0} onPress={toggleOverlay}>\r\n                    <Icon name='plus' type='ant-design' color='blue' />\r\n                    <ListItem.Content>\r\n                        <ListItem.Title>Add User</ListItem.Title>\r\n                    </ListItem.Content>\r\n                </ListItem>\r\n                {(() => {\r\n                    const arr = []\r\n                    for (let groupIndex in groups) {\r\n                        // console.log(`${groupIndex} - ${currentGroupNum}`)\r\n                        arr.push(<View key={groupIndex} style={[styles.listItem, styles.descContainer]}>\r\n                            <Text style={[groupIndex == currentGroupNum ? { color: 'blue' } : {}, styles.groupTitle, styles.groupText]}>{groups[groupIndex]}</Text>\r\n                            <Text style={[styles.groupDesc, styles.groupText]}>{groupDescriptions[groupIndex]}</Text>\r\n                        </View>)\r\n                    }\r\n                    return arr\r\n                })()}\r\n                {APIKey &&\r\n                    <TouchableOpacity onPress={()=>{showAPIKey ? copyToClipboard() : setShowAPIKey(true)}} style={styles.codeContainer}>\r\n                        <Text style={styles.code}>{showAPIKey ? APIKey : \"Click to show API key\"}</Text>\r\n                    </TouchableOpacity>}\r\n                {(!APIKey || showAPIKey) && <Button\r\n                    disabled={currentGroupNum > 0}\r\n                    containerStyle={styles.btnContainer}\r\n                    title={APIKey?\"Disable API Key\":\"Enable API Key\"}\r\n                    buttonStyle={APIKey?styles.leaveButton:styles.keyButton}\r\n                    onPress={APIKeyToggle}\r\n                />}\r\n                <Button\r\n                    disabled={currentGroupNum > 1}\r\n                    containerStyle={styles.btnContainer}\r\n                    title=\"Delete Notifications\"\r\n                    buttonStyle={styles.deleteButton}\r\n                    onPress={deleteNotifications}\r\n                />\r\n                <Button\r\n                    disabled={!canLeave}\r\n                    containerStyle={styles.btnContainer}\r\n                    title={`Leave Project`}\r\n                    buttonStyle={styles.leaveButton}\r\n                    onPress={leaveProject}\r\n                />\r\n                {!canLeave && <Text style={styles.explanationText}>You are the only owner, you can't leave without appointing a new owner</Text>}\r\n                <Button\r\n                    disabled={currentGroupNum > 0}\r\n                    containerStyle={styles.btnContainer}\r\n                    title=\"Delete Project\"\r\n                    buttonStyle={styles.deleteButton}\r\n                    onPress={deleteProject}\r\n                />\r\n            </ScrollView>\r\n        </>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        //flex: 1,\r\n        // justifyContent: 'center',\r\n        paddingBottom:20,\r\n        alignItems: \"center\"\r\n    },\r\n    deleteButton: {\r\n        backgroundColor: \"red\"\r\n    },\r\n    leaveButton: {\r\n        backgroundColor: \"blue\"\r\n    },\r\n    keyButton: {\r\n        backgroundColor: \"teal\"\r\n    },\r\n    btnContainer: { \r\n        marginTop: 20, \r\n        width: \"90%\", \r\n        maxWidth: 600 \r\n    },\r\n    listItem: {\r\n        width: \"100%\",\r\n        //zIndex:-1\r\n    },\r\n    descContainer: {\r\n        flexGrow: 1,\r\n        flexDirection: \"row\",\r\n        padding: 10,\r\n        zIndex: -99\r\n    },\r\n    groupTitle: {\r\n        marginRight: 10,\r\n        flexBasis: 100,\r\n    },\r\n    groupText: {\r\n        fontSize: 15,\r\n    },\r\n    groupDesc: {\r\n        flexShrink: 1,\r\n        flexWrap: 'wrap'\r\n    },\r\n    explanationText: {\r\n        textAlign: \"center\",\r\n        marginHorizontal: 20\r\n    },\r\n    textInputBox: {\r\n        borderBottomColor: \"white\",\r\n        borderBottomWidth: 1,\r\n        marginBottom: 20,\r\n        alignSelf: 'stretch',\r\n    },\r\n    textInput: {\r\n        fontSize: 24,\r\n        height: 40,\r\n        fontWeight: '200',\r\n        marginBottom: 0,\r\n        color: \"white\",\r\n        textAlign: 'center'\r\n    },\r\n    codeContainer: {\r\n        backgroundColor: '#1E1E1E',\r\n        padding: 16,\r\n        borderRadius: 8,\r\n        margin: 16,\r\n        marginBottom: 6,\r\n        maxWidth: \"90%\"\r\n    },\r\n    code: {\r\n        color: '#FFFFFF',\r\n        fontFamily: 'Courier New',\r\n        fontSize: 14,\r\n        lineHeight: 20,\r\n    },\r\n})","import React, {useEffect, useRef} from 'react';\r\nimport { Button, Text, TextInput, View, useWindowDimensions, Dimensions, Platform, Alert } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createDrawerNavigator,   DrawerContentScrollView,  DrawerItemList, } from '@react-navigation/drawer';\r\nimport { ProjectsContext, DeepLinkContext, MainStackLoadedContext } from './utils/contexts'\r\nimport FlashMessage from \"react-native-flash-message\";\r\nimport { showMessage, hideMessage } from \"react-native-flash-message\";\r\nimport * as Linking from 'expo-linking';\r\nimport { useLinkTo  } from '@react-navigation/native';\r\nimport Constants from 'expo-constants';\r\nimport useRootNavigation from './utils/useRootNavigation'\r\nimport * as SplashScreen from 'expo-splash-screen';\r\n\r\nimport Loading from './screens/Loading'\r\nimport Login from './screens/Login'\r\nimport SignUp from './screens/SignUp'\r\nimport Home from './screens/Home'\r\nimport Settings from './screens/Settings'\r\nimport Project from './screens/Project'\r\nimport Notification from './screens/Notification'\r\nimport ProjectOptions from './screens/ProjectOptions'\r\n\r\nimport * as Notifications from 'expo-notifications'\r\n\r\n// import 'expo-firestore-offline-persistence'\r\nimport firebase from \"firebase\";\r\n// import 'firebase/firestore'\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBc_AtukKnVqdNYRefB-NtZLy5otD8KMvA\",\r\n  authDomain: \"notibotapp.firebaseapp.com\",\r\n  databaseURL: \"https://notibotapp.firebaseio.com\",\r\n  projectId: \"notibotapp\",\r\n  storageBucket: \"notibotapp.appspot.com\",\r\n};\r\n\r\ntry {\r\n  firebase.initializeApp(firebaseConfig);\r\n} catch (err) {\r\n    // ignore app already initialized error in stack\r\n}\r\n// firebase.firestore().enablePersistence()\r\n\r\nconst Stack = createStackNavigator();\r\nconst Drawer = createDrawerNavigator();\r\nconst db = firebase.firestore();\r\n\r\nconst prefix = Linking.createURL('/');\r\n\r\nexport default function App() {\r\n  const projectsData = React.useRef({});\r\n  const userData = React.useRef({});\r\n  const callbacks = React.useRef({});\r\n  const listeners = React.useRef({});\r\n  const notificationListener = useRef();\r\n  const responseListener = useRef();\r\n  const mainStackLoadedRef = useRef({\r\n    mainStackLoaded: () =>{\r\n      setTimeout(()=>SplashScreen.hideAsync().catch(),500)\r\n      mainStackLoadedRef.current.loaded = true\r\n      if(mainStackLoadedRef.current.queue)\r\n        mainStackLoadedRef.current.queue()\r\n    },\r\n    loaded:false,\r\n    projectsLoaded:false,\r\n    queue:null\r\n  });\r\n  const [initialDeepLink, setInitialDeepLink] = React.useState(null);\r\n  // don't use hook on web because resizing is a common action and the site shouldn't reload on every resize\r\n  const dimensionWidth = Platform.OS === 'web'?Dimensions.get('window').width:useWindowDimensions().width; \r\n  const isLargeScreen = dimensionWidth >= 768;\r\n  // const linkTo = useLinkTo();\r\n  const navigation = useRootNavigation();\r\n\r\n  const openLinkInApp = (appUrl)=>{\r\n    if(mainStackLoadedRef.current.loaded)\r\n      navigation.linkTo(appUrl)\r\n    else\r\n      mainStackLoadedRef.current.queue = ()=> navigation.linkTo(appUrl)\r\n  }\r\n  \r\n  // Set up notifications\r\n  React.useLayoutEffect(() => {\r\n    // setTimeout(()=>navigation.linkTo(`Main/Projects/Notification?projTitle=testt&timestamp=1621574434297`),5*1000)\r\n\r\n    if (Constants.isDevice && Platform.OS !== 'web') { //Expo's support for web push is \"pending\"\r\n      notificationListener.current = Notifications.addNotificationReceivedListener(notification => {\r\n        const notifContent = notification.request.content\r\n        // console.log(notification)\r\n        showMessage({\r\n          message: notifContent.title,\r\n          description: notifContent.body,\r\n          type: \"info\",\r\n          hideStatusBar:true,\r\n          onPress: ()=>{\r\n            navigation.linkTo(`/Main/Projects/Notification?projTitle=${notifContent.data?.project}&timestamp=${notifContent.data?.firebaseData?.timestamp}`)\r\n          }\r\n        });\r\n      });\r\n\r\n      responseListener.current = Notifications.addNotificationResponseReceivedListener(async response => {\r\n        const notifMetaData = response.notification.request.content.data\r\n        if (response.actionIdentifier == \"deleteNotif\"){\r\n          // Alert.alert(\"delete\")\r\n          return db.collection('Projects').doc(notifMetaData?.project).set({\r\n            'Notifications':firebase.firestore.FieldValue.arrayRemove(notifMetaData?.firebaseData)\r\n          }, { merge: true })\r\n        }\r\n        let url = \"\"\r\n        if(response.actionIdentifier == \"webhookAction\"){\r\n          url = notifMetaData?.firebaseData?.webhook\r\n        }else if(response.actionIdentifier == \"webhookReply\"){\r\n          url = notifMetaData?.firebaseData?.webhook + response?.userText\r\n        }else{ // response.actionIdentifier == Notifications.DEFAULT_ACTION_IDENTIFIER\r\n          return openLinkInApp(encodeURI(`Main/Projects/Notification?projTitle=${notifMetaData?.project}&timestamp=${notifMetaData?.firebaseData?.timestamp}`))\r\n        }\r\n        const fetchCallback = (resStr, errored) =>{\r\n          showMessage({\r\n            message: errored?\"Webhook call failed!\":\"Webhook called!\",\r\n            type: errored?\"danger\":\"success\",\r\n            hideStatusBar:true,\r\n          });\r\n          openLinkInApp(encodeURI(`Main/Projects/Notification?projTitle=${notifMetaData?.project}&timestamp=${notifMetaData?.firebaseData?.timestamp}&resValue=${resStr}`))\r\n        }\r\n        fetch(url).then(res=>res.text())\r\n        .then(fetchCallback)\r\n        .catch((e)=>fetchCallback(e.toString(), true))\r\n      });\r\n\r\n      return () => {\r\n        Notifications.removeNotificationSubscription(notificationListener.current);\r\n        Notifications.removeNotificationSubscription(responseListener.current);\r\n      };\r\n    }\r\n  }, [true])\r\n\r\n  const [state, dispatch] = React.useReducer(\r\n    (prevState, action) => {\r\n      switch (action.type) {\r\n        case 'SIGN_IN':\r\n          return {\r\n            ...prevState,\r\n            isLoading: false,\r\n            isSignedIn: action.isSignedIn,\r\n          };\r\n        case 'SIGN_OUT':\r\n          return {\r\n            ...prevState,\r\n            isLoading: false,\r\n            isSignedIn: false,\r\n          };\r\n      }\r\n    },\r\n    {\r\n      isLoading: true,\r\n      isSignedIn: false,\r\n    }\r\n  );\r\n\r\n  React.useLayoutEffect(()=>{\r\n    Linking.getInitialURL().then((url) => {\r\n      setInitialDeepLink(url)\r\n    });\r\n  },[true])\r\n\r\n\r\n  React.useLayoutEffect(() => {\r\n    try{\r\n      firebase.auth().onAuthStateChanged((user) => {\r\n        console.log(`Auth: ${!!user}`)\r\n        dispatch({ type: 'SIGN_IN', isSignedIn: !!user });\r\n        if(user){\r\n          setTimeout(()=>SplashScreen.hideAsync().catch(),3000)\r\n        }\r\n      })\r\n    }catch(e){\r\n      SplashScreen.hideAsync().catch()\r\n    }\r\n  }, []);\r\n\r\n  React.useLayoutEffect(()=>{\r\n    SplashScreen.preventAutoHideAsync();\r\n  },[true])\r\n\r\n  //const projectsData = {}\r\n\r\n  const projContext = {\r\n    projectsData: projectsData.current,\r\n    listenToProject: (projectName, callback, callOnInit)=>{\r\n      // console.log(JSON.stringify(callbacks.current))\r\n      if(callbacks.current[projectName]){\r\n        console.log(`listener already exists for ${projectName}`)\r\n        callbacks.current[projectName].push(callback)\r\n        if(callOnInit && projectName in projectsData.current)\r\n          callback(projectsData.current[projectName])\r\n      }else{\r\n        console.log(`creating listener for ${projectName}`)\r\n        callbacks.current[projectName] = [callback]\r\n        listeners.current[projectName] = db.collection('Projects').doc(projectName).onSnapshot({\r\n          includeMetadataChanges: true\r\n        },(doc) => {\r\n          const source = doc.metadata.hasPendingWrites ? \"Local\" : \"Server\";\r\n          // console.log(source)\r\n          if(source == \"Server\"){\r\n            // console.log(`Snapshot: ${projectName} - ${doc.data()}`)\r\n            projectsData.current[projectName] = doc.data()\r\n            for(let invCallback of callbacks.current[projectName])\r\n              invCallback(doc.data())\r\n          }\r\n        },\r\n        error=>{\r\n          // console.warn(error)\r\n          projectsData.current[projectName] = null\r\n          for(let invCallback of callbacks.current[projectName])\r\n            invCallback(null)\r\n        }\r\n        )\r\n      }\r\n    },\r\n    stopListeningToProject: (projectName, callback)=>{\r\n      // console.log(`Stopping listener - ${projectName}:${callback}\\n${callbacks.current[projectName]}`)\r\n      if(!callbacks.current[projectName]){\r\n        console.warn(\"Listener doesn't exist. How did this happen?\")\r\n      }\r\n      const index = callbacks.current[projectName].indexOf(callback)\r\n      console.log(`Index of callback in array: ${index}`)\r\n      callbacks.current[projectName].splice(index,1)\r\n      if(callbacks.current[projectName].length == 0){\r\n        callbacks.current[projectName] = null\r\n        listeners.current[projectName]();\r\n      }\r\n    }\r\n  }\r\n\r\n  const ProjectStack = () => {\r\n    return (<Stack.Navigator \r\n      screenOptions={{\r\n        headerStyle: {\r\n          backgroundColor: 'red',\r\n        },\r\n        headerTintColor: '#fff',\r\n        headerTitleStyle: {\r\n          fontWeight: 'bold',\r\n        },\r\n      }}\r\n    >\r\n      <Stack.Screen name=\"Project\" component={Project}/>\r\n      <Stack.Screen name=\"ProjectOptions\" component={ProjectOptions} />\r\n      <Stack.Screen name=\"Notification\" component={Notification} />\r\n    </Stack.Navigator>)\r\n  }\r\n\r\n  const DrawerNav = ()=> {\r\n    return(<Drawer.Navigator\r\n      // openByDefault\r\n      drawerType={isLargeScreen ? 'permanent' : 'back'}\r\n      drawerStyle={isLargeScreen ? null : { width: '100%' }}\r\n      overlayColor=\"transparent\"\r\n      drawerContent={(props) => {\r\n        return (<Home {...props} />)\r\n      }}\r\n      screenOptions={{\r\n        gestureEnabled:true\r\n      }}\r\n    >\r\n      <Drawer.Screen name=\"Projects\" component={ProjectStack}/>\r\n    </Drawer.Navigator>)\r\n  }\r\n\r\n  return (<NavigationContainer ref={navigation.navigationRef} linking={{\r\n    prefixes: [prefix, 'http://localhost:19006', 'https://notibot.kihtrak.com'],\r\n    screens: {\r\n      ProjectsDrawerScreen:{\r\n        path: '',\r\n        screens: {\r\n          Projects:{\r\n            path: '',\r\n            screens: {\r\n              Project: 'project/:title',\r\n              Notification: 'notification/:projTitle/:timestamp/:resValue?/:index?',\r\n            }\r\n          }\r\n        },\r\n      },\r\n    },\r\n    subscribe(listener) {\r\n      const onReceiveURL = ({ url }) => {\r\n        listener(url)\r\n        console.log(`setInitialDeepLink(${url})`)\r\n        if(url!=initialDeepLink)\r\n          setInitialDeepLink(url)\r\n      };\r\n\r\n      // Linking.getInitialURL().then((url) => {\r\n      //   console.log(`setInitialDeepLinkbyutnotreally(${url})`)\r\n      // });\r\n\r\n      // Listen to incoming links from deep linking\r\n      Linking.addEventListener('url', onReceiveURL);\r\n\r\n      return () => {\r\n        // Clean up the event listeners\r\n        Linking.removeEventListener('url', onReceiveURL);\r\n      };\r\n    },\r\n  }}>\r\n    <MainStackLoadedContext.Provider value={mainStackLoadedRef}>\r\n      <DeepLinkContext.Provider value={initialDeepLink}>\r\n        <ProjectsContext.Provider value={projContext}>\r\n            <Stack.Navigator \r\n              screenOptions={{\r\n                headerStyle: {\r\n                  backgroundColor: 'red',\r\n                },\r\n                headerTintColor: '#fff',\r\n                headerTitleStyle: {\r\n                  fontWeight: 'bold',\r\n                },\r\n              }}\r\n            >\r\n              {state.isLoading ? ( \r\n                <Stack.Screen name=\"Splash\" component={Loading} options={{ headerShown:false }}/>\r\n              ) : state.isSignedIn == false ? <>\r\n                 <Stack.Screen\r\n                  name=\"SignIn\"\r\n                  component={Login}\r\n                  options={{\r\n                    headerShown:false,\r\n                // When logging out, a pop animation feels intuitive\r\n                    animationTypeForReplace: !state.isSignedIn ? 'pop' : 'push',\r\n                  }}\r\n                />\r\n                <Stack.Screen\r\n                  name=\"SignUp\"\r\n                  component={SignUp}\r\n                  options={{\r\n                    headerShown:false,\r\n                // When logging out, a pop animation feels intuitive\r\n                    animationTypeForReplace: !state.isSignedIn ? 'pop' : 'push',\r\n                  }}\r\n                />\r\n                </> : <><Stack.Screen name=\"Main\" component={DrawerNav} options={{ headerShown:false }}/>\r\n                  <Stack.Screen name=\"Settings\" component={Settings} />\r\n                {/* <Stack.Screen name=\"Projects\" component={Home} /> */}\r\n              \r\n                {/* <Stack.Screen name=\"ProjectOptions\" component={ProjectOptions} />\r\n                <Stack.Screen name=\"Notification\" component={Notification} />\r\n                <Stack.Screen name=\"Settings\" component={Settings} /> */}\r\n              </>}\r\n            </Stack.Navigator>\r\n          </ProjectsContext.Provider>\r\n        </DeepLinkContext.Provider>\r\n      </MainStackLoadedContext.Provider>\r\n      <FlashMessage position=\"top\" />\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"],"sourceRoot":""}